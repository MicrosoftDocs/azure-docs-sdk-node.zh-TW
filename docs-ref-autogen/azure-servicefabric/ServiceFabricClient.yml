### YamlMime:UniversalReference
ms.openlocfilehash: 60ae8aed3c02b778c158a591a26ee490423c2cab
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 08/12/2018
ms.locfileid: "40052677"
items:
- uid: azure-servicefabric.ServiceFabricClient
  name: ServiceFabricClient
  fullName: ServiceFabricClient
  children:
  - azure-servicefabric.ServiceFabricClient.cancelOperation
  - azure-servicefabric.ServiceFabricClient.cancelOperation_1
  - azure-servicefabric.ServiceFabricClient.cancelOperation_2
  - azure-servicefabric.ServiceFabricClient.cancelOperationWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.cancelRepairTask_1
  - azure-servicefabric.ServiceFabricClient.cancelRepairTask
  - azure-servicefabric.ServiceFabricClient.cancelRepairTask_2
  - azure-servicefabric.ServiceFabricClient.cancelRepairTaskWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.copyImageStoreContent_2
  - azure-servicefabric.ServiceFabricClient.copyImageStoreContent
  - azure-servicefabric.ServiceFabricClient.copyImageStoreContent_1
  - azure-servicefabric.ServiceFabricClient.copyImageStoreContentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.createApplication_2
  - azure-servicefabric.ServiceFabricClient.createApplication_1
  - azure-servicefabric.ServiceFabricClient.createApplication
  - azure-servicefabric.ServiceFabricClient.createApplicationWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.createComposeDeployment_1
  - azure-servicefabric.ServiceFabricClient.createComposeDeployment
  - azure-servicefabric.ServiceFabricClient.createComposeDeployment_2
  - azure-servicefabric.ServiceFabricClient.createComposeDeploymentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.createRepairTask_1
  - azure-servicefabric.ServiceFabricClient.createRepairTask
  - azure-servicefabric.ServiceFabricClient.createRepairTask_2
  - azure-servicefabric.ServiceFabricClient.createRepairTaskWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.createService_1
  - azure-servicefabric.ServiceFabricClient.createService_2
  - azure-servicefabric.ServiceFabricClient.createService
  - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_2
  - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_1
  - azure-servicefabric.ServiceFabricClient.createServiceFromTemplate
  - azure-servicefabric.ServiceFabricClient.createServiceFromTemplateWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.createServiceWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.deleteApplication
  - azure-servicefabric.ServiceFabricClient.deleteApplication_1
  - azure-servicefabric.ServiceFabricClient.deleteApplication_2
  - azure-servicefabric.ServiceFabricClient.deleteApplicationWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent
  - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_1
  - azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_2
  - azure-servicefabric.ServiceFabricClient.deleteImageStoreContentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.deleteRepairTask_2
  - azure-servicefabric.ServiceFabricClient.deleteRepairTask
  - azure-servicefabric.ServiceFabricClient.deleteRepairTask_1
  - azure-servicefabric.ServiceFabricClient.deleteRepairTaskWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.deleteService_2
  - azure-servicefabric.ServiceFabricClient.deleteService
  - azure-servicefabric.ServiceFabricClient.deleteService_1
  - azure-servicefabric.ServiceFabricClient.deleteServiceWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode
  - azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode_2
  - azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode_1
  - azure-servicefabric.ServiceFabricClient.deployedServicePackageToNodeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.disableNode
  - azure-servicefabric.ServiceFabricClient.disableNode_2
  - azure-servicefabric.ServiceFabricClient.disableNode_1
  - azure-servicefabric.ServiceFabricClient.disableNodeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.enableNode_1
  - azure-servicefabric.ServiceFabricClient.enableNode
  - azure-servicefabric.ServiceFabricClient.enableNode_2
  - azure-servicefabric.ServiceFabricClient.enableNodeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_1
  - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_2
  - azure-servicefabric.ServiceFabricClient.forceApproveRepairTask
  - azure-servicefabric.ServiceFabricClient.forceApproveRepairTaskWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getAadMetadata
  - azure-servicefabric.ServiceFabricClient.getAadMetadata_1
  - azure-servicefabric.ServiceFabricClient.getAadMetadata_2
  - azure-servicefabric.ServiceFabricClient.getAadMetadataWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationHealth_2
  - azure-servicefabric.ServiceFabricClient.getApplicationHealth_1
  - azure-servicefabric.ServiceFabricClient.getApplicationHealth
  - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationInfo_2
  - azure-servicefabric.ServiceFabricClient.getApplicationInfo
  - azure-servicefabric.ServiceFabricClient.getApplicationInfo_1
  - azure-servicefabric.ServiceFabricClient.getApplicationInfoList_1
  - azure-servicefabric.ServiceFabricClient.getApplicationInfoList
  - azure-servicefabric.ServiceFabricClient.getApplicationInfoList_2
  - azure-servicefabric.ServiceFabricClient.getApplicationInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo
  - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_2
  - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_1
  - azure-servicefabric.ServiceFabricClient.getApplicationLoadInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationManifest_1
  - azure-servicefabric.ServiceFabricClient.getApplicationManifest
  - azure-servicefabric.ServiceFabricClient.getApplicationManifest_2
  - azure-servicefabric.ServiceFabricClient.getApplicationManifestWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_1
  - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_2
  - azure-servicefabric.ServiceFabricClient.getApplicationNameInfo
  - azure-servicefabric.ServiceFabricClient.getApplicationNameInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByNameWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade
  - azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.getApplicationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getChaosReport_1
  - azure-servicefabric.ServiceFabricClient.getChaosReport_2
  - azure-servicefabric.ServiceFabricClient.getChaosReport
  - azure-servicefabric.ServiceFabricClient.getChaosReportWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterConfiguration_2
  - azure-servicefabric.ServiceFabricClient.getClusterConfiguration_1
  - azure-servicefabric.ServiceFabricClient.getClusterConfiguration
  - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1
  - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2
  - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus
  - azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatusWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterConfigurationWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterHealth
  - azure-servicefabric.ServiceFabricClient.getClusterHealth_1
  - azure-servicefabric.ServiceFabricClient.getClusterHealth_2
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_2
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_1
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunk
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterHealthChunkWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterManifest_2
  - azure-servicefabric.ServiceFabricClient.getClusterManifest
  - azure-servicefabric.ServiceFabricClient.getClusterManifest_1
  - azure-servicefabric.ServiceFabricClient.getClusterManifestWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2
  - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1
  - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress
  - azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2
  - azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDataLossProgress_2
  - azure-servicefabric.ServiceFabricClient.getDataLossProgress
  - azure-servicefabric.ServiceFabricClient.getDataLossProgress_1
  - azure-servicefabric.ServiceFabricClient.getDataLossProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1
  - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2
  - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList
  - azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByNameWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByNameWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1
  - azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getFaultOperationList_1
  - azure-servicefabric.ServiceFabricClient.getFaultOperationList_2
  - azure-servicefabric.ServiceFabricClient.getFaultOperationList
  - azure-servicefabric.ServiceFabricClient.getFaultOperationListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getImageStoreContent
  - azure-servicefabric.ServiceFabricClient.getImageStoreContent_1
  - azure-servicefabric.ServiceFabricClient.getImageStoreContent_2
  - azure-servicefabric.ServiceFabricClient.getImageStoreContentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_1
  - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_2
  - azure-servicefabric.ServiceFabricClient.getImageStoreRootContent
  - azure-servicefabric.ServiceFabricClient.getImageStoreRootContentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeHealth
  - azure-servicefabric.ServiceFabricClient.getNodeHealth_2
  - azure-servicefabric.ServiceFabricClient.getNodeHealth_1
  - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeInfo
  - azure-servicefabric.ServiceFabricClient.getNodeInfo_1
  - azure-servicefabric.ServiceFabricClient.getNodeInfo_2
  - azure-servicefabric.ServiceFabricClient.getNodeInfoList_1
  - azure-servicefabric.ServiceFabricClient.getNodeInfoList_2
  - azure-servicefabric.ServiceFabricClient.getNodeInfoList
  - azure-servicefabric.ServiceFabricClient.getNodeInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_1
  - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo
  - azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_2
  - azure-servicefabric.ServiceFabricClient.getNodeLoadInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_1
  - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress
  - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_2
  - azure-servicefabric.ServiceFabricClient.getNodeTransitionProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionHealth_1
  - azure-servicefabric.ServiceFabricClient.getPartitionHealth_2
  - azure-servicefabric.ServiceFabricClient.getPartitionHealth
  - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionInfo
  - azure-servicefabric.ServiceFabricClient.getPartitionInfo_1
  - azure-servicefabric.ServiceFabricClient.getPartitionInfo_2
  - azure-servicefabric.ServiceFabricClient.getPartitionInfoList
  - azure-servicefabric.ServiceFabricClient.getPartitionInfoList_1
  - azure-servicefabric.ServiceFabricClient.getPartitionInfoList_2
  - azure-servicefabric.ServiceFabricClient.getPartitionInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_2
  - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation
  - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_1
  - azure-servicefabric.ServiceFabricClient.getPartitionLoadInformationWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_1
  - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_2
  - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress
  - azure-servicefabric.ServiceFabricClient.getPartitionRestartProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2
  - azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_2
  - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_1
  - azure-servicefabric.ServiceFabricClient.getQuorumLossProgress
  - azure-servicefabric.ServiceFabricClient.getQuorumLossProgressWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getRepairTaskList_2
  - azure-servicefabric.ServiceFabricClient.getRepairTaskList
  - azure-servicefabric.ServiceFabricClient.getRepairTaskList_1
  - azure-servicefabric.ServiceFabricClient.getRepairTaskListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getReplicaHealth_1
  - azure-servicefabric.ServiceFabricClient.getReplicaHealth
  - azure-servicefabric.ServiceFabricClient.getReplicaHealth_2
  - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getReplicaHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getReplicaInfo_2
  - azure-servicefabric.ServiceFabricClient.getReplicaInfo
  - azure-servicefabric.ServiceFabricClient.getReplicaInfo_1
  - azure-servicefabric.ServiceFabricClient.getReplicaInfoList_2
  - azure-servicefabric.ServiceFabricClient.getReplicaInfoList_1
  - azure-servicefabric.ServiceFabricClient.getReplicaInfoList
  - azure-servicefabric.ServiceFabricClient.getReplicaInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getReplicaInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceDescription_1
  - azure-servicefabric.ServiceFabricClient.getServiceDescription_2
  - azure-servicefabric.ServiceFabricClient.getServiceDescription
  - azure-servicefabric.ServiceFabricClient.getServiceDescriptionWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceHealth
  - azure-servicefabric.ServiceFabricClient.getServiceHealth_2
  - azure-servicefabric.ServiceFabricClient.getServiceHealth_1
  - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1
  - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2
  - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy
  - azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceInfo
  - azure-servicefabric.ServiceFabricClient.getServiceInfo_2
  - azure-servicefabric.ServiceFabricClient.getServiceInfo_1
  - azure-servicefabric.ServiceFabricClient.getServiceInfoList_2
  - azure-servicefabric.ServiceFabricClient.getServiceInfoList
  - azure-servicefabric.ServiceFabricClient.getServiceInfoList_1
  - azure-servicefabric.ServiceFabricClient.getServiceInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceManifest
  - azure-servicefabric.ServiceFabricClient.getServiceManifest_1
  - azure-servicefabric.ServiceFabricClient.getServiceManifest_2
  - azure-servicefabric.ServiceFabricClient.getServiceManifestWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceNameInfo_1
  - azure-servicefabric.ServiceFabricClient.getServiceNameInfo_2
  - azure-servicefabric.ServiceFabricClient.getServiceNameInfo
  - azure-servicefabric.ServiceFabricClient.getServiceNameInfoWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList
  - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_2
  - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_1
  - azure-servicefabric.ServiceFabricClient.getServiceTypeInfoListWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommandWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery
  - azure-servicefabric.ServiceFabricClient.invokeInfrastructureQueryWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.provisionApplicationType_1
  - azure-servicefabric.ServiceFabricClient.provisionApplicationType_2
  - azure-servicefabric.ServiceFabricClient.provisionApplicationType
  - azure-servicefabric.ServiceFabricClient.provisionApplicationTypeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.provisionCluster
  - azure-servicefabric.ServiceFabricClient.provisionCluster_1
  - azure-servicefabric.ServiceFabricClient.provisionCluster_2
  - azure-servicefabric.ServiceFabricClient.provisionClusterWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.recoverAllPartitions
  - azure-servicefabric.ServiceFabricClient.recoverAllPartitions_1
  - azure-servicefabric.ServiceFabricClient.recoverAllPartitions_2
  - azure-servicefabric.ServiceFabricClient.recoverAllPartitionsWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.recoverPartition
  - azure-servicefabric.ServiceFabricClient.recoverPartition_2
  - azure-servicefabric.ServiceFabricClient.recoverPartition_1
  - azure-servicefabric.ServiceFabricClient.recoverPartitionWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.recoverServicePartitions
  - azure-servicefabric.ServiceFabricClient.recoverServicePartitions_1
  - azure-servicefabric.ServiceFabricClient.recoverServicePartitions_2
  - azure-servicefabric.ServiceFabricClient.recoverServicePartitionsWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_1
  - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions
  - azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_2
  - azure-servicefabric.ServiceFabricClient.recoverSystemPartitionsWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.removeComposeDeployment_2
  - azure-servicefabric.ServiceFabricClient.removeComposeDeployment
  - azure-servicefabric.ServiceFabricClient.removeComposeDeployment_1
  - azure-servicefabric.ServiceFabricClient.removeComposeDeploymentWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.removeNodeState_1
  - azure-servicefabric.ServiceFabricClient.removeNodeState_2
  - azure-servicefabric.ServiceFabricClient.removeNodeState
  - azure-servicefabric.ServiceFabricClient.removeNodeStateWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.removeReplica_1
  - azure-servicefabric.ServiceFabricClient.removeReplica_2
  - azure-servicefabric.ServiceFabricClient.removeReplica
  - azure-servicefabric.ServiceFabricClient.removeReplicaWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportApplicationHealth
  - azure-servicefabric.ServiceFabricClient.reportApplicationHealth_2
  - azure-servicefabric.ServiceFabricClient.reportApplicationHealth_1
  - azure-servicefabric.ServiceFabricClient.reportApplicationHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportClusterHealth
  - azure-servicefabric.ServiceFabricClient.reportClusterHealth_2
  - azure-servicefabric.ServiceFabricClient.reportClusterHealth_1
  - azure-servicefabric.ServiceFabricClient.reportClusterHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1
  - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2
  - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth
  - azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1
  - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2
  - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth
  - azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportNodeHealth
  - azure-servicefabric.ServiceFabricClient.reportNodeHealth_1
  - azure-servicefabric.ServiceFabricClient.reportNodeHealth_2
  - azure-servicefabric.ServiceFabricClient.reportNodeHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportPartitionHealth
  - azure-servicefabric.ServiceFabricClient.reportPartitionHealth_1
  - azure-servicefabric.ServiceFabricClient.reportPartitionHealth_2
  - azure-servicefabric.ServiceFabricClient.reportPartitionHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportReplicaHealth
  - azure-servicefabric.ServiceFabricClient.reportReplicaHealth_2
  - azure-servicefabric.ServiceFabricClient.reportReplicaHealth_1
  - azure-servicefabric.ServiceFabricClient.reportReplicaHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.reportServiceHealth
  - azure-servicefabric.ServiceFabricClient.reportServiceHealth_2
  - azure-servicefabric.ServiceFabricClient.reportServiceHealth_1
  - azure-servicefabric.ServiceFabricClient.reportServiceHealthWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.resetPartitionLoad_1
  - azure-servicefabric.ServiceFabricClient.resetPartitionLoad_2
  - azure-servicefabric.ServiceFabricClient.resetPartitionLoad
  - azure-servicefabric.ServiceFabricClient.resetPartitionLoadWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.resolveService_1
  - azure-servicefabric.ServiceFabricClient.resolveService_2
  - azure-servicefabric.ServiceFabricClient.resolveService
  - azure-servicefabric.ServiceFabricClient.resolveServiceWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage
  - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_1
  - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_2
  - azure-servicefabric.ServiceFabricClient.restartDeployedCodePackageWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.restartNode
  - azure-servicefabric.ServiceFabricClient.restartNode_1
  - azure-servicefabric.ServiceFabricClient.restartNode_2
  - azure-servicefabric.ServiceFabricClient.restartNodeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.restartReplica_1
  - azure-servicefabric.ServiceFabricClient.restartReplica_2
  - azure-servicefabric.ServiceFabricClient.restartReplica
  - azure-servicefabric.ServiceFabricClient.restartReplicaWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade
  - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.resumeApplicationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade
  - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_1
  - azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_2
  - azure-servicefabric.ServiceFabricClient.resumeClusterUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade
  - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade
  - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1
  - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2
  - azure-servicefabric.ServiceFabricClient.rollbackClusterUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.constructor
  - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade
  - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.startApplicationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startChaos
  - azure-servicefabric.ServiceFabricClient.startChaos_1
  - azure-servicefabric.ServiceFabricClient.startChaos_2
  - azure-servicefabric.ServiceFabricClient.startChaosWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade
  - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startClusterUpgrade_2
  - azure-servicefabric.ServiceFabricClient.startClusterUpgrade
  - azure-servicefabric.ServiceFabricClient.startClusterUpgrade_1
  - azure-servicefabric.ServiceFabricClient.startClusterUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1
  - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2
  - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade
  - azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startDataLoss_1
  - azure-servicefabric.ServiceFabricClient.startDataLoss
  - azure-servicefabric.ServiceFabricClient.startDataLoss_2
  - azure-servicefabric.ServiceFabricClient.startDataLossWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startNodeTransition
  - azure-servicefabric.ServiceFabricClient.startNodeTransition_2
  - azure-servicefabric.ServiceFabricClient.startNodeTransition_1
  - azure-servicefabric.ServiceFabricClient.startNodeTransitionWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startPartitionRestart_1
  - azure-servicefabric.ServiceFabricClient.startPartitionRestart
  - azure-servicefabric.ServiceFabricClient.startPartitionRestart_2
  - azure-servicefabric.ServiceFabricClient.startPartitionRestartWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.startQuorumLoss
  - azure-servicefabric.ServiceFabricClient.startQuorumLoss_1
  - azure-servicefabric.ServiceFabricClient.startQuorumLoss_2
  - azure-servicefabric.ServiceFabricClient.startQuorumLossWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.stopChaos
  - azure-servicefabric.ServiceFabricClient.stopChaos_1
  - azure-servicefabric.ServiceFabricClient.stopChaos_2
  - azure-servicefabric.ServiceFabricClient.stopChaosWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType
  - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_2
  - azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_1
  - azure-servicefabric.ServiceFabricClient.unprovisionApplicationTypeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.unprovisionCluster
  - azure-servicefabric.ServiceFabricClient.unprovisionCluster_2
  - azure-servicefabric.ServiceFabricClient.unprovisionCluster_1
  - azure-servicefabric.ServiceFabricClient.unprovisionClusterWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_1
  - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade
  - azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_2
  - azure-servicefabric.ServiceFabricClient.updateApplicationUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade
  - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_1
  - azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_2
  - azure-servicefabric.ServiceFabricClient.updateClusterUpgradeWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState
  - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_2
  - azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_1
  - azure-servicefabric.ServiceFabricClient.updateRepairExecutionStateWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy
  - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1
  - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2
  - azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicyWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.updateService
  - azure-servicefabric.ServiceFabricClient.updateService_1
  - azure-servicefabric.ServiceFabricClient.updateService_2
  - azure-servicefabric.ServiceFabricClient.updateServiceWithHttpOperationResponse
  - azure-servicefabric.ServiceFabricClient.uploadFile
  - azure-servicefabric.ServiceFabricClient.uploadFile_1
  - azure-servicefabric.ServiceFabricClient.uploadFile_2
  - azure-servicefabric.ServiceFabricClient.uploadFileWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelOperation
  name: cancelOperation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelOperation(operationId: string, force: boolean, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: force
      type:
      - boolean
      description: >
        指出要依正常程序回復，並清除內部的系統狀態是否修改所執行的使用者引起的作業。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelOperation_1
  name: cancelOperation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelOperation(operationId: string, force: boolean, callback: ServiceCallback<void>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: force
      type:
      - boolean
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelOperation_2
  name: cancelOperation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelOperation(operationId: string, force: boolean, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: force
      type:
      - boolean
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelOperationWithHttpOperationResponse
  name: cancelOperationWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelOperationWithHttpOperationResponse(operationId: string, force: boolean, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: force
      type:
      - boolean
      description: >
        指出要依正常程序回復，並清除內部的系統狀態是否修改所執行的使用者引起的作業。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask_1
  name: cancelRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskCancelDescription
      type:
      - azure-servicefabric.RepairTaskCancelDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask
  name: cancelRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options?: function)'
    parameters:
    - id: repairTaskCancelDescription
      type:
      - azure-servicefabric.RepairTaskCancelDescription
      description: >
        描述取消的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelRepairTask_2
  name: cancelRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options: function, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskCancelDescription
      type:
      - azure-servicefabric.RepairTaskCancelDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.cancelRepairTaskWithHttpOperationResponse
  name: cancelRepairTaskWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function cancelRepairTaskWithHttpOperationResponse(repairTaskCancelDescription: RepairTaskCancelDescription, options?: function)'
    parameters:
    - id: repairTaskCancelDescription
      type:
      - azure-servicefabric.RepairTaskCancelDescription
      description: >
        描述取消的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent_2
  name: copyImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: imageStoreCopyDescription
      type:
      - azure-servicefabric.ImageStoreCopyDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent
  name: copyImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options?: function)'
    parameters:
    - id: imageStoreCopyDescription
      type:
      - azure-servicefabric.ImageStoreCopyDescription
      description: >
        描述映像存放區的複製描述。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContent_1
  name: copyImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: imageStoreCopyDescription
      type:
      - azure-servicefabric.ImageStoreCopyDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.copyImageStoreContentWithHttpOperationResponse
  name: copyImageStoreContentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function copyImageStoreContentWithHttpOperationResponse(imageStoreCopyDescription: ImageStoreCopyDescription, options?: function)'
    parameters:
    - id: imageStoreCopyDescription
      type:
      - azure-servicefabric.ImageStoreCopyDescription
      description: >
        描述映像存放區的複製描述。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createApplication_2
  name: createApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createApplication(applicationDescription: ApplicationDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationDescription
      type:
      - azure-servicefabric.ApplicationDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createApplication_1
  name: createApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createApplication(applicationDescription: ApplicationDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationDescription
      type:
      - azure-servicefabric.ApplicationDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createApplication
  name: createApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createApplication(applicationDescription: ApplicationDescription, options?: function)'
    parameters:
    - id: applicationDescription
      type:
      - azure-servicefabric.ApplicationDescription
      description: >
        建立應用程式的描述。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createApplicationWithHttpOperationResponse
  name: createApplicationWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createApplicationWithHttpOperationResponse(applicationDescription: ApplicationDescription, options?: function)'
    parameters:
    - id: applicationDescription
      type:
      - azure-servicefabric.ApplicationDescription
      description: >
        建立應用程式的描述。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment_1
  name: createComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: createComposeDeploymentDescription
      type:
      - azure-servicefabric.CreateComposeDeploymentDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment
  name: createComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: function)'
    parameters:
    - id: createComposeDeploymentDescription
      type:
      - azure-servicefabric.CreateComposeDeploymentDescription
      description: >
        描述您必須建立的 compose 部署。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createComposeDeployment_2
  name: createComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: createComposeDeploymentDescription
      type:
      - azure-servicefabric.CreateComposeDeploymentDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createComposeDeploymentWithHttpOperationResponse
  name: createComposeDeploymentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createComposeDeploymentWithHttpOperationResponse(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: function)'
    parameters:
    - id: createComposeDeploymentDescription
      type:
      - azure-servicefabric.CreateComposeDeploymentDescription
      description: >
        描述您必須建立的 compose 部署。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createRepairTask_1
  name: createRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createRepairTask(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createRepairTask
  name: createRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createRepairTask(repairTask: RepairTask, options?: function)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: >
        描述要建立或更新的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createRepairTask_2
  name: createRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createRepairTask(repairTask: RepairTask, options: function, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createRepairTaskWithHttpOperationResponse
  name: createRepairTaskWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createRepairTaskWithHttpOperationResponse(repairTask: RepairTask, options?: function)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: >
        描述要建立或更新的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createService_1
  name: createService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceDescription
      type:
      - azure-servicefabric.ServiceDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createService_2
  name: createService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceDescription
      type:
      - azure-servicefabric.ServiceDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createService
  name: createService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createService(applicationId: string, serviceDescription: ServiceDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceDescription
      type:
      - azure-servicefabric.ServiceDescription
      description: >
        建立服務所需的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_2
  name: createServiceFromTemplate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceFromTemplateDescription
      type:
      - azure-servicefabric.ServiceFromTemplateDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate_1
  name: createServiceFromTemplate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceFromTemplateDescription
      type:
      - azure-servicefabric.ServiceFromTemplateDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplate
  name: createServiceFromTemplate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceFromTemplateDescription
      type:
      - azure-servicefabric.ServiceFromTemplateDescription
      description: >
        描述需要從應用程式資訊清單中定義的範本建立服務。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createServiceFromTemplateWithHttpOperationResponse
  name: createServiceFromTemplateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createServiceFromTemplateWithHttpOperationResponse(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceFromTemplateDescription
      type:
      - azure-servicefabric.ServiceFromTemplateDescription
      description: >
        描述需要從應用程式資訊清單中定義的範本建立服務。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.createServiceWithHttpOperationResponse
  name: createServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createServiceWithHttpOperationResponse(applicationId: string, serviceDescription: ServiceDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceDescription
      type:
      - azure-servicefabric.ServiceDescription
      description: >
        建立服務所需的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteApplication
  name: deleteApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteApplication(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteApplication_1
  name: deleteApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteApplication(applicationId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteApplication_2
  name: deleteApplication
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteApplication(applicationId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteApplicationWithHttpOperationResponse
  name: deleteApplicationWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteApplicationWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent
  name: deleteImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteImageStoreContent(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_1
  name: deleteImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteImageStoreContent(contentPath: string, callback: ServiceCallback<void>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContent_2
  name: deleteImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteImageStoreContent(contentPath: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteImageStoreContentWithHttpOperationResponse
  name: deleteImageStoreContentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteImageStoreContentWithHttpOperationResponse(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask_2
  name: deleteRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: repairTaskDeleteDescription
      type:
      - azure-servicefabric.RepairTaskDeleteDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask
  name: deleteRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: function)'
    parameters:
    - id: repairTaskDeleteDescription
      type:
      - azure-servicefabric.RepairTaskDeleteDescription
      description: >
        描述要刪除的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteRepairTask_1
  name: deleteRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: repairTaskDeleteDescription
      type:
      - azure-servicefabric.RepairTaskDeleteDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteRepairTaskWithHttpOperationResponse
  name: deleteRepairTaskWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteRepairTaskWithHttpOperationResponse(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: function)'
    parameters:
    - id: repairTaskDeleteDescription
      type:
      - azure-servicefabric.RepairTaskDeleteDescription
      description: >
        描述要刪除的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteService_2
  name: deleteService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteService(serviceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteService
  name: deleteService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteService(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteService_1
  name: deleteService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteService(serviceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deleteServiceWithHttpOperationResponse
  name: deleteServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteServiceWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode
  name: deployedServicePackageToNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deployedServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: deployServicePackageToNodeDescription
      type:
      - azure-servicefabric.DeployServicePackageToNodeDescription
      description: >
        說明將服務封裝部署到 Service Fabric 節點的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode_2
  name: deployedServicePackageToNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deployedServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: deployServicePackageToNodeDescription
      type:
      - azure-servicefabric.DeployServicePackageToNodeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode_1
  name: deployedServicePackageToNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deployedServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: deployServicePackageToNodeDescription
      type:
      - azure-servicefabric.DeployServicePackageToNodeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.deployedServicePackageToNodeWithHttpOperationResponse
  name: deployedServicePackageToNodeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deployedServicePackageToNodeWithHttpOperationResponse(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: deployServicePackageToNodeDescription
      type:
      - azure-servicefabric.DeployServicePackageToNodeDescription
      description: >
        說明將服務封裝部署到 Service Fabric 節點的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.disableNode
  name: disableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: deactivationIntentDescription
      type:
      - azure-servicefabric.DeactivationIntentDescription
      description: >
        描述停用節點的意圖或理由。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.disableNode_2
  name: disableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: deactivationIntentDescription
      type:
      - azure-servicefabric.DeactivationIntentDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.disableNode_1
  name: disableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: deactivationIntentDescription
      type:
      - azure-servicefabric.DeactivationIntentDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.disableNodeWithHttpOperationResponse
  name: disableNodeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function disableNodeWithHttpOperationResponse(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: deactivationIntentDescription
      type:
      - azure-servicefabric.DeactivationIntentDescription
      description: >
        描述停用節點的意圖或理由。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.enableNode_1
  name: enableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function enableNode(nodeName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.enableNode
  name: enableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function enableNode(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.enableNode_2
  name: enableNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function enableNode(nodeName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.enableNodeWithHttpOperationResponse
  name: enableNodeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function enableNodeWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_1
  name: forceApproveRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskApproveDescription
      type:
      - azure-servicefabric.RepairTaskApproveDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask_2
  name: forceApproveRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options: function, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskApproveDescription
      type:
      - azure-servicefabric.RepairTaskApproveDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTask
  name: forceApproveRepairTask
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options?: function)'
    parameters:
    - id: repairTaskApproveDescription
      type:
      - azure-servicefabric.RepairTaskApproveDescription
      description: >
        描述要核准的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.forceApproveRepairTaskWithHttpOperationResponse
  name: forceApproveRepairTaskWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function forceApproveRepairTaskWithHttpOperationResponse(repairTaskApproveDescription: RepairTaskApproveDescription, options?: function)'
    parameters:
    - id: repairTaskApproveDescription
      type:
      - azure-servicefabric.RepairTaskApproveDescription
      description: >
        描述要核准的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getAadMetadata
  name: getAadMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getAadMetadata(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.AadMetadataObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getAadMetadata_1
  name: getAadMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getAadMetadata(callback: ServiceCallback<AadMetadataObject>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.AadMetadataObject>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.AadMetadataObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getAadMetadata_2
  name: getAadMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getAadMetadata(options: function, callback: ServiceCallback<AadMetadataObject>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.AadMetadataObject>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.AadMetadataObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getAadMetadataWithHttpOperationResponse
  name: getAadMetadataWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getAadMetadataWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.AadMetadataObject>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth_2
  name: getApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealth(applicationId: string, options: function, callback: ServiceCallback<ApplicationHealth>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth_1
  name: getApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealth(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealth
  name: getApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealth(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2
  name: getApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealthUsingPolicy(applicationId: string, options: function, callback: ServiceCallback<ApplicationHealth>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1
  name: getApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealthUsingPolicy(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy
  name: getApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealthUsingPolicy(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicyWithHttpOperationResponse
  name: getApplicationHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealthUsingPolicyWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationHealthWithHttpOperationResponse
  name: getApplicationHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationHealthWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo_2
  name: getApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfo(applicationId: string, options: function, callback: ServiceCallback<ApplicationInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo
  name: getApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfo(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfo_1
  name: getApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfo(applicationId: string, callback: ServiceCallback<ApplicationInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList_1
  name: getApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfoList(callback: ServiceCallback<PagedApplicationInfoList>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList
  name: getApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfoList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoList_2
  name: getApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfoList(options: function, callback: ServiceCallback<PagedApplicationInfoList>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoListWithHttpOperationResponse
  name: getApplicationInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfoListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationInfoWithHttpOperationResponse
  name: getApplicationInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationInfoWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo
  name: getApplicationLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationLoadInfo(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_2
  name: getApplicationLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationLoadInfo(applicationId: string, options: function, callback: ServiceCallback<ApplicationLoadInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo_1
  name: getApplicationLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationLoadInfo(applicationId: string, callback: ServiceCallback<ApplicationLoadInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationLoadInfoWithHttpOperationResponse
  name: getApplicationLoadInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationLoadInfoWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationLoadInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest_1
  name: getApplicationManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ApplicationTypeManifest>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest
  name: getApplicationManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationManifest_2
  name: getApplicationManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options: function, callback: ServiceCallback<ApplicationTypeManifest>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationManifestWithHttpOperationResponse
  name: getApplicationManifestWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationManifestWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationTypeManifest>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_1
  name: getApplicationNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationNameInfo(serviceId: string, callback: ServiceCallback<ApplicationNameInfo>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationNameInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo_2
  name: getApplicationNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationNameInfo(serviceId: string, options: function, callback: ServiceCallback<ApplicationNameInfo>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationNameInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfo
  name: getApplicationNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationNameInfo(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationNameInfoWithHttpOperationResponse
  name: getApplicationNameInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationNameInfoWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationNameInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList
  name: getApplicationTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1
  name: getApplicationTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoList(callback: ServiceCallback<PagedApplicationTypeInfoList>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2
  name: getApplicationTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoList(options: function, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2
  name: getApplicationTypeInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options: function, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName
  name: getApplicationTypeInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1
  name: getApplicationTypeInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByNameWithHttpOperationResponse
  name: getApplicationTypeInfoListByNameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoListByNameWithHttpOperationResponse(applicationTypeName: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListWithHttpOperationResponse
  name: getApplicationTypeInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationTypeInfoListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_2
  name: getApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationUpgrade(applicationId: string, options: function, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade
  name: getApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationUpgrade(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgrade_1
  name: getApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationUpgrade(applicationId: string, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getApplicationUpgradeWithHttpOperationResponse
  name: getApplicationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getApplicationUpgradeWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ApplicationUpgradeProgressInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getChaosReport_1
  name: getChaosReport
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getChaosReport(callback: ServiceCallback<ChaosReport>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ChaosReport>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ChaosReport>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getChaosReport_2
  name: getChaosReport
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getChaosReport(options: function, callback: ServiceCallback<ChaosReport>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ChaosReport>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ChaosReport>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getChaosReport
  name: getChaosReport
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getChaosReport(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ChaosReport>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getChaosReportWithHttpOperationResponse
  name: getChaosReportWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getChaosReportWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ChaosReport>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration_2
  name: getClusterConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfiguration(configurationApiVersion: string, options: function, callback: ServiceCallback<ClusterConfiguration>)'
    parameters:
    - id: configurationApiVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterConfiguration>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfiguration>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration_1
  name: getClusterConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfiguration(configurationApiVersion: string, callback: ServiceCallback<ClusterConfiguration>)'
    parameters:
    - id: configurationApiVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterConfiguration>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfiguration>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfiguration
  name: getClusterConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfiguration(configurationApiVersion: string, options?: function)'
    parameters:
    - id: configurationApiVersion
      type:
      - string
      description: >
        獨立叢集 JSON 設定的 API 版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfiguration>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1
  name: getClusterConfigurationUpgradeStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfigurationUpgradeStatus(callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2
  name: getClusterConfigurationUpgradeStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfigurationUpgradeStatus(options: function, callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus
  name: getClusterConfigurationUpgradeStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfigurationUpgradeStatus(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatusWithHttpOperationResponse
  name: getClusterConfigurationUpgradeStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfigurationUpgradeStatusWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterConfigurationWithHttpOperationResponse
  name: getClusterConfigurationWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterConfigurationWithHttpOperationResponse(configurationApiVersion: string, options?: function)'
    parameters:
    - id: configurationApiVersion
      type:
      - string
      description: >
        獨立叢集 JSON 設定的 API 版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterConfiguration>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealth
  name: getClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealth(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealth_1
  name: getClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealth(callback: ServiceCallback<ClusterHealth>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealth_2
  name: getClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealth(options: function, callback: ServiceCallback<ClusterHealth>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_2
  name: getClusterHealthChunk
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunk(options: function, callback: ServiceCallback<ClusterHealthChunk>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk_1
  name: getClusterHealthChunk
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunk(callback: ServiceCallback<ClusterHealthChunk>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunk
  name: getClusterHealthChunk
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunk(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters
  name: getClusterHealthChunkUsingPolicyAndAdvancedFilters
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2
  name: getClusterHealthChunkUsingPolicyAndAdvancedFilters
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options: function, callback: ServiceCallback<ClusterHealthChunk>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1
  name: getClusterHealthChunkUsingPolicyAndAdvancedFilters
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(callback: ServiceCallback<ClusterHealthChunk>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealthChunk>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealthChunk>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
  name: getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthChunkWithHttpOperationResponse
  name: getClusterHealthChunkWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthChunkWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1
  name: getClusterHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthUsingPolicy(callback: ServiceCallback<ClusterHealth>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2
  name: getClusterHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthUsingPolicy(options: function, callback: ServiceCallback<ClusterHealth>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy
  name: getClusterHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthUsingPolicy(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicyWithHttpOperationResponse
  name: getClusterHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthUsingPolicyWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterHealthWithHttpOperationResponse
  name: getClusterHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterHealthWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterManifest_2
  name: getClusterManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterManifest(options: function, callback: ServiceCallback<ClusterManifest>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterManifest
  name: getClusterManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterManifest(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterManifest_1
  name: getClusterManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterManifest(callback: ServiceCallback<ClusterManifest>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterManifestWithHttpOperationResponse
  name: getClusterManifestWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterManifestWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterManifest>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2
  name: getClusterUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterUpgradeProgress(options: function, callback: ServiceCallback<ClusterUpgradeProgressObject>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1
  name: getClusterUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterUpgradeProgress(callback: ServiceCallback<ClusterUpgradeProgressObject>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress
  name: getClusterUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterUpgradeProgress(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ClusterUpgradeProgressObject>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgressWithHttpOperationResponse
  name: getClusterUpgradeProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getClusterUpgradeProgressWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ClusterUpgradeProgressObject>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus
  name: getComposeDeploymentStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatus(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2
  name: getComposeDeploymentStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatus(deploymentName: string, options: function, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1
  name: getComposeDeploymentStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatus(deploymentName: string, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList
  name: getComposeDeploymentStatusList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatusList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1
  name: getComposeDeploymentStatusList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatusList(callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2
  name: getComposeDeploymentStatusList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatusList(options: function, callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusListWithHttpOperationResponse
  name: getComposeDeploymentStatusListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatusListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedComposeDeploymentStatusInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusWithHttpOperationResponse
  name: getComposeDeploymentStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentStatusWithHttpOperationResponse(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentStatusInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress
  name: getComposeDeploymentUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1
  name: getComposeDeploymentUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2
  name: getComposeDeploymentUpgradeProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options: function, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgressWithHttpOperationResponse
  name: getComposeDeploymentUpgradeProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getComposeDeploymentUpgradeProgressWithHttpOperationResponse(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress_2
  name: getDataLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options: function, callback: ServiceCallback<PartitionDataLossProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionDataLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress
  name: getDataLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionDataLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDataLossProgress_1
  name: getDataLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionDataLossProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionDataLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDataLossProgressWithHttpOperationResponse
  name: getDataLossProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDataLossProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionDataLossProgress>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2
  name: getDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedApplicationHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1
  name: getDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth
  name: getDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy
  name: getDeployedApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2
  name: getDeployedApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedApplicationHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1
  name: getDeployedApplicationHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
  name: getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthWithHttpOperationResponse
  name: getDeployedApplicationHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationHealthWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2
  name: getDeployedApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedApplicationInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo
  name: getDeployedApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1
  name: getDeployedApplicationInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2
  name: getDeployedApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfoList(nodeName: string, options: function, callback: ServiceCallback<DeployedApplicationInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1
  name: getDeployedApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfoList(nodeName: string, callback: ServiceCallback<DeployedApplicationInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedApplicationInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList
  name: getDeployedApplicationInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfoList(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedApplicationInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoListWithHttpOperationResponse
  name: getDeployedApplicationInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfoListWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoWithHttpOperationResponse
  name: getDeployedApplicationInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedApplicationInfoWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1
  name: getDeployedCodePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedCodePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2
  name: getDeployedCodePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedCodePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList
  name: getDeployedCodePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedCodePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoListWithHttpOperationResponse
  name: getDeployedCodePackageInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedCodePackageInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedCodePackageInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1
  name: getDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2
  name: getDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options: function, callback: ServiceCallback<DeployedServicePackageHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth
  name: getDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy
  name: getDeployedServicePackageHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1
  name: getDeployedServicePackageHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2
  name: getDeployedServicePackageHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options: function, callback: ServiceCallback<DeployedServicePackageHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
  name: getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthWithHttpOperationResponse
  name: getDeployedServicePackageHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageHealthWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2
  name: getDeployedServicePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList
  name: getDeployedServicePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1
  name: getDeployedServicePackageInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName
  name: getDeployedServicePackageInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2
  name: getDeployedServicePackageInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options: function, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1
  name: getDeployedServicePackageInfoListByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByNameWithHttpOperationResponse
  name: getDeployedServicePackageInfoListByNameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoListByNameWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListWithHttpOperationResponse
  name: getDeployedServicePackageInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServicePackageInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1
  name: getDeployedServiceReplicaDetailInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2
  name: getDeployedServiceReplicaDetailInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options: function, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo
  name: getDeployedServiceReplicaDetailInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1
  name: getDeployedServiceReplicaDetailInfoByPartitionId
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2
  name: getDeployedServiceReplicaDetailInfoByPartitionId
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options: function, callback: ServiceCallback<DeployedServiceReplicaDetailInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId
  name: getDeployedServiceReplicaDetailInfoByPartitionId
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
  name: getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(nodeName: string, partitionId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
  name: getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList
  name: getDeployedServiceReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2
  name: getDeployedServiceReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedServiceReplicaInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1
  name: getDeployedServiceReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceReplicaInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoListWithHttpOperationResponse
  name: getDeployedServiceReplicaInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceReplicaInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName
  name: getDeployedServiceTypeInfoByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceTypeName
      type:
      - string
      description: >
        指定 Service Fabric 服務類型的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1
  name: getDeployedServiceTypeInfoByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2
  name: getDeployedServiceTypeInfoByName
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options: function, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByNameWithHttpOperationResponse
  name: getDeployedServiceTypeInfoByNameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoByNameWithHttpOperationResponse(nodeName: string, applicationId: string, serviceTypeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceTypeName
      type:
      - string
      description: >
        指定 Service Fabric 服務類型的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2
  name: getDeployedServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options: function, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList
  name: getDeployedServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1
  name: getDeployedServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoListWithHttpOperationResponse
  name: getDeployedServiceTypeInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeployedServiceTypeInfoListWithHttpOperationResponse(nodeName: string, applicationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList_1
  name: getFaultOperationList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, callback: ServiceCallback<OperationStatus[]>)'
    parameters:
    - id: typeFilter
      type:
      - number
      description: ''
    - id: stateFilter
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.OperationStatus[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.OperationStatus[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList_2
  name: getFaultOperationList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options: function, callback: ServiceCallback<OperationStatus[]>)'
    parameters:
    - id: typeFilter
      type:
      - number
      description: ''
    - id: stateFilter
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.OperationStatus[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.OperationStatus[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getFaultOperationList
  name: getFaultOperationList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options?: function)'
    parameters:
    - id: typeFilter
      type:
      - number
      description: >+
        針對使用者引發的作業，用來依據 OperationType 進行篩選。

        65535-選取所有 1： 都選取 PartitionDataLoss。

        2 - 選取 PartitionQuorumLoss。

        4 - 選取 PartitionRestart。

        8 - 選取 NodeTransition。

    - id: stateFilter
      type:
      - number
      description: >+
        針對使用者引發的作業，用來依據 OperationState 進行篩選。

        65535-選取所有 1： 都選取 執行 2-都選取正在回復 8-都選取的完成 16-都選取發生錯誤 32-都選取取消的 64-都 ForceCancelled

    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.OperationStatus[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getFaultOperationListWithHttpOperationResponse
  name: getFaultOperationListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFaultOperationListWithHttpOperationResponse(typeFilter: number, stateFilter: number, options?: function)'
    parameters:
    - id: typeFilter
      type:
      - number
      description: >+
        針對使用者引發的作業，用來依據 OperationType 進行篩選。

        65535-選取所有 1： 都選取 PartitionDataLoss。

        2 - 選取 PartitionQuorumLoss。

        4 - 選取 PartitionRestart。

        8 - 選取 NodeTransition。

    - id: stateFilter
      type:
      - number
      description: >+
        針對使用者引發的作業，用來依據 OperationState 進行篩選。

        65535-選取所有 1： 都選取 執行 2-都選取正在回復 8-都選取的完成 16-都選取發生錯誤 32-都選取取消的 64-都 ForceCancelled

    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.OperationStatus[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent
  name: getImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreContent(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent_1
  name: getImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreContent(contentPath: string, callback: ServiceCallback<ImageStoreContent>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ImageStoreContent>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreContent_2
  name: getImageStoreContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreContent(contentPath: string, options: function, callback: ServiceCallback<ImageStoreContent>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ImageStoreContent>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreContentWithHttpOperationResponse
  name: getImageStoreContentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreContentWithHttpOperationResponse(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_1
  name: getImageStoreRootContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreRootContent(callback: ServiceCallback<ImageStoreContent>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ImageStoreContent>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent_2
  name: getImageStoreRootContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreRootContent(options: function, callback: ServiceCallback<ImageStoreContent>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ImageStoreContent>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContent
  name: getImageStoreRootContent
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreRootContent(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ImageStoreContent>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getImageStoreRootContentWithHttpOperationResponse
  name: getImageStoreRootContentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getImageStoreRootContentWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealth
  name: getNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealth(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealth_2
  name: getNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealth(nodeName: string, options: function, callback: ServiceCallback<NodeHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealth_1
  name: getNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealth(nodeName: string, callback: ServiceCallback<NodeHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1
  name: getNodeHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealthUsingPolicy(nodeName: string, callback: ServiceCallback<NodeHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2
  name: getNodeHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealthUsingPolicy(nodeName: string, options: function, callback: ServiceCallback<NodeHealth>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy
  name: getNodeHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealthUsingPolicy(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.NodeHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicyWithHttpOperationResponse
  name: getNodeHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealthUsingPolicyWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeHealthWithHttpOperationResponse
  name: getNodeHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeHealthWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfo
  name: getNodeInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfo(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.NodeInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfo_1
  name: getNodeInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfo(nodeName: string, callback: ServiceCallback<NodeInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfo_2
  name: getNodeInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfo(nodeName: string, options: function, callback: ServiceCallback<NodeInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList_1
  name: getNodeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfoList(callback: ServiceCallback<PagedNodeInfoList>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedNodeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedNodeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList_2
  name: getNodeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfoList(options: function, callback: ServiceCallback<PagedNodeInfoList>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedNodeInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedNodeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfoList
  name: getNodeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfoList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedNodeInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfoListWithHttpOperationResponse
  name: getNodeInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfoListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedNodeInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeInfoWithHttpOperationResponse
  name: getNodeInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeInfoWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.NodeInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_1
  name: getNodeLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeLoadInfo(nodeName: string, callback: ServiceCallback<NodeLoadInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeLoadInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo
  name: getNodeLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeLoadInfo(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.NodeLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfo_2
  name: getNodeLoadInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeLoadInfo(nodeName: string, options: function, callback: ServiceCallback<NodeLoadInfo>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeLoadInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeLoadInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeLoadInfoWithHttpOperationResponse
  name: getNodeLoadInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeLoadInfoWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.NodeLoadInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_1
  name: getNodeTransitionProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, callback: ServiceCallback<NodeTransitionProgress>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeTransitionProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeTransitionProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress
  name: getNodeTransitionProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.NodeTransitionProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress_2
  name: getNodeTransitionProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options: function, callback: ServiceCallback<NodeTransitionProgress>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.NodeTransitionProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.NodeTransitionProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getNodeTransitionProgressWithHttpOperationResponse
  name: getNodeTransitionProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getNodeTransitionProgressWithHttpOperationResponse(nodeName: string, operationId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.NodeTransitionProgress>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth_1
  name: getPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealth(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth_2
  name: getPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealth(partitionId: string, options: function, callback: ServiceCallback<PartitionHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealth
  name: getPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealth(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1
  name: getPartitionHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealthUsingPolicy(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2
  name: getPartitionHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealthUsingPolicy(partitionId: string, options: function, callback: ServiceCallback<PartitionHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy
  name: getPartitionHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealthUsingPolicy(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicyWithHttpOperationResponse
  name: getPartitionHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealthUsingPolicyWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionHealthWithHttpOperationResponse
  name: getPartitionHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionHealthWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo
  name: getPartitionInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfo(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServicePartitionInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo_1
  name: getPartitionInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfo(partitionId: string, callback: ServiceCallback<ServicePartitionInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServicePartitionInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServicePartitionInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfo_2
  name: getPartitionInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfo(partitionId: string, options: function, callback: ServiceCallback<ServicePartitionInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServicePartitionInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServicePartitionInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList
  name: getPartitionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfoList(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedServicePartitionInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList_1
  name: getPartitionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfoList(serviceId: string, callback: ServiceCallback<PagedServicePartitionInfoList>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedServicePartitionInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoList_2
  name: getPartitionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfoList(serviceId: string, options: function, callback: ServiceCallback<PagedServicePartitionInfoList>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedServicePartitionInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoListWithHttpOperationResponse
  name: getPartitionInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfoListWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedServicePartitionInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionInfoWithHttpOperationResponse
  name: getPartitionInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionInfoWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServicePartitionInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_2
  name: getPartitionLoadInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionLoadInformation(partitionId: string, options: function, callback: ServiceCallback<PartitionLoadInformation>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionLoadInformation>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionLoadInformation>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation
  name: getPartitionLoadInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionLoadInformation(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionLoadInformation>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation_1
  name: getPartitionLoadInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionLoadInformation(partitionId: string, callback: ServiceCallback<PartitionLoadInformation>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionLoadInformation>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionLoadInformation>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionLoadInformationWithHttpOperationResponse
  name: getPartitionLoadInformationWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionLoadInformationWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionLoadInformation>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_1
  name: getPartitionRestartProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionRestartProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionRestartProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionRestartProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress_2
  name: getPartitionRestartProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options: function, callback: ServiceCallback<PartitionRestartProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionRestartProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionRestartProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress
  name: getPartitionRestartProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionRestartProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getPartitionRestartProgressWithHttpOperationResponse
  name: getPartitionRestartProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPartitionRestartProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionRestartProgress>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2
  name: getProvisionedFabricCodeVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricCodeVersionInfoList(options: function, callback: ServiceCallback<FabricCodeVersionInfo[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.FabricCodeVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList
  name: getProvisionedFabricCodeVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricCodeVersionInfoList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.FabricCodeVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1
  name: getProvisionedFabricCodeVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricCodeVersionInfoList(callback: ServiceCallback<FabricCodeVersionInfo[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.FabricCodeVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
  name: getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.FabricCodeVersionInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList
  name: getProvisionedFabricConfigVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricConfigVersionInfoList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.FabricConfigVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1
  name: getProvisionedFabricConfigVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricConfigVersionInfoList(callback: ServiceCallback<FabricConfigVersionInfo[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.FabricConfigVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2
  name: getProvisionedFabricConfigVersionInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricConfigVersionInfoList(options: function, callback: ServiceCallback<FabricConfigVersionInfo[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.FabricConfigVersionInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
  name: getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.FabricConfigVersionInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_2
  name: getQuorumLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options: function, callback: ServiceCallback<PartitionQuorumLossProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionQuorumLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress_1
  name: getQuorumLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionQuorumLossProgress>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PartitionQuorumLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgress
  name: getQuorumLossProgress
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PartitionQuorumLossProgress>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getQuorumLossProgressWithHttpOperationResponse
  name: getQuorumLossProgressWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getQuorumLossProgressWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PartitionQuorumLossProgress>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList_2
  name: getRepairTaskList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getRepairTaskList(options: function, callback: ServiceCallback<RepairTask[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTask[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTask[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList
  name: getRepairTaskList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getRepairTaskList(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTask[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getRepairTaskList_1
  name: getRepairTaskList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getRepairTaskList(callback: ServiceCallback<RepairTask[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTask[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTask[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getRepairTaskListWithHttpOperationResponse
  name: getRepairTaskListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getRepairTaskListWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTask[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth_1
  name: getReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealth(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth
  name: getReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealth(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealth_2
  name: getReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealth(partitionId: string, replicaId: string, options: function, callback: ServiceCallback<ReplicaHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2
  name: getReplicaHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options: function, callback: ServiceCallback<ReplicaHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1
  name: getReplicaHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaHealth>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy
  name: getReplicaHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ReplicaHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicyWithHttpOperationResponse
  name: getReplicaHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealthUsingPolicyWithHttpOperationResponse(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaHealthWithHttpOperationResponse
  name: getReplicaHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaHealthWithHttpOperationResponse(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo_2
  name: getReplicaInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfo(partitionId: string, replicaId: string, options: function, callback: ServiceCallback<ReplicaInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo
  name: getReplicaInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfo(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ReplicaInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfo_1
  name: getReplicaInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfo(partitionId: string, replicaId: string, callback: ServiceCallback<ReplicaInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ReplicaInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ReplicaInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList_2
  name: getReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfoList(partitionId: string, options: function, callback: ServiceCallback<PagedReplicaInfoList>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedReplicaInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList_1
  name: getReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfoList(partitionId: string, callback: ServiceCallback<PagedReplicaInfoList>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedReplicaInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoList
  name: getReplicaInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfoList(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedReplicaInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoListWithHttpOperationResponse
  name: getReplicaInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfoListWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedReplicaInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getReplicaInfoWithHttpOperationResponse
  name: getReplicaInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getReplicaInfoWithHttpOperationResponse(partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ReplicaInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceDescription_1
  name: getServiceDescription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceDescription(serviceId: string, callback: ServiceCallback<ServiceDescription>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceDescription>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceDescription>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceDescription_2
  name: getServiceDescription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceDescription(serviceId: string, options: function, callback: ServiceCallback<ServiceDescription>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceDescription>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceDescription>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceDescription
  name: getServiceDescription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceDescription(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceDescription>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceDescriptionWithHttpOperationResponse
  name: getServiceDescriptionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceDescriptionWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceDescription>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealth
  name: getServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealth(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealth_2
  name: getServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealth(serviceId: string, options: function, callback: ServiceCallback<ServiceHealth>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealth_1
  name: getServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealth(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1
  name: getServiceHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealthUsingPolicy(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2
  name: getServiceHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealthUsingPolicy(serviceId: string, options: function, callback: ServiceCallback<ServiceHealth>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceHealth>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy
  name: getServiceHealthUsingPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealthUsingPolicy(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceHealth>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicyWithHttpOperationResponse
  name: getServiceHealthUsingPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealthUsingPolicyWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceHealthWithHttpOperationResponse
  name: getServiceHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceHealthWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfo
  name: getServiceInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfo(applicationId: string, serviceId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfo_2
  name: getServiceInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfo(applicationId: string, serviceId: string, options: function, callback: ServiceCallback<ServiceInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfo_1
  name: getServiceInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfo(applicationId: string, serviceId: string, callback: ServiceCallback<ServiceInfo>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList_2
  name: getServiceInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfoList(applicationId: string, options: function, callback: ServiceCallback<PagedServiceInfoList>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedServiceInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedServiceInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList
  name: getServiceInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfoList(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.PagedServiceInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfoList_1
  name: getServiceInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfoList(applicationId: string, callback: ServiceCallback<PagedServiceInfoList>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.PagedServiceInfoList>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.PagedServiceInfoList>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfoListWithHttpOperationResponse
  name: getServiceInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfoListWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.PagedServiceInfoList>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceInfoWithHttpOperationResponse
  name: getServiceInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceInfoWithHttpOperationResponse(applicationId: string, serviceId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceManifest
  name: getServiceManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: serviceManifestName
      type:
      - string
      description: >
        在 Service Fabric 叢集中，註冊為應用程式類型中一部分的服務資訊清單名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceManifest_1
  name: getServiceManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, callback: ServiceCallback<ServiceTypeManifest>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: serviceManifestName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceTypeManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceManifest_2
  name: getServiceManifest
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options: function, callback: ServiceCallback<ServiceTypeManifest>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: serviceManifestName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceTypeManifest>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeManifest>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceManifestWithHttpOperationResponse
  name: getServiceManifestWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceManifestWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: serviceManifestName
      type:
      - string
      description: >
        在 Service Fabric 叢集中，註冊為應用程式類型中一部分的服務資訊清單名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeManifest>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo_1
  name: getServiceNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceNameInfo(partitionId: string, callback: ServiceCallback<ServiceNameInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceNameInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo_2
  name: getServiceNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceNameInfo(partitionId: string, options: function, callback: ServiceCallback<ServiceNameInfo>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceNameInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfo
  name: getServiceNameInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceNameInfo(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceNameInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceNameInfoWithHttpOperationResponse
  name: getServiceNameInfoWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceNameInfoWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceNameInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList
  name: getServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_2
  name: getServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options: function, callback: ServiceCallback<ServiceTypeInfo[]>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList_1
  name: getServiceTypeInfoList
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ServiceTypeInfo[]>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ServiceTypeInfo[]>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.getServiceTypeInfoListWithHttpOperationResponse
  name: getServiceTypeInfoListWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getServiceTypeInfoListWithHttpOperationResponse(applicationTypeName: string, applicationTypeVersion: string, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeVersion
      type:
      - string
      description: >
        應用程式類型的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo[]>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand
  name: invokeInfrastructureCommand
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureCommand(command: string, options?: function)'
    parameters:
    - id: command
      type:
      - string
      description: >
        要叫用的命令文字。 命令的內容與基礎結構有關。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2
  name: invokeInfrastructureCommand
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureCommand(command: string, options: function, callback: ServiceCallback<string>)'
    parameters:
    - id: command
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1
  name: invokeInfrastructureCommand
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureCommand(command: string, callback: ServiceCallback<string>)'
    parameters:
    - id: command
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommandWithHttpOperationResponse
  name: invokeInfrastructureCommandWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureCommandWithHttpOperationResponse(command: string, options?: function)'
    parameters:
    - id: command
      type:
      - string
      description: >
        要叫用的命令文字。 命令的內容與基礎結構有關。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1
  name: invokeInfrastructureQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureQuery(command: string, callback: ServiceCallback<string>)'
    parameters:
    - id: command
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2
  name: invokeInfrastructureQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureQuery(command: string, options: function, callback: ServiceCallback<string>)'
    parameters:
    - id: command
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery
  name: invokeInfrastructureQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureQuery(command: string, options?: function)'
    parameters:
    - id: command
      type:
      - string
      description: >
        要叫用的命令文字。 命令的內容與基礎結構有關。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<string>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.invokeInfrastructureQueryWithHttpOperationResponse
  name: invokeInfrastructureQueryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function invokeInfrastructureQueryWithHttpOperationResponse(command: string, options?: function)'
    parameters:
    - id: command
      type:
      - string
      description: >
        要叫用的命令文字。 命令的內容與基礎結構有關。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType_1
  name: provisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionApplicationType(applicationTypeImageStorePath: ApplicationTypeImageStorePath, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationTypeImageStorePath
      type:
      - azure-servicefabric.ApplicationTypeImageStorePath
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType_2
  name: provisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionApplicationType(applicationTypeImageStorePath: ApplicationTypeImageStorePath, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationTypeImageStorePath
      type:
      - azure-servicefabric.ApplicationTypeImageStorePath
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionApplicationType
  name: provisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionApplicationType(applicationTypeImageStorePath: ApplicationTypeImageStorePath, options?: function)'
    parameters:
    - id: applicationTypeImageStorePath
      type:
      - azure-servicefabric.ApplicationTypeImageStorePath
      description: >
        在先前的複製作業期間所指定的映像存放區中的應用程式封裝的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionApplicationTypeWithHttpOperationResponse
  name: provisionApplicationTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionApplicationTypeWithHttpOperationResponse(applicationTypeImageStorePath: ApplicationTypeImageStorePath, options?: function)'
    parameters:
    - id: applicationTypeImageStorePath
      type:
      - azure-servicefabric.ApplicationTypeImageStorePath
      description: >
        在先前的複製作業期間所指定的映像存放區中的應用程式封裝的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionCluster
  name: provisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options?: function)'
    parameters:
    - id: provisionFabricDescription
      type:
      - azure-servicefabric.ProvisionFabricDescription
      description: >
        描述佈建叢集的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionCluster_1
  name: provisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: provisionFabricDescription
      type:
      - azure-servicefabric.ProvisionFabricDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionCluster_2
  name: provisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: provisionFabricDescription
      type:
      - azure-servicefabric.ProvisionFabricDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.provisionClusterWithHttpOperationResponse
  name: provisionClusterWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function provisionClusterWithHttpOperationResponse(provisionFabricDescription: ProvisionFabricDescription, options?: function)'
    parameters:
    - id: provisionFabricDescription
      type:
      - azure-servicefabric.ProvisionFabricDescription
      description: >
        描述佈建叢集的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions
  name: recoverAllPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverAllPartitions(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions_1
  name: recoverAllPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverAllPartitions(callback: ServiceCallback<void>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitions_2
  name: recoverAllPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverAllPartitions(options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverAllPartitionsWithHttpOperationResponse
  name: recoverAllPartitionsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverAllPartitionsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverPartition
  name: recoverPartition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverPartition(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverPartition_2
  name: recoverPartition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverPartition(partitionId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverPartition_1
  name: recoverPartition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverPartition(partitionId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverPartitionWithHttpOperationResponse
  name: recoverPartitionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverPartitionWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions
  name: recoverServicePartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverServicePartitions(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions_1
  name: recoverServicePartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverServicePartitions(serviceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitions_2
  name: recoverServicePartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverServicePartitions(serviceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverServicePartitionsWithHttpOperationResponse
  name: recoverServicePartitionsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverServicePartitionsWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_1
  name: recoverSystemPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverSystemPartitions(callback: ServiceCallback<void>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions
  name: recoverSystemPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverSystemPartitions(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitions_2
  name: recoverSystemPartitions
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverSystemPartitions(options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.recoverSystemPartitionsWithHttpOperationResponse
  name: recoverSystemPartitionsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverSystemPartitionsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment_2
  name: removeComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeComposeDeployment(deploymentName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment
  name: removeComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeComposeDeployment(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeComposeDeployment_1
  name: removeComposeDeployment
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeComposeDeployment(deploymentName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeComposeDeploymentWithHttpOperationResponse
  name: removeComposeDeploymentWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeComposeDeploymentWithHttpOperationResponse(deploymentName: string, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeNodeState_1
  name: removeNodeState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeNodeState(nodeName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeNodeState_2
  name: removeNodeState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeNodeState(nodeName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeNodeState
  name: removeNodeState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeNodeState(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeNodeStateWithHttpOperationResponse
  name: removeNodeStateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeNodeStateWithHttpOperationResponse(nodeName: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeReplica_1
  name: removeReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeReplica_2
  name: removeReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeReplica
  name: removeReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.removeReplicaWithHttpOperationResponse
  name: removeReplicaWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeReplicaWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth
  name: reportApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth_2
  name: reportApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealth_1
  name: reportApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportApplicationHealthWithHttpOperationResponse
  name: reportApplicationHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportApplicationHealthWithHttpOperationResponse(applicationId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth
  name: reportClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportClusterHealth(healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth_2
  name: reportClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportClusterHealth(healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportClusterHealth_1
  name: reportClusterHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportClusterHealth(healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportClusterHealthWithHttpOperationResponse
  name: reportClusterHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportClusterHealthWithHttpOperationResponse(healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1
  name: reportDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2
  name: reportDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth
  name: reportDeployedApplicationHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealthWithHttpOperationResponse
  name: reportDeployedApplicationHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedApplicationHealthWithHttpOperationResponse(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1
  name: reportDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2
  name: reportDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: servicePackageName
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth
  name: reportDeployedServicePackageHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealthWithHttpOperationResponse
  name: reportDeployedServicePackageHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportDeployedServicePackageHealthWithHttpOperationResponse(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: servicePackageName
      type:
      - string
      description: >
        服務套件的名稱。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth
  name: reportNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth_1
  name: reportNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportNodeHealth_2
  name: reportNodeHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportNodeHealthWithHttpOperationResponse
  name: reportNodeHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportNodeHealthWithHttpOperationResponse(nodeName: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth
  name: reportPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth_1
  name: reportPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealth_2
  name: reportPartitionHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportPartitionHealthWithHttpOperationResponse
  name: reportPartitionHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportPartitionHealthWithHttpOperationResponse(partitionId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth
  name: reportReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: serviceKind
      type:
      - string
      description: >
        服務複本種類 （無狀態或具狀態），報告健康情況。 以下是可能的值。

        - 無狀態-不使用 Service Fabric，使其狀態高度可用或可靠。 值為 1

        - 具狀態-使用 Service Fabric，使其狀態或其狀態的一部分高度可用且可靠。 值為 2。

        . 可能的值包括: '無狀態'、 '具狀態'
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth_2
  name: reportReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: serviceKind
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealth_1
  name: reportReplicaHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportReplicaHealth(partitionId: string, replicaId: string, serviceKind: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: serviceKind
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportReplicaHealthWithHttpOperationResponse
  name: reportReplicaHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportReplicaHealthWithHttpOperationResponse(partitionId: string, replicaId: string, serviceKind: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: serviceKind
      type:
      - string
      description: >
        服務複本種類 （無狀態或具狀態），報告健康情況。 以下是可能的值。

        - 無狀態-不使用 Service Fabric，使其狀態高度可用或可靠。 值為 1

        - 具狀態-使用 Service Fabric，使其狀態或其狀態的一部分高度可用且可靠。 值為 2。

        . 可能的值包括: '無狀態'、 '具狀態'
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth
  name: reportServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth_2
  name: reportServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportServiceHealth_1
  name: reportServiceHealth
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.reportServiceHealthWithHttpOperationResponse
  name: reportServiceHealthWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function reportServiceHealthWithHttpOperationResponse(serviceId: string, healthInformation: HealthInformation, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: healthInformation
      type:
      - azure-servicefabric.HealthInformation
      description: >
        描述健全狀況報表的健全狀況資訊。 這項資訊必須存在於所有傳送至健康情況管理員的健康情況報告。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad_1
  name: resetPartitionLoad
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resetPartitionLoad(partitionId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad_2
  name: resetPartitionLoad
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resetPartitionLoad(partitionId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: partitionId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoad
  name: resetPartitionLoad
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resetPartitionLoad(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resetPartitionLoadWithHttpOperationResponse
  name: resetPartitionLoadWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resetPartitionLoadWithHttpOperationResponse(partitionId: string, options?: function)'
    parameters:
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resolveService_1
  name: resolveService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resolveService(serviceId: string, callback: ServiceCallback<ResolvedServicePartition>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ResolvedServicePartition>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ResolvedServicePartition>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resolveService_2
  name: resolveService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resolveService(serviceId: string, options: function, callback: ServiceCallback<ResolvedServicePartition>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.ResolvedServicePartition>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.ResolvedServicePartition>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resolveService
  name: resolveService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resolveService(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.ResolvedServicePartition>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resolveServiceWithHttpOperationResponse
  name: resolveServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resolveServiceWithHttpOperationResponse(serviceId: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.ResolvedServicePartition>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage
  name: restartDeployedCodePackage
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: restartDeployedCodePackageDescription
      type:
      - azure-servicefabric.RestartDeployedCodePackageDescription
      description: >
        描述部署的程式碼封裝重新啟動的 Service Fabric 節點上。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_1
  name: restartDeployedCodePackage
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: restartDeployedCodePackageDescription
      type:
      - azure-servicefabric.RestartDeployedCodePackageDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage_2
  name: restartDeployedCodePackage
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: applicationId
      type:
      - string
      description: ''
    - id: restartDeployedCodePackageDescription
      type:
      - azure-servicefabric.RestartDeployedCodePackageDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartDeployedCodePackageWithHttpOperationResponse
  name: restartDeployedCodePackageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartDeployedCodePackageWithHttpOperationResponse(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: restartDeployedCodePackageDescription
      type:
      - azure-servicefabric.RestartDeployedCodePackageDescription
      description: >
        描述部署的程式碼封裝重新啟動的 Service Fabric 節點上。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartNode
  name: restartNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: restartNodeDescription
      type:
      - azure-servicefabric.RestartNodeDescription
      description: >
        執行個體重新啟動節點，表示需要進行 fabric 處理序傾印旗標。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartNode_1
  name: restartNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: restartNodeDescription
      type:
      - azure-servicefabric.RestartNodeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartNode_2
  name: restartNode
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: restartNodeDescription
      type:
      - azure-servicefabric.RestartNodeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartNodeWithHttpOperationResponse
  name: restartNodeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartNodeWithHttpOperationResponse(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: restartNodeDescription
      type:
      - azure-servicefabric.RestartNodeDescription
      description: >
        執行個體重新啟動節點，表示需要進行 fabric 處理序傾印旗標。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartReplica_1
  name: restartReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartReplica_2
  name: restartReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: replicaId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartReplica
  name: restartReplica
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.restartReplicaWithHttpOperationResponse
  name: restartReplicaWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restartReplicaWithHttpOperationResponse(nodeName: string, partitionId: string, replicaId: string, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: replicaId
      type:
      - string
      description: >
        複本的識別碼。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade
  name: resumeApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: resumeApplicationUpgradeDescription
      type:
      - azure-servicefabric.ResumeApplicationUpgradeDescription
      description: >
        描述用於繼續進行應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1
  name: resumeApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: resumeApplicationUpgradeDescription
      type:
      - azure-servicefabric.ResumeApplicationUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2
  name: resumeApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: resumeApplicationUpgradeDescription
      type:
      - azure-servicefabric.ResumeApplicationUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeApplicationUpgradeWithHttpOperationResponse
  name: resumeApplicationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeApplicationUpgradeWithHttpOperationResponse(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: resumeApplicationUpgradeDescription
      type:
      - azure-servicefabric.ResumeApplicationUpgradeDescription
      description: >
        描述用於繼續進行應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade
  name: resumeClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: function)'
    parameters:
    - id: resumeClusterUpgradeDescription
      type:
      - azure-servicefabric.ResumeClusterUpgradeDescription
      description: >
        描述用於繼續進行叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_1
  name: resumeClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: resumeClusterUpgradeDescription
      type:
      - azure-servicefabric.ResumeClusterUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade_2
  name: resumeClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resumeClusterUpgradeDescription
      type:
      - azure-servicefabric.ResumeClusterUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.resumeClusterUpgradeWithHttpOperationResponse
  name: resumeClusterUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function resumeClusterUpgradeWithHttpOperationResponse(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: function)'
    parameters:
    - id: resumeClusterUpgradeDescription
      type:
      - azure-servicefabric.ResumeClusterUpgradeDescription
      description: >
        描述用於繼續進行叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade
  name: rollbackApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackApplicationUpgrade(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1
  name: rollbackApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackApplicationUpgrade(applicationId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2
  name: rollbackApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackApplicationUpgrade(applicationId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgradeWithHttpOperationResponse
  name: rollbackApplicationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackApplicationUpgradeWithHttpOperationResponse(applicationId: string, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade
  name: rollbackClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackClusterUpgrade(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1
  name: rollbackClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackClusterUpgrade(callback: ServiceCallback<void>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2
  name: rollbackClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackClusterUpgrade(options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.rollbackClusterUpgradeWithHttpOperationResponse
  name: rollbackClusterUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function rollbackClusterUpgradeWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.constructor
  name: ServiceFabricClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ServiceFabricClient(baseUri?: string, options?: ServiceClientOptions)'
    parameters:
    - id: baseUri
      type:
      - string
      description: ''
      optional: true
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade
  name: startApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: applicationUpgradeDescription
      type:
      - azure-servicefabric.ApplicationUpgradeDescription
      description: >
        應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_1
  name: startApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: applicationUpgradeDescription
      type:
      - azure-servicefabric.ApplicationUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgrade_2
  name: startApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: applicationUpgradeDescription
      type:
      - azure-servicefabric.ApplicationUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startApplicationUpgradeWithHttpOperationResponse
  name: startApplicationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startApplicationUpgradeWithHttpOperationResponse(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: applicationUpgradeDescription
      type:
      - azure-servicefabric.ApplicationUpgradeDescription
      description: >
        應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startChaos
  name: startChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startChaos(chaosParameters: ChaosParameters, options?: function)'
    parameters:
    - id: chaosParameters
      type:
      - azure-servicefabric.ChaosParameters
      description: >
        描述設定混亂執行的所有參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startChaos_1
  name: startChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startChaos(chaosParameters: ChaosParameters, callback: ServiceCallback<void>)'
    parameters:
    - id: chaosParameters
      type:
      - azure-servicefabric.ChaosParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startChaos_2
  name: startChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startChaos(chaosParameters: ChaosParameters, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: chaosParameters
      type:
      - azure-servicefabric.ChaosParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startChaosWithHttpOperationResponse
  name: startChaosWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startChaosWithHttpOperationResponse(chaosParameters: ChaosParameters, options?: function)'
    parameters:
    - id: chaosParameters
      type:
      - azure-servicefabric.ChaosParameters
      description: >
        描述設定混亂執行的所有參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1
  name: startClusterConfigurationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: clusterConfigurationUpgradeDescription
      type:
      - azure-servicefabric.ClusterConfigurationUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade
  name: startClusterConfigurationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: function)'
    parameters:
    - id: clusterConfigurationUpgradeDescription
      type:
      - azure-servicefabric.ClusterConfigurationUpgradeDescription
      description: >
        獨立叢集設定升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2
  name: startClusterConfigurationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: clusterConfigurationUpgradeDescription
      type:
      - azure-servicefabric.ClusterConfigurationUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgradeWithHttpOperationResponse
  name: startClusterConfigurationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterConfigurationUpgradeWithHttpOperationResponse(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: function)'
    parameters:
    - id: clusterConfigurationUpgradeDescription
      type:
      - azure-servicefabric.ClusterConfigurationUpgradeDescription
      description: >
        獨立叢集設定升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade_2
  name: startClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: startClusterUpgradeDescription
      type:
      - azure-servicefabric.StartClusterUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade
  name: startClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: function)'
    parameters:
    - id: startClusterUpgradeDescription
      type:
      - azure-servicefabric.StartClusterUpgradeDescription
      description: >
        描述啟動叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterUpgrade_1
  name: startClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: startClusterUpgradeDescription
      type:
      - azure-servicefabric.StartClusterUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startClusterUpgradeWithHttpOperationResponse
  name: startClusterUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startClusterUpgradeWithHttpOperationResponse(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: function)'
    parameters:
    - id: startClusterUpgradeDescription
      type:
      - azure-servicefabric.StartClusterUpgradeDescription
      description: >
        描述啟動叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1
  name: startComposeDeploymentUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: composeDeploymentUpgradeDescription
      type:
      - azure-servicefabric.ComposeDeploymentUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2
  name: startComposeDeploymentUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: ''
    - id: composeDeploymentUpgradeDescription
      type:
      - azure-servicefabric.ComposeDeploymentUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade
  name: startComposeDeploymentUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: composeDeploymentUpgradeDescription
      type:
      - azure-servicefabric.ComposeDeploymentUpgradeDescription
      description: >
        升級參數 compose 部署。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgradeWithHttpOperationResponse
  name: startComposeDeploymentUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: function)'
    parameters:
    - id: deploymentName
      type:
      - string
      description: >
        部署的識別。
    - id: composeDeploymentUpgradeDescription
      type:
      - azure-servicefabric.ComposeDeploymentUpgradeDescription
      description: >
        升級參數 compose 部署。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startDataLoss_1
  name: startDataLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: dataLossMode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startDataLoss
  name: startDataLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: dataLossMode
      type:
      - string
      description: >
        此列舉會傳遞給 StartDataLoss API 以指出要引發哪一種類型的資料遺失。

        - Invalid-保留。  請勿傳入 API。

        - PartialDataLoss-PartialDataLoss 選項將會導致停機，複本的仲裁觸發 OnDataLoss 事件系統中的給定資料分割。

        - FullDataLoss-FullDataLoss 選項將會卸除這表示所有資料將都會遺失所有複本。

        . 可能的值包括: 'Invalid'、 'PartialDataLoss'，'FullDataLoss'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startDataLoss_2
  name: startDataLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: dataLossMode
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startDataLossWithHttpOperationResponse
  name: startDataLossWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startDataLossWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, dataLossMode: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: dataLossMode
      type:
      - string
      description: >
        此列舉會傳遞給 StartDataLoss API 以指出要引發哪一種類型的資料遺失。

        - Invalid-保留。  請勿傳入 API。

        - PartialDataLoss-PartialDataLoss 選項將會導致停機，複本的仲裁觸發 OnDataLoss 事件系統中的給定資料分割。

        - FullDataLoss-FullDataLoss 選項將會卸除這表示所有資料將都會遺失所有複本。

        . 可能的值包括: 'Invalid'、 'PartialDataLoss'，'FullDataLoss'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startNodeTransition
  name: startNodeTransition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: nodeTransitionType
      type:
      - string
      description: >
        表示要執行的轉換類型。  NodeTransitionType.Start 會啟動已停止的節點。

        NodeTransitionType.Stop 會停止已啟動的節點。

        - Invalid-保留。  請勿傳入 API。

        - 入門-轉換為啟動已停止的節點。

        - 停止-最新的節點轉換為已停止。

        . 可能的值包括: 'Invalid'、 'Start'、 'Stop'
    - id: nodeInstanceId
      type:
      - string
      description: >
        目標節點的節點執行個體識別碼。

        這可透過 GetNodeInfo API 來決定。
    - id: stopDurationInSeconds
      type:
      - number
      description: >
        讓節點維持停止的持續時間，以秒為單位。  最小值是 600，最大值是 14400。  在這段時間到期後，節點將會自動恢復運作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startNodeTransition_2
  name: startNodeTransition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: nodeTransitionType
      type:
      - string
      description: ''
    - id: nodeInstanceId
      type:
      - string
      description: ''
    - id: stopDurationInSeconds
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startNodeTransition_1
  name: startNodeTransition
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, callback: ServiceCallback<void>)'
    parameters:
    - id: nodeName
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: nodeTransitionType
      type:
      - string
      description: ''
    - id: nodeInstanceId
      type:
      - string
      description: ''
    - id: stopDurationInSeconds
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startNodeTransitionWithHttpOperationResponse
  name: startNodeTransitionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startNodeTransitionWithHttpOperationResponse(nodeName: string, operationId: string, nodeTransitionType: string, nodeInstanceId: string, stopDurationInSeconds: number, options?: function)'
    parameters:
    - id: nodeName
      type:
      - string
      description: >
        節點的名稱。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: nodeTransitionType
      type:
      - string
      description: >
        表示要執行的轉換類型。  NodeTransitionType.Start 會啟動已停止的節點。

        NodeTransitionType.Stop 會停止已啟動的節點。

        - Invalid-保留。  請勿傳入 API。

        - 入門-轉換為啟動已停止的節點。

        - 停止-最新的節點轉換為已停止。

        . 可能的值包括: 'Invalid'、 'Start'、 'Stop'
    - id: nodeInstanceId
      type:
      - string
      description: >
        目標節點的節點執行個體識別碼。

        這可透過 GetNodeInfo API 來決定。
    - id: stopDurationInSeconds
      type:
      - number
      description: >
        讓節點維持停止的持續時間，以秒為單位。  最小值是 600，最大值是 14400。  在這段時間到期後，節點將會自動恢復運作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart_1
  name: startPartitionRestart
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: restartPartitionMode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart
  name: startPartitionRestart
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: restartPartitionMode
      type:
      - string
      description: >
        Invalid-保留。  請勿傳入 API。

        - AllReplicasOrInstances-所有複本或分割區中的執行個體都會一次重新啟動。

        - OnlyActiveSecondaries-只有 「 次要 」 複本會重新啟動。

        . 可能的值包括: 'Invalid'、 'AllReplicasOrInstances'，'OnlyActiveSecondaries'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startPartitionRestart_2
  name: startPartitionRestart
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: restartPartitionMode
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startPartitionRestartWithHttpOperationResponse
  name: startPartitionRestartWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startPartitionRestartWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: string, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: restartPartitionMode
      type:
      - string
      description: >
        Invalid-保留。  請勿傳入 API。

        - AllReplicasOrInstances-所有複本或分割區中的執行個體都會一次重新啟動。

        - OnlyActiveSecondaries-只有 「 次要 」 複本會重新啟動。

        . 可能的值包括: 'Invalid'、 'AllReplicasOrInstances'，'OnlyActiveSecondaries'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss
  name: startQuorumLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: quorumLossMode
      type:
      - string
      description: >
        此列舉會傳遞給 StartQuorumLoss API 以指出要引發哪一種類型的仲裁遺失。

        - Invalid-保留。  請勿傳入 API。

        - QuorumReplicas-部分的仲裁遺失模式： 複本的最小數目的資料分割將會關閉，會導致仲裁遺失。

        - AllReplicas-完整仲裁遺失模式： 所有複本的資料分割將會關閉，將會都導致仲裁遺失。

        . 可能的值包括: 'Invalid'、 'QuorumReplicas'，'AllReplicas'
    - id: quorumLossDuration
      type:
      - number
      description: >
        分割區將維持在仲裁遺失狀態的時間長度。  必須以秒為單位來指定此值。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss_1
  name: startQuorumLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: quorumLossMode
      type:
      - string
      description: ''
    - id: quorumLossDuration
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startQuorumLoss_2
  name: startQuorumLoss
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: partitionId
      type:
      - string
      description: ''
    - id: operationId
      type:
      - string
      description: ''
    - id: quorumLossMode
      type:
      - string
      description: ''
    - id: quorumLossDuration
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.startQuorumLossWithHttpOperationResponse
  name: startQuorumLossWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function startQuorumLossWithHttpOperationResponse(serviceId: string, partitionId: string, operationId: string, quorumLossMode: string, quorumLossDuration: number, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: partitionId
      type:
      - string
      description: >
        分割區的識別。
    - id: operationId
      type:
      - string
      description: >
        識別此 API 呼叫的 GUID。  這會傳入對應的 GetProgress API
    - id: quorumLossMode
      type:
      - string
      description: >
        此列舉會傳遞給 StartQuorumLoss API 以指出要引發哪一種類型的仲裁遺失。

        - Invalid-保留。  請勿傳入 API。

        - QuorumReplicas-部分的仲裁遺失模式： 複本的最小數目的資料分割將會關閉，會導致仲裁遺失。

        - AllReplicas-完整仲裁遺失模式： 所有複本的資料分割將會關閉，將會都導致仲裁遺失。

        . 可能的值包括: 'Invalid'、 'QuorumReplicas'，'AllReplicas'
    - id: quorumLossDuration
      type:
      - number
      description: >
        分割區將維持在仲裁遺失狀態的時間長度。  必須以秒為單位來指定此值。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.stopChaos
  name: stopChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function stopChaos(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.stopChaos_1
  name: stopChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function stopChaos(callback: ServiceCallback<void>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.stopChaos_2
  name: stopChaos
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function stopChaos(options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.stopChaosWithHttpOperationResponse
  name: stopChaosWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function stopChaosWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType
  name: unprovisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionApplicationType(applicationTypeName: string, applicationTypeImageStoreVersion: ApplicationTypeImageStoreVersion, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeImageStoreVersion
      type:
      - azure-servicefabric.ApplicationTypeImageStoreVersion
      description: >
        在 映像存放區中的應用程式類型版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_2
  name: unprovisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionApplicationType(applicationTypeName: string, applicationTypeImageStoreVersion: ApplicationTypeImageStoreVersion, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeImageStoreVersion
      type:
      - azure-servicefabric.ApplicationTypeImageStoreVersion
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationType_1
  name: unprovisionApplicationType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionApplicationType(applicationTypeName: string, applicationTypeImageStoreVersion: ApplicationTypeImageStoreVersion, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: ''
    - id: applicationTypeImageStoreVersion
      type:
      - azure-servicefabric.ApplicationTypeImageStoreVersion
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionApplicationTypeWithHttpOperationResponse
  name: unprovisionApplicationTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionApplicationTypeWithHttpOperationResponse(applicationTypeName: string, applicationTypeImageStoreVersion: ApplicationTypeImageStoreVersion, options?: function)'
    parameters:
    - id: applicationTypeName
      type:
      - string
      description: >
        應用程式類型的名稱。
    - id: applicationTypeImageStoreVersion
      type:
      - azure-servicefabric.ApplicationTypeImageStoreVersion
      description: >
        在 映像存放區中的應用程式類型版本。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster
  name: unprovisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options?: function)'
    parameters:
    - id: unprovisionFabricDescription
      type:
      - azure-servicefabric.UnprovisionFabricDescription
      description: >
        描述取消佈建叢集的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster_2
  name: unprovisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: unprovisionFabricDescription
      type:
      - azure-servicefabric.UnprovisionFabricDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionCluster_1
  name: unprovisionCluster
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: unprovisionFabricDescription
      type:
      - azure-servicefabric.UnprovisionFabricDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.unprovisionClusterWithHttpOperationResponse
  name: unprovisionClusterWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unprovisionClusterWithHttpOperationResponse(unprovisionFabricDescription: UnprovisionFabricDescription, options?: function)'
    parameters:
    - id: unprovisionFabricDescription
      type:
      - azure-servicefabric.UnprovisionFabricDescription
      description: >
        描述取消佈建叢集的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_1
  name: updateApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: applicationUpgradeUpdateDescription
      type:
      - azure-servicefabric.ApplicationUpgradeUpdateDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade
  name: updateApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: applicationUpgradeUpdateDescription
      type:
      - azure-servicefabric.ApplicationUpgradeUpdateDescription
      description: >
        更新現有的應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade_2
  name: updateApplicationUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: applicationId
      type:
      - string
      description: ''
    - id: applicationUpgradeUpdateDescription
      type:
      - azure-servicefabric.ApplicationUpgradeUpdateDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateApplicationUpgradeWithHttpOperationResponse
  name: updateApplicationUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateApplicationUpgradeWithHttpOperationResponse(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: function)'
    parameters:
    - id: applicationId
      type:
      - string
      description: >
        應用程式的身分識別。 這通常是沒有 'fabric:' URI 配置之應用程式的完整名稱。

        從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 例如，如果應用程式名稱是 "fabric://myapp/app1"，則應用程式識別在 6.0+ 中會是 "myapp~app1"，而在舊版中會是 "myapp/app1"。
    - id: applicationUpgradeUpdateDescription
      type:
      - azure-servicefabric.ApplicationUpgradeUpdateDescription
      description: >
        更新現有的應用程式升級參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade
  name: updateClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: function)'
    parameters:
    - id: updateClusterUpgradeDescription
      type:
      - azure-servicefabric.UpdateClusterUpgradeDescription
      description: >
        更新叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_1
  name: updateClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: updateClusterUpgradeDescription
      type:
      - azure-servicefabric.UpdateClusterUpgradeDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgrade_2
  name: updateClusterUpgrade
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: updateClusterUpgradeDescription
      type:
      - azure-servicefabric.UpdateClusterUpgradeDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateClusterUpgradeWithHttpOperationResponse
  name: updateClusterUpgradeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateClusterUpgradeWithHttpOperationResponse(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: function)'
    parameters:
    - id: updateClusterUpgradeDescription
      type:
      - azure-servicefabric.UpdateClusterUpgradeDescription
      description: >
        更新叢集升級的參數。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState
  name: updateRepairExecutionState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairExecutionState(repairTask: RepairTask, options?: function)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: >
        描述要建立或更新的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_2
  name: updateRepairExecutionState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairExecutionState(repairTask: RepairTask, options: function, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionState_1
  name: updateRepairExecutionState
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairExecutionState(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairExecutionStateWithHttpOperationResponse
  name: updateRepairExecutionStateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairExecutionStateWithHttpOperationResponse(repairTask: RepairTask, options?: function)'
    parameters:
    - id: repairTask
      type:
      - azure-servicefabric.RepairTask
      description: >
        描述要建立或更新的修復工作。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy
  name: updateRepairTaskHealthPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: function)'
    parameters:
    - id: repairTaskUpdateHealthPolicyDescription
      type:
      - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
      description: >
        描述修復工作健康原則被更新。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1
  name: updateRepairTaskHealthPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskUpdateHealthPolicyDescription
      type:
      - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2
  name: updateRepairTaskHealthPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options: function, callback: ServiceCallback<RepairTaskUpdateInfo>)'
    parameters:
    - id: repairTaskUpdateHealthPolicyDescription
      type:
      - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
      description: ''
    return:
      type:
      - Promise<azure-servicefabric.RepairTaskUpdateInfo>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicyWithHttpOperationResponse
  name: updateRepairTaskHealthPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateRepairTaskHealthPolicyWithHttpOperationResponse(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: function)'
    parameters:
    - id: repairTaskUpdateHealthPolicyDescription
      type:
      - azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
      description: >
        描述修復工作健康原則被更新。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateService
  name: updateService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: serviceUpdateDescription
      type:
      - azure-servicefabric.ServiceUpdateDescription
      description: >
        更新服務所需的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateService_1
  name: updateService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: serviceUpdateDescription
      type:
      - azure-servicefabric.ServiceUpdateDescription
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateService_2
  name: updateService
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateService(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: serviceId
      type:
      - string
      description: ''
    - id: serviceUpdateDescription
      type:
      - azure-servicefabric.ServiceUpdateDescription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.updateServiceWithHttpOperationResponse
  name: updateServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateServiceWithHttpOperationResponse(serviceId: string, serviceUpdateDescription: ServiceUpdateDescription, options?: function)'
    parameters:
    - id: serviceId
      type:
      - string
      description: >
        服務的身分識別。 这通常是不带“fabric:”URI 方案的服务全名。 從 6.0 版開始，階層的名稱會以 "~" 字元分隔。 比方說，如果服務名稱是"fabric: //myapp/app1/svc1"，則服務識別會是"myapp ~ app1 ~ svc1"在 6.0 + 和"myapp/app1/svc1"中先前的版本。
    - id: serviceUpdateDescription
      type:
      - azure-servicefabric.ServiceUpdateDescription
      description: >
        更新服務所需的資訊。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.uploadFile
  name: uploadFile
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function uploadFile(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.uploadFile_1
  name: uploadFile
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function uploadFile(contentPath: string, callback: ServiceCallback<void>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.uploadFile_2
  name: uploadFile
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function uploadFile(contentPath: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: contentPath
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-servicefabric
- uid: azure-servicefabric.ServiceFabricClient.uploadFileWithHttpOperationResponse
  name: uploadFileWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function uploadFileWithHttpOperationResponse(contentPath: string, options?: function)'
    parameters:
    - id: contentPath
      type:
      - string
      description: >
        映像存放區中檔案或資料夾與其根的相對路徑。
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-servicefabric
references:
- uid: azure-servicefabric.RepairTaskCancelDescription
  spec.typeScript:
  - name: RepairTaskCancelDescription
    fullName: RepairTaskCancelDescription
    uid: azure-servicefabric.RepairTaskCancelDescription
- uid: Promise<azure-servicefabric.RepairTaskUpdateInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RepairTaskUpdateInfo
    fullName: RepairTaskUpdateInfo
    uid: azure-servicefabric.RepairTaskUpdateInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.RepairTaskUpdateInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RepairTaskUpdateInfo
    fullName: RepairTaskUpdateInfo
    uid: azure-servicefabric.RepairTaskUpdateInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.RepairTaskUpdateInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RepairTaskUpdateInfo
    fullName: RepairTaskUpdateInfo
    uid: azure-servicefabric.RepairTaskUpdateInfo
  - name: '>>'
    fullName: '>>'
- uid: azure-servicefabric.ImageStoreCopyDescription
  spec.typeScript:
  - name: ImageStoreCopyDescription
    fullName: ImageStoreCopyDescription
    uid: azure-servicefabric.ImageStoreCopyDescription
- uid: azure-servicefabric.ApplicationDescription
  spec.typeScript:
  - name: ApplicationDescription
    fullName: ApplicationDescription
    uid: azure-servicefabric.ApplicationDescription
- uid: azure-servicefabric.CreateComposeDeploymentDescription
  spec.typeScript:
  - name: CreateComposeDeploymentDescription
    fullName: CreateComposeDeploymentDescription
    uid: azure-servicefabric.CreateComposeDeploymentDescription
- uid: azure-servicefabric.RepairTask
  spec.typeScript:
  - name: RepairTask
    fullName: RepairTask
    uid: azure-servicefabric.RepairTask
- uid: azure-servicefabric.ServiceDescription
  spec.typeScript:
  - name: ServiceDescription
    fullName: ServiceDescription
    uid: azure-servicefabric.ServiceDescription
- uid: azure-servicefabric.ServiceFromTemplateDescription
  spec.typeScript:
  - name: ServiceFromTemplateDescription
    fullName: ServiceFromTemplateDescription
    uid: azure-servicefabric.ServiceFromTemplateDescription
- uid: azure-servicefabric.RepairTaskDeleteDescription
  spec.typeScript:
  - name: RepairTaskDeleteDescription
    fullName: RepairTaskDeleteDescription
    uid: azure-servicefabric.RepairTaskDeleteDescription
- uid: azure-servicefabric.DeployServicePackageToNodeDescription
  spec.typeScript:
  - name: DeployServicePackageToNodeDescription
    fullName: DeployServicePackageToNodeDescription
    uid: azure-servicefabric.DeployServicePackageToNodeDescription
- uid: azure-servicefabric.DeactivationIntentDescription
  spec.typeScript:
  - name: DeactivationIntentDescription
    fullName: DeactivationIntentDescription
    uid: azure-servicefabric.DeactivationIntentDescription
- uid: azure-servicefabric.RepairTaskApproveDescription
  spec.typeScript:
  - name: RepairTaskApproveDescription
    fullName: RepairTaskApproveDescription
    uid: azure-servicefabric.RepairTaskApproveDescription
- uid: Promise<azure-servicefabric.AadMetadataObject>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AadMetadataObject
    fullName: AadMetadataObject
    uid: azure-servicefabric.AadMetadataObject
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.AadMetadataObject>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AadMetadataObject
    fullName: AadMetadataObject
    uid: azure-servicefabric.AadMetadataObject
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.AadMetadataObject>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AadMetadataObject
    fullName: AadMetadataObject
    uid: azure-servicefabric.AadMetadataObject
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationHealth
    fullName: ApplicationHealth
    uid: azure-servicefabric.ApplicationHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationHealth
    fullName: ApplicationHealth
    uid: azure-servicefabric.ApplicationHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationHealth
    fullName: ApplicationHealth
    uid: azure-servicefabric.ApplicationHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationInfo
    fullName: ApplicationInfo
    uid: azure-servicefabric.ApplicationInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationInfo
    fullName: ApplicationInfo
    uid: azure-servicefabric.ApplicationInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedApplicationInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedApplicationInfoList
    fullName: PagedApplicationInfoList
    uid: azure-servicefabric.PagedApplicationInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedApplicationInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedApplicationInfoList
    fullName: PagedApplicationInfoList
    uid: azure-servicefabric.PagedApplicationInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedApplicationInfoList
    fullName: PagedApplicationInfoList
    uid: azure-servicefabric.PagedApplicationInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationInfo
    fullName: ApplicationInfo
    uid: azure-servicefabric.ApplicationInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationLoadInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationLoadInfo
    fullName: ApplicationLoadInfo
    uid: azure-servicefabric.ApplicationLoadInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationLoadInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationLoadInfo
    fullName: ApplicationLoadInfo
    uid: azure-servicefabric.ApplicationLoadInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationLoadInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationLoadInfo
    fullName: ApplicationLoadInfo
    uid: azure-servicefabric.ApplicationLoadInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationTypeManifest>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationTypeManifest
    fullName: ApplicationTypeManifest
    uid: azure-servicefabric.ApplicationTypeManifest
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationTypeManifest>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationTypeManifest
    fullName: ApplicationTypeManifest
    uid: azure-servicefabric.ApplicationTypeManifest
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationTypeManifest>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationTypeManifest
    fullName: ApplicationTypeManifest
    uid: azure-servicefabric.ApplicationTypeManifest
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationNameInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationNameInfo
    fullName: ApplicationNameInfo
    uid: azure-servicefabric.ApplicationNameInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationNameInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationNameInfo
    fullName: ApplicationNameInfo
    uid: azure-servicefabric.ApplicationNameInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationNameInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationNameInfo
    fullName: ApplicationNameInfo
    uid: azure-servicefabric.ApplicationNameInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.PagedApplicationTypeInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedApplicationTypeInfoList
    fullName: PagedApplicationTypeInfoList
    uid: azure-servicefabric.PagedApplicationTypeInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedApplicationTypeInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedApplicationTypeInfoList
    fullName: PagedApplicationTypeInfoList
    uid: azure-servicefabric.PagedApplicationTypeInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedApplicationTypeInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedApplicationTypeInfoList
    fullName: PagedApplicationTypeInfoList
    uid: azure-servicefabric.PagedApplicationTypeInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ApplicationUpgradeProgressInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ApplicationUpgradeProgressInfo
    fullName: ApplicationUpgradeProgressInfo
    uid: azure-servicefabric.ApplicationUpgradeProgressInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ApplicationUpgradeProgressInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ApplicationUpgradeProgressInfo
    fullName: ApplicationUpgradeProgressInfo
    uid: azure-servicefabric.ApplicationUpgradeProgressInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ApplicationUpgradeProgressInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ApplicationUpgradeProgressInfo
    fullName: ApplicationUpgradeProgressInfo
    uid: azure-servicefabric.ApplicationUpgradeProgressInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ChaosReport>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ChaosReport
    fullName: ChaosReport
    uid: azure-servicefabric.ChaosReport
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ChaosReport>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ChaosReport
    fullName: ChaosReport
    uid: azure-servicefabric.ChaosReport
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ChaosReport>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ChaosReport
    fullName: ChaosReport
    uid: azure-servicefabric.ChaosReport
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ClusterConfiguration>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterConfiguration
    fullName: ClusterConfiguration
    uid: azure-servicefabric.ClusterConfiguration
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterConfiguration>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterConfiguration
    fullName: ClusterConfiguration
    uid: azure-servicefabric.ClusterConfiguration
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterConfigurationUpgradeStatusInfo
    fullName: ClusterConfigurationUpgradeStatusInfo
    uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterConfigurationUpgradeStatusInfo
    fullName: ClusterConfigurationUpgradeStatusInfo
    uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterConfigurationUpgradeStatusInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterConfigurationUpgradeStatusInfo
    fullName: ClusterConfigurationUpgradeStatusInfo
    uid: azure-servicefabric.ClusterConfigurationUpgradeStatusInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterConfiguration>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterConfiguration
    fullName: ClusterConfiguration
    uid: azure-servicefabric.ClusterConfiguration
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ClusterHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterHealth
    fullName: ClusterHealth
    uid: azure-servicefabric.ClusterHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterHealth
    fullName: ClusterHealth
    uid: azure-servicefabric.ClusterHealth
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.ClusterHealthChunk>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterHealthChunk
    fullName: ClusterHealthChunk
    uid: azure-servicefabric.ClusterHealthChunk
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterHealthChunk>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterHealthChunk
    fullName: ClusterHealthChunk
    uid: azure-servicefabric.ClusterHealthChunk
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterHealthChunk>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterHealthChunk
    fullName: ClusterHealthChunk
    uid: azure-servicefabric.ClusterHealthChunk
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterHealth
    fullName: ClusterHealth
    uid: azure-servicefabric.ClusterHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ClusterManifest>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterManifest
    fullName: ClusterManifest
    uid: azure-servicefabric.ClusterManifest
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterManifest>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterManifest
    fullName: ClusterManifest
    uid: azure-servicefabric.ClusterManifest
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterManifest>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterManifest
    fullName: ClusterManifest
    uid: azure-servicefabric.ClusterManifest
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ClusterUpgradeProgressObject>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ClusterUpgradeProgressObject
    fullName: ClusterUpgradeProgressObject
    uid: azure-servicefabric.ClusterUpgradeProgressObject
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ClusterUpgradeProgressObject>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ClusterUpgradeProgressObject
    fullName: ClusterUpgradeProgressObject
    uid: azure-servicefabric.ClusterUpgradeProgressObject
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ClusterUpgradeProgressObject>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ClusterUpgradeProgressObject
    fullName: ClusterUpgradeProgressObject
    uid: azure-servicefabric.ClusterUpgradeProgressObject
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ComposeDeploymentStatusInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ComposeDeploymentStatusInfo
    fullName: ComposeDeploymentStatusInfo
    uid: azure-servicefabric.ComposeDeploymentStatusInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ComposeDeploymentStatusInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ComposeDeploymentStatusInfo
    fullName: ComposeDeploymentStatusInfo
    uid: azure-servicefabric.ComposeDeploymentStatusInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedComposeDeploymentStatusInfoList
    fullName: PagedComposeDeploymentStatusInfoList
    uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedComposeDeploymentStatusInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedComposeDeploymentStatusInfoList
    fullName: PagedComposeDeploymentStatusInfoList
    uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedComposeDeploymentStatusInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedComposeDeploymentStatusInfoList
    fullName: PagedComposeDeploymentStatusInfoList
    uid: azure-servicefabric.PagedComposeDeploymentStatusInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentStatusInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ComposeDeploymentStatusInfo
    fullName: ComposeDeploymentStatusInfo
    uid: azure-servicefabric.ComposeDeploymentStatusInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ComposeDeploymentUpgradeProgressInfo
    fullName: ComposeDeploymentUpgradeProgressInfo
    uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ComposeDeploymentUpgradeProgressInfo
    fullName: ComposeDeploymentUpgradeProgressInfo
    uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ComposeDeploymentUpgradeProgressInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ComposeDeploymentUpgradeProgressInfo
    fullName: ComposeDeploymentUpgradeProgressInfo
    uid: azure-servicefabric.ComposeDeploymentUpgradeProgressInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.PartitionDataLossProgress>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PartitionDataLossProgress
    fullName: PartitionDataLossProgress
    uid: azure-servicefabric.PartitionDataLossProgress
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PartitionDataLossProgress>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PartitionDataLossProgress
    fullName: PartitionDataLossProgress
    uid: azure-servicefabric.PartitionDataLossProgress
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionDataLossProgress>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PartitionDataLossProgress
    fullName: PartitionDataLossProgress
    uid: azure-servicefabric.PartitionDataLossProgress
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.DeployedApplicationHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedApplicationHealth
    fullName: DeployedApplicationHealth
    uid: azure-servicefabric.DeployedApplicationHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.DeployedApplicationHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedApplicationHealth
    fullName: DeployedApplicationHealth
    uid: azure-servicefabric.DeployedApplicationHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedApplicationHealth
    fullName: DeployedApplicationHealth
    uid: azure-servicefabric.DeployedApplicationHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.DeployedApplicationInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.DeployedApplicationInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.DeployedApplicationInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.DeployedApplicationInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedApplicationInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    uid: azure-servicefabric.DeployedApplicationInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.DeployedCodePackageInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedCodePackageInfo
    fullName: DeployedCodePackageInfo
    uid: azure-servicefabric.DeployedCodePackageInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.DeployedCodePackageInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedCodePackageInfo
    fullName: DeployedCodePackageInfo
    uid: azure-servicefabric.DeployedCodePackageInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedCodePackageInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedCodePackageInfo
    fullName: DeployedCodePackageInfo
    uid: azure-servicefabric.DeployedCodePackageInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.DeployedServicePackageHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedServicePackageHealth
    fullName: DeployedServicePackageHealth
    uid: azure-servicefabric.DeployedServicePackageHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.DeployedServicePackageHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedServicePackageHealth
    fullName: DeployedServicePackageHealth
    uid: azure-servicefabric.DeployedServicePackageHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedServicePackageHealth
    fullName: DeployedServicePackageHealth
    uid: azure-servicefabric.DeployedServicePackageHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.DeployedServicePackageInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedServicePackageInfo
    fullName: DeployedServicePackageInfo
    uid: azure-servicefabric.DeployedServicePackageInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.DeployedServicePackageInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedServicePackageInfo
    fullName: DeployedServicePackageInfo
    uid: azure-servicefabric.DeployedServicePackageInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServicePackageInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedServicePackageInfo
    fullName: DeployedServicePackageInfo
    uid: azure-servicefabric.DeployedServicePackageInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedServiceReplicaDetailInfo
    fullName: DeployedServiceReplicaDetailInfo
    uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.DeployedServiceReplicaDetailInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedServiceReplicaDetailInfo
    fullName: DeployedServiceReplicaDetailInfo
    uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaDetailInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedServiceReplicaDetailInfo
    fullName: DeployedServiceReplicaDetailInfo
    uid: azure-servicefabric.DeployedServiceReplicaDetailInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.DeployedServiceReplicaInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedServiceReplicaInfo
    fullName: DeployedServiceReplicaInfo
    uid: azure-servicefabric.DeployedServiceReplicaInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.DeployedServiceReplicaInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedServiceReplicaInfo
    fullName: DeployedServiceReplicaInfo
    uid: azure-servicefabric.DeployedServiceReplicaInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceReplicaInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedServiceReplicaInfo
    fullName: DeployedServiceReplicaInfo
    uid: azure-servicefabric.DeployedServiceReplicaInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.DeployedServiceTypeInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeployedServiceTypeInfo
    fullName: DeployedServiceTypeInfo
    uid: azure-servicefabric.DeployedServiceTypeInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.DeployedServiceTypeInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeployedServiceTypeInfo
    fullName: DeployedServiceTypeInfo
    uid: azure-servicefabric.DeployedServiceTypeInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.DeployedServiceTypeInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeployedServiceTypeInfo
    fullName: DeployedServiceTypeInfo
    uid: azure-servicefabric.DeployedServiceTypeInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.OperationStatus[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OperationStatus
    fullName: OperationStatus
    uid: azure-servicefabric.OperationStatus
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.OperationStatus[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OperationStatus
    fullName: OperationStatus
    uid: azure-servicefabric.OperationStatus
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.OperationStatus[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OperationStatus
    fullName: OperationStatus
    uid: azure-servicefabric.OperationStatus
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.ImageStoreContent>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageStoreContent
    fullName: ImageStoreContent
    uid: azure-servicefabric.ImageStoreContent
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ImageStoreContent>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageStoreContent
    fullName: ImageStoreContent
    uid: azure-servicefabric.ImageStoreContent
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ImageStoreContent>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageStoreContent
    fullName: ImageStoreContent
    uid: azure-servicefabric.ImageStoreContent
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.NodeHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: NodeHealth
    fullName: NodeHealth
    uid: azure-servicefabric.NodeHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.NodeHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: NodeHealth
    fullName: NodeHealth
    uid: azure-servicefabric.NodeHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.NodeHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: NodeHealth
    fullName: NodeHealth
    uid: azure-servicefabric.NodeHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.NodeInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: NodeInfo
    fullName: NodeInfo
    uid: azure-servicefabric.NodeInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.NodeInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: NodeInfo
    fullName: NodeInfo
    uid: azure-servicefabric.NodeInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedNodeInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedNodeInfoList
    fullName: PagedNodeInfoList
    uid: azure-servicefabric.PagedNodeInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedNodeInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedNodeInfoList
    fullName: PagedNodeInfoList
    uid: azure-servicefabric.PagedNodeInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedNodeInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedNodeInfoList
    fullName: PagedNodeInfoList
    uid: azure-servicefabric.PagedNodeInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.NodeInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: NodeInfo
    fullName: NodeInfo
    uid: azure-servicefabric.NodeInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.NodeLoadInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: NodeLoadInfo
    fullName: NodeLoadInfo
    uid: azure-servicefabric.NodeLoadInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.NodeLoadInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: NodeLoadInfo
    fullName: NodeLoadInfo
    uid: azure-servicefabric.NodeLoadInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.NodeLoadInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: NodeLoadInfo
    fullName: NodeLoadInfo
    uid: azure-servicefabric.NodeLoadInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.NodeTransitionProgress>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: NodeTransitionProgress
    fullName: NodeTransitionProgress
    uid: azure-servicefabric.NodeTransitionProgress
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.NodeTransitionProgress>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: NodeTransitionProgress
    fullName: NodeTransitionProgress
    uid: azure-servicefabric.NodeTransitionProgress
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.NodeTransitionProgress>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: NodeTransitionProgress
    fullName: NodeTransitionProgress
    uid: azure-servicefabric.NodeTransitionProgress
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.PartitionHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PartitionHealth
    fullName: PartitionHealth
    uid: azure-servicefabric.PartitionHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PartitionHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PartitionHealth
    fullName: PartitionHealth
    uid: azure-servicefabric.PartitionHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PartitionHealth
    fullName: PartitionHealth
    uid: azure-servicefabric.PartitionHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServicePartitionInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServicePartitionInfo
    fullName: ServicePartitionInfo
    uid: azure-servicefabric.ServicePartitionInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServicePartitionInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServicePartitionInfo
    fullName: ServicePartitionInfo
    uid: azure-servicefabric.ServicePartitionInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedServicePartitionInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedServicePartitionInfoList
    fullName: PagedServicePartitionInfoList
    uid: azure-servicefabric.PagedServicePartitionInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedServicePartitionInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedServicePartitionInfoList
    fullName: PagedServicePartitionInfoList
    uid: azure-servicefabric.PagedServicePartitionInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedServicePartitionInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedServicePartitionInfoList
    fullName: PagedServicePartitionInfoList
    uid: azure-servicefabric.PagedServicePartitionInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServicePartitionInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServicePartitionInfo
    fullName: ServicePartitionInfo
    uid: azure-servicefabric.ServicePartitionInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.PartitionLoadInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PartitionLoadInformation
    fullName: PartitionLoadInformation
    uid: azure-servicefabric.PartitionLoadInformation
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PartitionLoadInformation>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PartitionLoadInformation
    fullName: PartitionLoadInformation
    uid: azure-servicefabric.PartitionLoadInformation
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionLoadInformation>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PartitionLoadInformation
    fullName: PartitionLoadInformation
    uid: azure-servicefabric.PartitionLoadInformation
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.PartitionRestartProgress>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PartitionRestartProgress
    fullName: PartitionRestartProgress
    uid: azure-servicefabric.PartitionRestartProgress
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PartitionRestartProgress>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PartitionRestartProgress
    fullName: PartitionRestartProgress
    uid: azure-servicefabric.PartitionRestartProgress
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionRestartProgress>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PartitionRestartProgress
    fullName: PartitionRestartProgress
    uid: azure-servicefabric.PartitionRestartProgress
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.FabricCodeVersionInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FabricCodeVersionInfo
    fullName: FabricCodeVersionInfo
    uid: azure-servicefabric.FabricCodeVersionInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.FabricCodeVersionInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FabricCodeVersionInfo
    fullName: FabricCodeVersionInfo
    uid: azure-servicefabric.FabricCodeVersionInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.FabricCodeVersionInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FabricCodeVersionInfo
    fullName: FabricCodeVersionInfo
    uid: azure-servicefabric.FabricCodeVersionInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.FabricConfigVersionInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FabricConfigVersionInfo
    fullName: FabricConfigVersionInfo
    uid: azure-servicefabric.FabricConfigVersionInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.FabricConfigVersionInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FabricConfigVersionInfo
    fullName: FabricConfigVersionInfo
    uid: azure-servicefabric.FabricConfigVersionInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.FabricConfigVersionInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FabricConfigVersionInfo
    fullName: FabricConfigVersionInfo
    uid: azure-servicefabric.FabricConfigVersionInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.PartitionQuorumLossProgress>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PartitionQuorumLossProgress
    fullName: PartitionQuorumLossProgress
    uid: azure-servicefabric.PartitionQuorumLossProgress
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PartitionQuorumLossProgress>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PartitionQuorumLossProgress
    fullName: PartitionQuorumLossProgress
    uid: azure-servicefabric.PartitionQuorumLossProgress
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PartitionQuorumLossProgress>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PartitionQuorumLossProgress
    fullName: PartitionQuorumLossProgress
    uid: azure-servicefabric.PartitionQuorumLossProgress
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.RepairTask[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RepairTask
    fullName: RepairTask
    uid: azure-servicefabric.RepairTask
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.RepairTask[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RepairTask
    fullName: RepairTask
    uid: azure-servicefabric.RepairTask
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.RepairTask[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RepairTask
    fullName: RepairTask
    uid: azure-servicefabric.RepairTask
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-servicefabric.ReplicaHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ReplicaHealth
    fullName: ReplicaHealth
    uid: azure-servicefabric.ReplicaHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ReplicaHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ReplicaHealth
    fullName: ReplicaHealth
    uid: azure-servicefabric.ReplicaHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ReplicaHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ReplicaHealth
    fullName: ReplicaHealth
    uid: azure-servicefabric.ReplicaHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ReplicaInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ReplicaInfo
    fullName: ReplicaInfo
    uid: azure-servicefabric.ReplicaInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ReplicaInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ReplicaInfo
    fullName: ReplicaInfo
    uid: azure-servicefabric.ReplicaInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedReplicaInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedReplicaInfoList
    fullName: PagedReplicaInfoList
    uid: azure-servicefabric.PagedReplicaInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedReplicaInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedReplicaInfoList
    fullName: PagedReplicaInfoList
    uid: azure-servicefabric.PagedReplicaInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedReplicaInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedReplicaInfoList
    fullName: PagedReplicaInfoList
    uid: azure-servicefabric.PagedReplicaInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ReplicaInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ReplicaInfo
    fullName: ReplicaInfo
    uid: azure-servicefabric.ReplicaInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceDescription
    fullName: ServiceDescription
    uid: azure-servicefabric.ServiceDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServiceDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceDescription
    fullName: ServiceDescription
    uid: azure-servicefabric.ServiceDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceDescription
    fullName: ServiceDescription
    uid: azure-servicefabric.ServiceDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceHealth>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceHealth
    fullName: ServiceHealth
    uid: azure-servicefabric.ServiceHealth
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServiceHealth>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceHealth
    fullName: ServiceHealth
    uid: azure-servicefabric.ServiceHealth
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceHealth>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceHealth
    fullName: ServiceHealth
    uid: azure-servicefabric.ServiceHealth
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceInfo
    fullName: ServiceInfo
    uid: azure-servicefabric.ServiceInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServiceInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceInfo
    fullName: ServiceInfo
    uid: azure-servicefabric.ServiceInfo
  - name: '>'
    fullName: '>'
- uid: Promise<azure-servicefabric.PagedServiceInfoList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PagedServiceInfoList
    fullName: PagedServiceInfoList
    uid: azure-servicefabric.PagedServiceInfoList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.PagedServiceInfoList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PagedServiceInfoList
    fullName: PagedServiceInfoList
    uid: azure-servicefabric.PagedServiceInfoList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.PagedServiceInfoList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PagedServiceInfoList
    fullName: PagedServiceInfoList
    uid: azure-servicefabric.PagedServiceInfoList
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceInfo
    fullName: ServiceInfo
    uid: azure-servicefabric.ServiceInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceTypeManifest>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceTypeManifest
    fullName: ServiceTypeManifest
    uid: azure-servicefabric.ServiceTypeManifest
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServiceTypeManifest>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceTypeManifest
    fullName: ServiceTypeManifest
    uid: azure-servicefabric.ServiceTypeManifest
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeManifest>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceTypeManifest
    fullName: ServiceTypeManifest
    uid: azure-servicefabric.ServiceTypeManifest
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceNameInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceNameInfo
    fullName: ServiceNameInfo
    uid: azure-servicefabric.ServiceNameInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ServiceNameInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceNameInfo
    fullName: ServiceNameInfo
    uid: azure-servicefabric.ServiceNameInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceNameInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceNameInfo
    fullName: ServiceNameInfo
    uid: azure-servicefabric.ServiceNameInfo
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-servicefabric.ServiceTypeInfo[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ServiceTypeInfo
    fullName: ServiceTypeInfo
    uid: azure-servicefabric.ServiceTypeInfo
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-servicefabric.ServiceTypeInfo[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ServiceTypeInfo
    fullName: ServiceTypeInfo
    uid: azure-servicefabric.ServiceTypeInfo
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ServiceTypeInfo[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ServiceTypeInfo
    fullName: ServiceTypeInfo
    uid: azure-servicefabric.ServiceTypeInfo
  - name: '[]>>'
    fullName: '[]>>'
- uid: azure-servicefabric.ApplicationTypeImageStorePath
  spec.typeScript:
  - name: ApplicationTypeImageStorePath
    fullName: ApplicationTypeImageStorePath
    uid: azure-servicefabric.ApplicationTypeImageStorePath
- uid: azure-servicefabric.ProvisionFabricDescription
  spec.typeScript:
  - name: ProvisionFabricDescription
    fullName: ProvisionFabricDescription
    uid: azure-servicefabric.ProvisionFabricDescription
- uid: azure-servicefabric.HealthInformation
  spec.typeScript:
  - name: HealthInformation
    fullName: HealthInformation
    uid: azure-servicefabric.HealthInformation
- uid: Promise<azure-servicefabric.ResolvedServicePartition>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ResolvedServicePartition
    fullName: ResolvedServicePartition
    uid: azure-servicefabric.ResolvedServicePartition
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-servicefabric.ResolvedServicePartition>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ResolvedServicePartition
    fullName: ResolvedServicePartition
    uid: azure-servicefabric.ResolvedServicePartition
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-servicefabric.ResolvedServicePartition>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ResolvedServicePartition
    fullName: ResolvedServicePartition
    uid: azure-servicefabric.ResolvedServicePartition
  - name: '>>'
    fullName: '>>'
- uid: azure-servicefabric.RestartDeployedCodePackageDescription
  spec.typeScript:
  - name: RestartDeployedCodePackageDescription
    fullName: RestartDeployedCodePackageDescription
    uid: azure-servicefabric.RestartDeployedCodePackageDescription
- uid: azure-servicefabric.RestartNodeDescription
  spec.typeScript:
  - name: RestartNodeDescription
    fullName: RestartNodeDescription
    uid: azure-servicefabric.RestartNodeDescription
- uid: azure-servicefabric.ResumeApplicationUpgradeDescription
  spec.typeScript:
  - name: ResumeApplicationUpgradeDescription
    fullName: ResumeApplicationUpgradeDescription
    uid: azure-servicefabric.ResumeApplicationUpgradeDescription
- uid: azure-servicefabric.ResumeClusterUpgradeDescription
  spec.typeScript:
  - name: ResumeClusterUpgradeDescription
    fullName: ResumeClusterUpgradeDescription
    uid: azure-servicefabric.ResumeClusterUpgradeDescription
- uid: azure-servicefabric.ApplicationUpgradeDescription
  spec.typeScript:
  - name: ApplicationUpgradeDescription
    fullName: ApplicationUpgradeDescription
    uid: azure-servicefabric.ApplicationUpgradeDescription
- uid: azure-servicefabric.ChaosParameters
  spec.typeScript:
  - name: ChaosParameters
    fullName: ChaosParameters
    uid: azure-servicefabric.ChaosParameters
- uid: azure-servicefabric.ClusterConfigurationUpgradeDescription
  spec.typeScript:
  - name: ClusterConfigurationUpgradeDescription
    fullName: ClusterConfigurationUpgradeDescription
    uid: azure-servicefabric.ClusterConfigurationUpgradeDescription
- uid: azure-servicefabric.StartClusterUpgradeDescription
  spec.typeScript:
  - name: StartClusterUpgradeDescription
    fullName: StartClusterUpgradeDescription
    uid: azure-servicefabric.StartClusterUpgradeDescription
- uid: azure-servicefabric.ComposeDeploymentUpgradeDescription
  spec.typeScript:
  - name: ComposeDeploymentUpgradeDescription
    fullName: ComposeDeploymentUpgradeDescription
    uid: azure-servicefabric.ComposeDeploymentUpgradeDescription
- uid: azure-servicefabric.ApplicationTypeImageStoreVersion
  spec.typeScript:
  - name: ApplicationTypeImageStoreVersion
    fullName: ApplicationTypeImageStoreVersion
    uid: azure-servicefabric.ApplicationTypeImageStoreVersion
- uid: azure-servicefabric.UnprovisionFabricDescription
  spec.typeScript:
  - name: UnprovisionFabricDescription
    fullName: UnprovisionFabricDescription
    uid: azure-servicefabric.UnprovisionFabricDescription
- uid: azure-servicefabric.ApplicationUpgradeUpdateDescription
  spec.typeScript:
  - name: ApplicationUpgradeUpdateDescription
    fullName: ApplicationUpgradeUpdateDescription
    uid: azure-servicefabric.ApplicationUpgradeUpdateDescription
- uid: azure-servicefabric.UpdateClusterUpgradeDescription
  spec.typeScript:
  - name: UpdateClusterUpgradeDescription
    fullName: UpdateClusterUpgradeDescription
    uid: azure-servicefabric.UpdateClusterUpgradeDescription
- uid: azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
  spec.typeScript:
  - name: RepairTaskUpdateHealthPolicyDescription
    fullName: RepairTaskUpdateHealthPolicyDescription
    uid: azure-servicefabric.RepairTaskUpdateHealthPolicyDescription
- uid: azure-servicefabric.ServiceUpdateDescription
  spec.typeScript:
  - name: ServiceUpdateDescription
    fullName: ServiceUpdateDescription
    uid: azure-servicefabric.ServiceUpdateDescription
