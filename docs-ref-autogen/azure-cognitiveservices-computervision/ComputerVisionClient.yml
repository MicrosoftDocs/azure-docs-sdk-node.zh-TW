### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
      - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: 將自訂資訊新增至使用者代理標頭
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            要加入至使用者代理標頭，為字串的資訊。
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
    name: 'analyzeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
    name: 'analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
    name: 'analyzeImageByDomain(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            要辨識的定義域專屬內容。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
    name: 'analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            要辨識的定義域專屬內容。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
    name: 'analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
    name: 'analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            要辨識的定義域專屬內容。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
    name: 'analyzeImageByDomainWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。
      目前，该 API 提供以下域特定的模型：名人、地标。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。
      如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            要辨識的定義域專屬內容。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
    name: 'analyzeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
    name: 'analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
    name: 'analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
    name: 'analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
    name: 'analyzeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。 在您的要求，沒有選擇性的參數，以允許您選擇要傳回的功能。 根據預設，影像分類會在回應中傳回。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
    name: 'batchReadFile(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得讀取作業，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法的結果。 當您使用的讀取檔案介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您的 「 讀取作業結果 」 作業，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
    name: 'batchReadFile(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得讀取作業，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法的結果。 當您使用的讀取檔案介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您的 「 讀取作業結果 」 作業，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
    name: 'batchReadFile(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得讀取作業，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法的結果。 當您使用的讀取檔案介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您的 「 讀取作業結果 」 作業，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFile(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
    name: 'batchReadFileInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得作業的結果讀取文件，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法。 當您使用讀取文件介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位會包含您必須使用您 「 取得讀取結果作業 」 的 URL，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
    name: 'batchReadFileInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得作業的結果讀取文件，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法。 當您使用讀取文件介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位會包含您必須使用您 「 取得讀取結果作業 」 的 URL，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
    name: 'batchReadFileInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得作業的結果讀取文件，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法。 當您使用讀取文件介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位會包含您必須使用您 「 取得讀取結果作業 」 的 URL，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
    name: 'batchReadFileInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得作業的結果讀取文件，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法。 當您使用讀取文件介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位會包含您必須使用您 「 取得讀取結果作業 」 的 URL，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFileInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
    name: 'batchReadFileWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 您可以使用這個介面來取得讀取作業，採用適合大量文字的文件的美工狀態光學字元辨識 (OCR) 演算法的結果。 當您使用的讀取檔案介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您的 「 讀取作業結果 」 作業，即可存取 OCR 的結果。
    syntax:
      content: 'function batchReadFileWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
    name: 'ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            用來唯一識別用戶端的訂用帳戶的訂用帳戶認證。
        - id: endpoint
          type:
            - string
          description: |
            支援的認知服務端點。
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
    name: 'describeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
    name: 'describeImage(string, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
    name: 'describeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
    name: 'describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
    name: 'describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
    name: 'describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
    name: 'describeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
    name: 'detectObjects(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjects(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
    name: 'detectObjects(string, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjects(url: string, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
    name: 'detectObjectsInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
    name: 'detectObjectsInStream(stream.Readable, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
    name: 'detectObjectsInStream(stream.Readable, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
    name: 'detectObjectsInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjectsInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
    name: 'detectObjectsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      對指定的映像中的物體偵測。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function detectObjectsWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
    name: 'generateThumbnail(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            縮圖，單位為像素的寬度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: height
          type:
            - number
          description: |
            縮圖，單位為像素的高度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
    name: 'generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
    name: 'generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            縮圖，單位為像素的寬度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: height
          type:
            - number
          description: |
            縮圖，單位為像素的高度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
    name: 'generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
    name: 'generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            縮圖，單位為像素的寬度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: height
          type:
            - number
          description: |
            縮圖，單位為像素的高度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
    name: 'generateThumbnailWithHttpOperationResponse(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。
      當您指定不同於輸入影像的外觀比例時，可協助智慧裁剪。
      成功的回應會包含縮圖影像二進位檔。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            縮圖，單位為像素的寬度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: height
          type:
            - number
          description: |
            縮圖，單位為像素的高度。 它必須是介於 1 到 1024年之間。 建議的最小為 50。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
    name: 'getAreaOfInterest(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
    name: 'getAreaOfInterest(string, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterest(url: string, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
    name: 'getAreaOfInterestInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
    name: 'getAreaOfInterestInStream(stream.Readable, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
    name: 'getAreaOfInterestInStream(stream.Readable, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
    name: 'getAreaOfInterestInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterestInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
    name: 'getAreaOfInterestWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      發生錯誤時，會傳回的錯誤碼和錯誤訊息。 錯誤碼可能是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 逾時或 InternalServerError。
    syntax:
      content: 'function getAreaOfInterestWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      嘗試尋找給定 azure nodejs 封裝 package.json。
      如果找到，傳回的名稱和版本的封裝，請閱讀 package.json 如果找不到 package.json，會傳回預設值。
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: 傳遞特定的 azure 管理用戶端的目錄。
      return:
        type:
          - Object
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
    name: 'getReadOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得 OCR 的讀取作業的結果。 應該從批次讀取檔案介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            在 [批次讀取檔案] 介面的回應中傳回的讀取作業的識別碼。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
    name: 'getReadOperationResult(string, Object, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得 OCR 的讀取作業的結果。 應該從批次讀取檔案介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: Object, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得 OCR 的讀取作業的結果。 應該從批次讀取檔案介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
    name: 'getReadOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得 OCR 的讀取作業的結果。 應該從批次讀取檔案介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getReadOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            在 [批次讀取檔案] 介面的回應中傳回的讀取作業的識別碼。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
    name: 'getTextOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得文字作業結果。 應該從辨識文字介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            '辨識文字' 的回應中傳回的文字作業的識別碼
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
    name: 'getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得文字作業結果。 應該從辨識文字介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得文字作業結果。 應該從辨識文字介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
    name: 'getTextOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 這個介面用來取得文字作業結果。 應該從辨識文字介面所傳回的 「 作業-位置 」 欄位中擷取此介面的 URL。
    syntax:
      content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            '辨識文字' 的回應中傳回的文字作業的識別碼
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
    name: listModels(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回计算机视觉 API 支持的域特定模型列表。 目前，该 API 支持以下域特定的模型：名人识别器、地标识别器。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function listModels(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
    name: 'listModels(Object, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回计算机视觉 API 支持的域特定模型列表。 目前，该 API 支持以下域特定的模型：名人识别器、地标识别器。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回计算机视觉 API 支持的域特定模型列表。 目前，该 API 支持以下域特定的模型：名人识别器、地标识别器。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
    name: listModelsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回计算机视觉 API 支持的域特定模型列表。 目前，该 API 支持以下域特定的模型：名人识别器、地标识别器。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function listModelsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
    name: 'recognizePrintedText(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            是否偵測影像中的文字方向。 DetectOrientation = true 的 OCR 服務會嘗試偵測影像方向，並更正之前進一步處理 (例如它是否為上下顛倒)。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
    name: 'recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            是否偵測影像中的文字方向。 DetectOrientation = true 的 OCR 服務會嘗試偵測影像方向，並更正之前進一步處理 (例如它是否為上下顛倒)。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
    name: 'recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            是否偵測影像中的文字方向。 DetectOrientation = true 的 OCR 服務會嘗試偵測影像方向，並更正之前進一步處理 (例如它是否為上下顛倒)。
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
    name: 'recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功時，將會傳回 OCR 結果。
      發生錯誤時，將會傳回錯誤碼與錯誤訊息。 錯誤碼可以是其中一個 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage，還是 InternalServerError。
    syntax:
      content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            是否偵測影像中的文字方向。 DetectOrientation = true 的 OCR 服務會嘗試偵測影像方向，並更正之前進一步處理 (例如它是否為上下顛倒)。
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
    name: 'recognizeText(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeText(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
    name: 'recognizeText(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
    name: 'recognizeText(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
    name: 'recognizeTextInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
    name: 'recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
    name: 'recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
    name: 'recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
    name: 'recognizeTextWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 辨識文字作業。 當您使用的辨識文字介面時，回應會包含名為 「 作業-位置 」 的欄位。 「 作業-位置 」 欄位包含的 URL，您必須使用您取得辨識的文字作業結果的作業。
    syntax:
      content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: mode
          type:
            - string
          description: |
            類型可辨識的文字。 可能的值包括：'手寫'，' 列印 '
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
    name: 'tagImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
    name: 'tagImage(string, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
    name: 'tagImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
    name: 'tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
    name: 'tagImageInStream(stream.Readable, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
    name: 'tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            影像資料流。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    name: 'tagImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 標記可能會包含若要避免模稜兩可，或提供內容的提示，例如標記"cello 」 可能會伴隨提示 」 樂器"。 所有标记均为英文。
      支援兩個輸入的方法-（1） 上傳映像，或 （2） 指定影像 URL。
      成功响应将以 JSON 格式返回。 如果要求失敗，回應會包含錯誤程式碼及協助您了解問題出在哪裡的訊息。
    syntax:
      content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            可公開觸達之影像的 URL。
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
references:
  - uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    name: DomainModelResults>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    name: ImageAnalysis>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    name: ImageDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    name: DetectResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    name: AreaOfInterestResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    name: ReadOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    name: TextOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    name: ListModelsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    name: OcrResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    name: TagResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>>'
        fullName: '>>'