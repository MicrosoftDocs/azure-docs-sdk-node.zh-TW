### YamlMime:UniversalReference
ms.openlocfilehash: 74ec0d01d0445b484f58893464ae39f0c433b700
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 12/13/2018
ms.locfileid: "52070163"
items:
- uid: azure-arm-apimanagement.ApiIssue
  name: ApiIssue
  fullName: ApiIssue
  children:
  - azure-arm-apimanagement.ApiIssue.createOrUpdate
  - azure-arm-apimanagement.ApiIssue.createOrUpdate_2
  - azure-arm-apimanagement.ApiIssue.createOrUpdate_1
  - azure-arm-apimanagement.ApiIssue.createOrUpdateWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.deleteMethod
  - azure-arm-apimanagement.ApiIssue.deleteMethod_2
  - azure-arm-apimanagement.ApiIssue.deleteMethod_1
  - azure-arm-apimanagement.ApiIssue.deleteMethodWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.get
  - azure-arm-apimanagement.ApiIssue.get_2
  - azure-arm-apimanagement.ApiIssue.get_1
  - azure-arm-apimanagement.ApiIssue.getEntityTag
  - azure-arm-apimanagement.ApiIssue.getEntityTag_2
  - azure-arm-apimanagement.ApiIssue.getEntityTag_1
  - azure-arm-apimanagement.ApiIssue.getEntityTagWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.getWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.listByService
  - azure-arm-apimanagement.ApiIssue.listByService_2
  - azure-arm-apimanagement.ApiIssue.listByService_1
  - azure-arm-apimanagement.ApiIssue.listByServiceNext
  - azure-arm-apimanagement.ApiIssue.listByServiceNext_2
  - azure-arm-apimanagement.ApiIssue.listByServiceNext_1
  - azure-arm-apimanagement.ApiIssue.listByServiceNextWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.listByServiceWithHttpOperationResponse
  - azure-arm-apimanagement.ApiIssue.update
  - azure-arm-apimanagement.ApiIssue.update_2
  - azure-arm-apimanagement.ApiIssue.update_1
  - azure-arm-apimanagement.ApiIssue.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.createOrUpdate
  name: createOrUpdate(string, string, string, string, IssueContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 為 API 建立新的問題，或更新現有的。
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueContract
      description: >
        建立參數。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.createOrUpdate_2
  name: createOrUpdate(string, string, string, string, IssueContract, Object, ServiceCallback<IssueContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 為 API 建立新的問題，或更新現有的。
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueContract, options: Object, callback: ServiceCallback<IssueContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueContract
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.createOrUpdate_1
  name: createOrUpdate(string, string, string, string, IssueContract, ServiceCallback<IssueContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 為 API 建立新的問題，或更新現有的。
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueContract, callback: ServiceCallback<IssueContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueContract
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse(string, string, string, string, IssueContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 為 API 建立新的問題，或更新現有的。
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueContract
      description: >
        建立參數。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.deleteMethod
  name: deleteMethod(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 從 API 中刪除指定的問題。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: ifMatch
      type:
      - string
      description: >
        問題實體的 ETag。 ETag 應該符合的 GET 要求標頭回應中目前實體狀態，或它應該是 * 無條件的更新。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.deleteMethod_2
  name: deleteMethod(string, string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 從 API 中刪除指定的問題。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, ifMatch: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.deleteMethod_1
  name: deleteMethod(string, string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 從 API 中刪除指定的問題。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 從 API 中刪除指定的問題。
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: ifMatch
      type:
      - string
      description: >
        問題實體的 ETag。 ETag 應該符合的 GET 要求標頭回應中目前實體狀態，或它應該是 * 無條件的更新。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.get
  name: get(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得識別碼所指定 API 的問題的詳細資料。
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.get_2
  name: get(string, string, string, string, Object, ServiceCallback<IssueContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得識別碼所指定 API 的問題的詳細資料。
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options: Object, callback: ServiceCallback<IssueContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.get_1
  name: get(string, string, string, string, ServiceCallback<IssueContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得識別碼所指定 API 的問題的詳細資料。
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, callback: ServiceCallback<IssueContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.getEntityTag
  name: getEntityTag(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得實體狀態 (Etag) 的版本識別碼所指定 API 的問題。
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.getEntityTag_2
  name: getEntityTag(string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得實體狀態 (Etag) 的版本識別碼所指定 API 的問題。
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.getEntityTag_1
  name: getEntityTag(string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得實體狀態 (Etag) 的版本識別碼所指定 API 的問題。
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.getEntityTagWithHttpOperationResponse
  name: getEntityTagWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得實體狀態 (Etag) 的版本識別碼所指定 API 的問題。
  syntax:
    content: 'function getEntityTagWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 取得識別碼所指定 API 的問題的詳細資料。
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByService
  name: listByService(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByService_2
  name: listByService(string, string, string, Object, ServiceCallback<IssueCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, options: Object, callback: ServiceCallback<IssueCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByService_1
  name: listByService(string, string, string, ServiceCallback<IssueCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, apiId: string, callback: ServiceCallback<IssueCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByServiceNext
  name: listByServiceNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        從清單作業前一次成功呼叫 NextLink。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByServiceNext_2
  name: listByServiceNext(string, Object, ServiceCallback<IssueCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options: Object, callback: ServiceCallback<IssueCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByServiceNext_1
  name: listByServiceNext(string, ServiceCallback<IssueCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<IssueCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.IssueCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.IssueCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByServiceNextWithHttpOperationResponse
  name: listByServiceNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByServiceNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        從清單作業前一次成功呼叫 NextLink。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.listByServiceWithHttpOperationResponse
  name: listByServiceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 列出與指定之 API 的所有問題 assosiated。
  syntax:
    content: 'function listByServiceWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.update
  name: update(string, string, string, string, IssueUpdateContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 會更新現有的問題。
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueUpdateContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueUpdateContract
      description: >
        更新參數。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.update_2
  name: update(string, string, string, string, IssueUpdateContract, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 會更新現有的問題。
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueUpdateContract, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueUpdateContract
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.update_1
  name: update(string, string, string, string, IssueUpdateContract, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 會更新現有的問題。
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueUpdateContract, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: apiId
      type:
      - string
      description: ''
    - id: issueId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueUpdateContract
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.ApiIssue.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, string, string, IssueUpdateContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: API 會更新現有的問題。
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, apiId: string, issueId: string, parameters: IssueUpdateContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        資源群組的名稱。
    - id: serviceName
      type:
      - string
      description: >
        API 管理服務的名稱。
    - id: apiId
      type:
      - string
      description: >
        API 識別碼。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: issueId
      type:
      - string
      description: >
        發出的識別項。 必須是在目前的 API 管理服務執行個體中是唯一的。
    - id: parameters
      type:
      - azure-arm-apimanagement.IssueUpdateContract
      description: >
        更新參數。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
references:
- uid: azure-arm-apimanagement.IssueContract
  name: IssueContract
  spec.typeScript:
  - name: IssueContract
    fullName: IssueContract
    uid: azure-arm-apimanagement.IssueContract
- uid: Promise<azure-arm-apimanagement.IssueContract>
  name: IssueContract>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IssueContract
    fullName: IssueContract
    uid: azure-arm-apimanagement.IssueContract
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.IssueContract>
  name: IssueContract>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IssueContract
    fullName: IssueContract
    uid: azure-arm-apimanagement.IssueContract
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
  name: IssueContract>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IssueContract
    fullName: IssueContract
    uid: azure-arm-apimanagement.IssueContract
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-apimanagement.IssueCollection>
  name: IssueCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IssueCollection
    fullName: IssueCollection
    uid: azure-arm-apimanagement.IssueCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.IssueCollection>
  name: IssueCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IssueCollection
    fullName: IssueCollection
    uid: azure-arm-apimanagement.IssueCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
  name: IssueCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IssueCollection
    fullName: IssueCollection
    uid: azure-arm-apimanagement.IssueCollection
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-apimanagement.IssueUpdateContract
  name: IssueUpdateContract
  spec.typeScript:
  - name: IssueUpdateContract
    fullName: IssueUpdateContract
    uid: azure-arm-apimanagement.IssueUpdateContract
