### YamlMime:UniversalReference
ms.openlocfilehash: 59b73c670c05247aed882ccac6fe4b13ea9dec2f
ms.sourcegitcommit: 8f2555cd23e454ff79e27bd3ed0a6f65b08c1c9e
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 10/10/2018
ms.locfileid: "48567076"
items:
- uid: '@azure/event-hubs.Session'
  name: Session
  fullName: Session
  children:
  - '@azure/event-hubs.Session.begin'
  - '@azure/event-hubs.Session.close'
  - '@azure/event-hubs.Session.connection'
  - '@azure/event-hubs.Session.createReceiver'
  - '@azure/event-hubs.Session.createSender'
  - '@azure/event-hubs.Session.isClosed'
  - '@azure/event-hubs.Session.isItselfClosed'
  - '@azure/event-hubs.Session.isOpen'
  - '@azure/event-hubs.Session.outgoing'
  - '@azure/event-hubs.Session.registerConnectionHandler'
  - '@azure/event-hubs.Session.registerHandler'
  - '@azure/event-hubs.Session.remove'
  - '@azure/event-hubs.Session.removeConnectionHandler'
  - '@azure/event-hubs.Session.removeHandler'
  - '@azure/event-hubs.Session.constructor'
  langs:
  - typeScript
  type: class
  summary: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.begin'
  name: begin
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function begin()
    parameters: []
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.close'
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ecb54-101">關閉 amqp 工作階段。</span><span class="sxs-lookup"><span data-stu-id="ecb54-101">Closes the amqp session.</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.connection'
  name: connection
  fullName: connection
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'connection: Connection'
    return:
      type:
      - '@azure/event-hubs.Connection'
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.createReceiver'
  name: createReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ecb54-102">在此工作階段建立 amqp 接收者。</span><span class="sxs-lookup"><span data-stu-id="ecb54-102">Creates an amqp receiver on this session.</span></span>
  syntax:
    content: 'function createReceiver(options?: ReceiverOptions)'
    parameters:
    - id: options
      type:
      - '@azure/event-hubs.ReceiverOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-hubs.Receiver>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.createSender'
  name: createSender
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ecb54-103">在此工作階段建立 amqp 寄件者。</span><span class="sxs-lookup"><span data-stu-id="ecb54-103">Creates an amqp sender on this session.</span></span>
  syntax:
    content: 'function createSender(options?: SenderOptions)'
    parameters:
    - id: options
      type:
      - '@azure/event-hubs.SenderOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-hubs.Sender>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.isClosed'
  name: isClosed
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ecb54-104">判斷是否從對等關閉本機初始化的關閉要求的回應。</span><span class="sxs-lookup"><span data-stu-id="ecb54-104">Determines whether the close from the peer is a response to a locally initiated close request.</span></span>
  syntax:
    content: function isClosed()
    parameters: []
    return:
      type:
      - boolean
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.isItselfClosed'
  name: isItselfClosed
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="ecb54-105">決定是否只是工作階段本身的本機和遠端端點已關閉。</span><span class="sxs-lookup"><span data-stu-id="ecb54-105">Determines whether both local and remote endpoint for just the session itself are closed.</span></span>

    <span data-ttu-id="ecb54-106">在 「 session_close"事件處理常式，如果此方法傳回`false`則表示的本機端仍處於開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="ecb54-106">Within the "session_close" event handler, if this method returns `false` it means that the local end is still open.</span></span> <span data-ttu-id="ecb54-107">它可用來判斷是否在這種情況下在本機起始關閉。</span><span class="sxs-lookup"><span data-stu-id="ecb54-107">It can be useful to determine whether the close was initiated locally under such circumstances.</span></span>
  syntax:
    content: function isItselfClosed()
    parameters: []
    return:
      type:
      - boolean
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.isOpen'
  name: isOpen
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function isOpen()
    parameters: []
    return:
      type:
      - boolean
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.outgoing'
  name: outgoing
  fullName: outgoing
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'outgoing: any'
    return:
      type:
      - any
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.registerConnectionHandler'
  name: registerConnectionHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function registerConnectionHandler(event: ConnectionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - ConnectionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.registerHandler'
  name: registerHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function registerHandler(event: SessionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - SessionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.remove'
  name: remove
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function remove()
    parameters: []
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.removeConnectionHandler'
  name: removeConnectionHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeConnectionHandler(event: ConnectionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - ConnectionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.removeHandler'
  name: removeHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeHandler(event: SessionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - SessionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.Session.constructor'
  name: Session
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new Session(connection: Connection, session: Session)'
    parameters:
    - id: connection
      type:
      - '@azure/event-hubs.Connection'
      description: ''
    - id: session
      type:
      - Session
      description: ''
  package: '@azure/event-hubs'
references:
- uid: '@azure/event-hubs.Connection'
  name: Connection
  spec.typeScript:
  - name: Connection
    fullName: Connection
    uid: '@azure/event-hubs.Connection'
- uid: '@azure/event-hubs.ReceiverOptions'
  name: ReceiverOptions
  spec.typeScript:
  - name: ReceiverOptions
    fullName: ReceiverOptions
    uid: '@azure/event-hubs.ReceiverOptions'
- uid: Promise<@azure/event-hubs.Receiver>
  name: Receiver>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Receiver
    fullName: Receiver
    uid: '@azure/event-hubs.Receiver'
  - name: '>'
    fullName: '>'
- uid: '@azure/event-hubs.SenderOptions'
  name: SenderOptions
  spec.typeScript:
  - name: SenderOptions
    fullName: SenderOptions
    uid: '@azure/event-hubs.SenderOptions'
- uid: Promise<@azure/event-hubs.Sender>
  name: Sender>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Sender
    fullName: Sender
    uid: '@azure/event-hubs.Sender'
  - name: '>'
    fullName: '>'
