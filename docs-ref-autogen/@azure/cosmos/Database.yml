### YamlMime:UniversalReference
ms.openlocfilehash: c83ab766af88665c57989bea2d8246f7f3b79c5b
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 12/13/2018
ms.locfileid: "52062485"
items:
- uid: '@azure/cosmos.Database'
  name: Database
  fullName: Database
  children:
  - '@azure/cosmos.Database.client'
  - '@azure/cosmos.Database.container'
  - '@azure/cosmos.Database.containers'
  - '@azure/cosmos.Database.constructor'
  - '@azure/cosmos.Database.delete'
  - '@azure/cosmos.Database.id'
  - '@azure/cosmos.Database.read'
  - '@azure/cosmos.Database.url'
  - '@azure/cosmos.Database.user'
  - '@azure/cosmos.Database.users'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="b4d1a-101">讀取或刪除現有的資料庫的作業。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-101">Operations for reading or deleting an existing database.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.client'
  name: client
  fullName: client
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'client: CosmosClient'
    return:
      type:
      - '@azure/cosmos.CosmosClient'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.container'
  name: container(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="b4d1a-102">用來讀取、 取代或刪除特定的現有<xref:Database>依識別碼。使用`.containers`建立新的容器，或查詢/讀取所有容器。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-102">Used to read, replace, or delete a specific, existing <xref:Database> by id. Use `.containers` creating new containers, or querying/reading all containers.</span></span>
  syntax:
    content: 'function container(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.containers'
  name: containers
  fullName: containers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="b4d1a-103">用於建立新的容器，或查詢/讀取所有容器。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-103">Used for creating new containers, or querying/reading all containers.</span></span>

    <span data-ttu-id="b4d1a-104">使用`.container(id)`來讀取、 取代或刪除特定的現有<xref:Database>依識別碼。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-104">Use `.container(id)` to read, replace, or delete a specific, existing <xref:Database> by id.</span></span>
  syntax:
    content: 'containers: Containers'
    return:
      type:
      - '@azure/cosmos.Containers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.constructor'
  name: Database(CosmosClient, string, ClientContext)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="b4d1a-105">傳回新<xref:Database>執行個體。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-105">Returns a new <xref:Database> instance.</span></span>

    <span data-ttu-id="b4d1a-106">注意： 目的是要取得此物件從<xref:CosmosClient>透過`client.databsae(id)`，不來實例化它自己。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-106">Note: the intention is to get this object from <xref:CosmosClient> via `client.databsae(id)`, not to instaniate it yourself.</span></span>
  syntax:
    content: 'new Database(client: CosmosClient, id: string, clientContext: ClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
    - id: id
      type:
      - string
      description: ''
    - id: clientContext
      type:
      - ClientContext
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.delete'
  name: delete(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b4d1a-107">刪除給定的資料庫。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-107">Delete the given Database.</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.read'
  name: read(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b4d1a-108">讀取指定的資料庫的定義。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-108">Read the definition of the given Database.</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="b4d1a-109">傳回資源的參考 URL。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-109">Returns a reference URL to the resource.</span></span> <span data-ttu-id="b4d1a-110">用於連結中的權限。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-110">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.user'
  name: user(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="b4d1a-111">用來讀取、 取代或刪除特定的現有<xref:User>依識別碼。使用`.users`建立新的使用者，或查詢/讀取所有使用者。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-111">Used to read, replace, or delete a specific, existing <xref:User> by id. Use `.users` for creating new users, or querying/reading all users.</span></span>
  syntax:
    content: 'function user(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.User'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.users'
  name: users
  fullName: users
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="b4d1a-112">用來建立新的使用者，或查詢/讀取所有使用者。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-112">Used for creating new users, or querying/reading all users.</span></span>

    <span data-ttu-id="b4d1a-113">使用`.user(id)`來讀取、 取代或刪除特定的現有<xref:User>依識別碼。</span><span class="sxs-lookup"><span data-stu-id="b4d1a-113">Use `.user(id)` to read, replace, or delete a specific, existing <xref:User> by id.</span></span>
  syntax:
    content: 'users: Users'
    return:
      type:
      - '@azure/cosmos.Users'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.Containers'
  name: Containers
  spec.typeScript:
  - name: Containers
    fullName: Containers
    uid: '@azure/cosmos.Containers'
- uid: '@azure/cosmos.Users'
  name: Users
  spec.typeScript:
  - name: Users
    fullName: Users
    uid: '@azure/cosmos.Users'
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  name: DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.User'
  name: User
  spec.typeScript:
  - name: User
    fullName: User
    uid: '@azure/cosmos.User'
