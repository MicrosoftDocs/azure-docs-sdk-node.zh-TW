### YamlMime:UniversalReference
ms.openlocfilehash: f65057c5254ef5765a4d0c94c31ba22cce8ecae5
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 08/22/2018
ms.locfileid: "41695697"
items:
- uid: '@azure/cosmos.Database'
  name: Database
  fullName: Database
  children:
  - '@azure/cosmos.Database.client'
  - '@azure/cosmos.Database.container'
  - '@azure/cosmos.Database.containers'
  - '@azure/cosmos.Database.constructor'
  - '@azure/cosmos.Database.delete'
  - '@azure/cosmos.Database.id'
  - '@azure/cosmos.Database.read'
  - '@azure/cosmos.Database.url'
  - '@azure/cosmos.Database.user'
  - '@azure/cosmos.Database.users'
  langs:
  - typeScript
  type: class
  summary: 讀取或刪除現有的資料庫的作業。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.client'
  name: client
  fullName: client
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'client: CosmosClient'
    return:
      type:
      - '@azure/cosmos.CosmosClient'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.container'
  name: container
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    用來讀取、 取代或刪除特定的現有<xref:Database>依識別碼。使用`.containers`建立新的容器，或查詢/讀取所有容器。
  syntax:
    content: 'function container(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.containers'
  name: containers
  fullName: containers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    用於建立新的容器，或查詢/讀取所有容器。

    使用`.container(id)`來讀取、 取代或刪除特定的現有<xref:Database>依識別碼。
  syntax:
    content: 'containers: Containers'
    return:
      type:
      - '@azure/cosmos.Containers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.constructor'
  name: Database
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >
    傳回新<xref:Database>執行個體。

    注意： 目的是要取得此物件從<xref:CosmosClient>透過`client.databsae(id)`，不來實例化它自己。
  syntax:
    content: 'new Database(client: CosmosClient, id: string, clientContext: ClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
    - id: id
      type:
      - string
      description: ''
    - id: clientContext
      type:
      - ClientContext
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: 刪除給定的資料庫。
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: 讀取指定的資料庫的定義。
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: 傳回資源的參考 URL。 用於連結中的權限。
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.user'
  name: user
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    用來讀取、 取代或刪除特定的現有<xref:User>依識別碼。使用`.users`建立新的使用者，或查詢/讀取所有使用者。
  syntax:
    content: 'function user(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.User'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.users'
  name: users
  fullName: users
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    用來建立新的使用者，或查詢/讀取所有使用者。

    使用`.user(id)`來讀取、 取代或刪除特定的現有<xref:User>依識別碼。
  syntax:
    content: 'users: Users'
    return:
      type:
      - '@azure/cosmos.Users'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.Containers'
  spec.typeScript:
  - name: Containers
    fullName: Containers
    uid: '@azure/cosmos.Containers'
- uid: '@azure/cosmos.Users'
  spec.typeScript:
  - name: Users
    fullName: Users
    uid: '@azure/cosmos.Users'
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.User'
  spec.typeScript:
  - name: User
    fullName: User
    uid: '@azure/cosmos.User'
