### YamlMime:UniversalReference
ms.openlocfilehash: e03cf2dd3e5568e032b681af3e7c2ed68f5694e7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 08/12/2018
ms.locfileid: "40062134"
items:
- uid: '@azure/cosmos.Items'
  name: Items
  fullName: Items
  children:
  - '@azure/cosmos.Items.container'
  - '@azure/cosmos.Items.create'
  - '@azure/cosmos.Items.create_1'
  - '@azure/cosmos.Items.query'
  - '@azure/cosmos.Items.query_1'
  - '@azure/cosmos.Items.readAll'
  - '@azure/cosmos.Items.readAll_1'
  - '@azure/cosmos.Items.upsert'
  - '@azure/cosmos.Items.upsert_1'
  langs:
  - typeScript
  type: class
  summary: 建立新的項目，以及讀取/查詢的所有項目作業
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.create'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    建立項目。

    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性...
  syntax:
    content: 'function create(body: any, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - any
      description: 表示項目的主體。 可以包含任意數目的使用者定義的屬性。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.create_1'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    建立項目。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。


    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function create<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 表示項目的主體。 可以包含任意數目的使用者定義的屬性。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.query'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: 查詢的所有項目。
  syntax:
    content: 'function query(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: 查詢作業的組態。 請參閱<xref:SqlQuerySpec>如需如何設定查詢的詳細資訊。
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.ItemDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.query_1'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: 查詢的所有項目。
  syntax:
    content: 'function query<T>(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: 查詢作業的組態。 請參閱<xref:SqlQuerySpec>如需如何設定查詢的詳細資訊。
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readAll'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    讀取所有的項目。

    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.ItemDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.readAll_1'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    讀取所有的項目。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。


    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function readAll<T>(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: 用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.upsert'
  name: upsert
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    更新插入項目。

    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function upsert(body: any, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - any
      description: 表示項目的主體。 可以包含任意數目的使用者定義的屬性。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Items.upsert_1'
  name: upsert
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    更新插入項目。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。


    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function upsert<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 表示項目的主體。 可以包含任意數目的使用者定義的屬性。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        用來修改要求 （例如，指定資料分割索引鍵）。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: string | @azure/cosmos.SqlQuerySpec
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.ItemDefinition>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.QueryIterator<T>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <T>
    fullName: <T>
