### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ConflictResponse'
    name: ConflictResponse
    fullName: ConflictResponse
    children:
      - '@azure/cosmos.ConflictResponse.body'
      - '@azure/cosmos.ConflictResponse.conflict'
      - '@azure/cosmos.ConflictResponse.headers'
      - '@azure/cosmos.ConflictResponse.ref'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/cosmos.CosmosResponse<@azure/cosmos.ConflictDefinition & @azure/cosmos.Resource, @azure/cosmos.Conflict>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConflictResponse.body'
    name: body
    fullName: body
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'body?: ConflictDefinition & Resource'
      return:
        type:
          - '@azure/cosmos.ConflictDefinition & @azure/cosmos.Resource'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConflictResponse.conflict'
    name: conflict
    fullName: conflict
    children: []
    langs:
      - typeScript
    type: property
    summary: '參考<xref:Conflict>對應至傳回<xref:ConflictDefinition>。'
    syntax:
      content: 'conflict: Conflict'
      return:
        type:
          - '@azure/cosmos.Conflict'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConflictResponse.headers'
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'headers?: IHeaders'
      return:
        type:
          - '@azure/cosmos.IHeaders'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConflictResponse.ref'
    name: ref
    fullName: ref
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ref?: Conflict'
      return:
        type:
          - '@azure/cosmos.Conflict'
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.CosmosResponse<@azure/cosmos.ConflictDefinition & @azure/cosmos.Resource, @azure/cosmos.Conflict>'
    name: Conflict>
    spec.typeScript:
      - name: CosmosResponse
        fullName: CosmosResponse
        uid: '@azure/cosmos.CosmosResponse'
      - name: <
        fullName: <
      - name: ConflictDefinition
        fullName: ConflictDefinition
        uid: '@azure/cosmos.ConflictDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: ', '
        fullName: ', '
      - name: Conflict
        fullName: Conflict
        uid: '@azure/cosmos.Conflict'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.ConflictDefinition & @azure/cosmos.Resource'
    name: Resource
    spec.typeScript:
      - name: ConflictDefinition
        fullName: ConflictDefinition
        uid: '@azure/cosmos.ConflictDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
  - uid: '@azure/cosmos.Conflict'
    name: Conflict
    spec.typeScript:
      - name: Conflict
        fullName: Conflict
        uid: '@azure/cosmos.Conflict'
  - uid: '@azure/cosmos.IHeaders'
    name: IHeaders
    spec.typeScript:
      - name: IHeaders
        fullName: IHeaders
        uid: '@azure/cosmos.IHeaders'