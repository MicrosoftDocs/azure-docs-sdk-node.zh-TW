### YamlMime:UniversalReference
ms.openlocfilehash: 8d085c8c928b40486992ef118d6155a39853015e
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 08/12/2018
ms.locfileid: "40052289"
items:
- uid: '@azure/cosmos.Container'
  name: Container
  fullName: Container
  children:
  - '@azure/cosmos.Container.conflict'
  - '@azure/cosmos.Container.database'
  - '@azure/cosmos.Container.delete'
  - '@azure/cosmos.Container.id'
  - '@azure/cosmos.Container.item'
  - '@azure/cosmos.Container.items'
  - '@azure/cosmos.Container.read'
  - '@azure/cosmos.Container.replace'
  - '@azure/cosmos.Container.storedProcedure'
  - '@azure/cosmos.Container.storedProcedures'
  - '@azure/cosmos.Container.trigger'
  - '@azure/cosmos.Container.triggers'
  - '@azure/cosmos.Container.url'
  - '@azure/cosmos.Container.userDefinedFunction'
  - '@azure/cosmos.Container.userDefinedFunctions'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="09c22-101">讀取、 取代或依識別碼刪除特定的現有容器的作業。</span><span class="sxs-lookup"><span data-stu-id="09c22-101">Operations for reading, replacing, or deleting a specific, existing container by id.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.conflict'
  name: conflict
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-102">用來讀取、 取代或刪除特定的現有<xref:Conflict>依識別碼。使用`.conflicts`來建立新的衝突，或查詢/讀取所有的衝突。</span><span class="sxs-lookup"><span data-stu-id="09c22-102">Used to read, replace, or delete a specific, existing <xref:Conflict> by id. Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.</span></span>
  syntax:
    content: 'function conflict(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="09c22-103">識別碼<xref:Conflict>。</span><span class="sxs-lookup"><span data-stu-id="09c22-103">The id of the <xref:Conflict>.</span></span>
    return:
      type:
      - '@azure/cosmos.Conflict'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.database'
  name: database
  fullName: database
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'database: Database'
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-104">刪除容器</span><span class="sxs-lookup"><span data-stu-id="09c22-104">Delete the container</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.item'
  name: item
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="09c22-105">用來讀取、 取代或刪除特定的現有<xref:Item>依識別碼。使用`.items`建立新的項目，或查詢/讀取所有項目。</span><span class="sxs-lookup"><span data-stu-id="09c22-105">Used to read, replace, or delete a specific, existing <xref:Item> by id. Use `.items` for creating new items, or querying/reading all items.</span></span>
  syntax:
    content: 'function item(id: string, partitionKey?: string)'
    parameters:
    - id: id
      type:
      - string
      description: <span data-ttu-id="09c22-106">識別碼<xref:Item>。</span><span class="sxs-lookup"><span data-stu-id="09c22-106">The id of the <xref:Item>.</span></span>
    - id: partitionKey
      type:
      - string
      description: <span data-ttu-id="09c22-107">資料分割索引鍵<xref:Item>。</span><span class="sxs-lookup"><span data-stu-id="09c22-107">The partition key of the <xref:Item>.</span></span> <span data-ttu-id="09c22-108">（所需資料分割的容器）。</span><span class="sxs-lookup"><span data-stu-id="09c22-108">(Required for partitioned containers).</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.Item'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.items'
  name: items
  fullName: items
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="09c22-109">建立新的項目，以及讀取/查詢的讀取、 取代或刪除現有的項目，所有項目作業使用`.item(id)`。</span><span class="sxs-lookup"><span data-stu-id="09c22-109">Operations for creating new items, and reading/querying all items For reading, replacing, or deleting an existing item, use `.item(id)`.</span></span>
  syntax:
    content: 'items: Items'
    return:
      type:
      - '@azure/cosmos.Items'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-110">讀取容器的定義</span><span class="sxs-lookup"><span data-stu-id="09c22-110">Read the container's definition</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-111">取代容器的定義</span><span class="sxs-lookup"><span data-stu-id="09c22-111">Replace the container's definition</span></span>
  syntax:
    content: 'function replace(body: ContainerDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ContainerDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedure'
  name: storedProcedure
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-112">用來讀取、 取代或刪除特定的現有<xref:StoredProcedure>依識別碼。使用`.storedProcedures`來建立新的預存程序，或查詢/讀取所有預存程序。</span><span class="sxs-lookup"><span data-stu-id="09c22-112">Used to read, replace, or delete a specific, existing <xref:StoredProcedure> by id. Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.</span></span>
  syntax:
    content: 'function storedProcedure(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="09c22-113">識別碼<xref:StoredProcedure>。</span><span class="sxs-lookup"><span data-stu-id="09c22-113">The id of the <xref:StoredProcedure>.</span></span>
    return:
      type:
      - '@azure/cosmos.StoredProcedure'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedures'
  name: storedProcedures
  fullName: storedProcedures
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="09c22-114">建立新的預存程序，並讀取/查詢所有預存程序的作業。</span><span class="sxs-lookup"><span data-stu-id="09c22-114">Operations for creating new stored procedures, and reading/querying all stored procedures.</span></span>

    <span data-ttu-id="09c22-115">讀取、 取代或刪除現有的預存程序，使用`.storedProcedure(id)`。</span><span class="sxs-lookup"><span data-stu-id="09c22-115">For reading, replacing, or deleting an existing stored procedure, use `.storedProcedure(id)`.</span></span>
  syntax:
    content: 'storedProcedures: StoredProcedures'
    return:
      type:
      - '@azure/cosmos.StoredProcedures'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.trigger'
  name: trigger
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-116">用來讀取、 取代或刪除特定的現有<xref:Trigger>依識別碼。使用`.triggers`建立新的觸發程序，或查詢/讀取所有觸發程序。</span><span class="sxs-lookup"><span data-stu-id="09c22-116">Used to read, replace, or delete a specific, existing <xref:Trigger> by id. Use `.triggers` for creating new triggers, or querying/reading all triggers.</span></span>
  syntax:
    content: 'function trigger(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="09c22-117">識別碼<xref:Trigger>。</span><span class="sxs-lookup"><span data-stu-id="09c22-117">The id of the <xref:Trigger>.</span></span>
    return:
      type:
      - '@azure/cosmos.Trigger'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.triggers'
  name: triggers
  fullName: triggers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="09c22-118">建立新的觸發程序，並讀取/查詢所有觸發程序的作業。</span><span class="sxs-lookup"><span data-stu-id="09c22-118">Operations for creating new triggers, and reading/querying all triggers.</span></span>

    <span data-ttu-id="09c22-119">讀取、 取代或刪除現有的觸發程序，使用`.trigger(id)`。</span><span class="sxs-lookup"><span data-stu-id="09c22-119">For reading, replacing, or deleting an existing trigger, use `.trigger(id)`.</span></span>
  syntax:
    content: 'triggers: Triggers'
    return:
      type:
      - '@azure/cosmos.Triggers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="09c22-120">傳回資源的參考 URL。</span><span class="sxs-lookup"><span data-stu-id="09c22-120">Returns a reference URL to the resource.</span></span> <span data-ttu-id="09c22-121">用於連結中的權限。</span><span class="sxs-lookup"><span data-stu-id="09c22-121">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunction'
  name: userDefinedFunction
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="09c22-122">用來讀取、 取代或刪除特定的現有<xref:UserDefinedFunction>依識別碼。使用`.userDefinedFunctions`建立新的使用者定義函式，或查詢/讀取所有使用者定義函式。</span><span class="sxs-lookup"><span data-stu-id="09c22-122">Used to read, replace, or delete a specific, existing <xref:UserDefinedFunction> by id. Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.</span></span>
  syntax:
    content: 'function userDefinedFunction(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="09c22-123">識別碼<xref:UserDefinedFunction>。</span><span class="sxs-lookup"><span data-stu-id="09c22-123">The id of the <xref:UserDefinedFunction>.</span></span>
    return:
      type:
      - '@azure/cosmos.UserDefinedFunction'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunctions'
  name: userDefinedFunctions
  fullName: userDefinedFunctions
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="09c22-124">作業建立新的使用者定義函式，並讀取/查詢所有使用者定義函數。</span><span class="sxs-lookup"><span data-stu-id="09c22-124">Operations for creating new user defined functions, and reading/querying all user defined functions.</span></span>

    <span data-ttu-id="09c22-125">讀取、 取代或刪除現有的使用者定義函式，使用`.userDefinedFunction(id)`。</span><span class="sxs-lookup"><span data-stu-id="09c22-125">For reading, replacing, or deleting an existing user defined function, use `.userDefinedFunction(id)`.</span></span>
  syntax:
    content: 'userDefinedFunctions: UserDefinedFunctions'
    return:
      type:
      - '@azure/cosmos.UserDefinedFunctions'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.Items'
  spec.typeScript:
  - name: Items
    fullName: Items
    uid: '@azure/cosmos.Items'
- uid: '@azure/cosmos.StoredProcedures'
  spec.typeScript:
  - name: StoredProcedures
    fullName: StoredProcedures
    uid: '@azure/cosmos.StoredProcedures'
- uid: '@azure/cosmos.Triggers'
  spec.typeScript:
  - name: Triggers
    fullName: Triggers
    uid: '@azure/cosmos.Triggers'
- uid: '@azure/cosmos.UserDefinedFunctions'
  spec.typeScript:
  - name: UserDefinedFunctions
    fullName: UserDefinedFunctions
    uid: '@azure/cosmos.UserDefinedFunctions'
- uid: '@azure/cosmos.Conflict'
  spec.typeScript:
  - name: Conflict
    fullName: Conflict
    uid: '@azure/cosmos.Conflict'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ContainerResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContainerResponse
    fullName: ContainerResponse
    uid: '@azure/cosmos.ContainerResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.Item'
  spec.typeScript:
  - name: Item
    fullName: Item
    uid: '@azure/cosmos.Item'
- uid: '@azure/cosmos.ContainerDefinition'
  spec.typeScript:
  - name: ContainerDefinition
    fullName: ContainerDefinition
    uid: '@azure/cosmos.ContainerDefinition'
- uid: '@azure/cosmos.StoredProcedure'
  spec.typeScript:
  - name: StoredProcedure
    fullName: StoredProcedure
    uid: '@azure/cosmos.StoredProcedure'
- uid: '@azure/cosmos.Trigger'
  spec.typeScript:
  - name: Trigger
    fullName: Trigger
    uid: '@azure/cosmos.Trigger'
- uid: '@azure/cosmos.UserDefinedFunction'
  spec.typeScript:
  - name: UserDefinedFunction
    fullName: UserDefinedFunction
    uid: '@azure/cosmos.UserDefinedFunction'
