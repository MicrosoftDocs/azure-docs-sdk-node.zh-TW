### YamlMime:UniversalReference
ms.openlocfilehash: 22c72faefd43f0429a42377817a2b14111e1a1f3
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 12/13/2018
ms.locfileid: "52054063"
items:
- uid: '@azure/cosmos.Item'
  name: Item
  fullName: Item
  children:
  - '@azure/cosmos.Item.container'
  - '@azure/cosmos.Item.delete'
  - '@azure/cosmos.Item.delete_1'
  - '@azure/cosmos.Item.id'
  - '@azure/cosmos.Item.primaryKey'
  - '@azure/cosmos.Item.read'
  - '@azure/cosmos.Item.read_1'
  - '@azure/cosmos.Item.replace'
  - '@azure/cosmos.Item.replace_1'
  - '@azure/cosmos.Item.url'
  langs:
  - typeScript
  type: class
  summary: 用來執行特定的項目上的作業。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete'
  name: delete(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 刪除項目。
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete_1'
  name: delete(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    刪除項目。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。
  syntax:
    content: 'function delete<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.primaryKey'
  name: primaryKey
  fullName: primaryKey
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'primaryKey: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read'
  name: read(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    讀取項目的定義。

    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。

        請注意，是否您提供資料分割索引鍵上的選項物件時，它將會覆寫的主索引鍵上`this.primaryKey`。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read_1'
  name: read(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    讀取項目的定義。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。

    如果類型 T，則是類別，它將不會通過`typeof`比較，因為它不會有相符項目原型。

    建議只使用介面。


    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function read<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。

        請注意，是否您提供資料分割索引鍵上的選項物件時，它將會覆寫的主索引鍵上`this.primaryKey`。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace'
  name: replace(ItemDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    取代項目的定義。

    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function replace(body: ItemDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ItemDefinition'
      description: 要取代現有的定義<xref:Item>的與的定義。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace_1'
  name: replace(T, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    取代項目的定義。

    任何提供型別，T，不一定會強制使用 SDK。

    您可能會收到較多或較少屬性，則由您的邏輯會強制執行。


    沒有集結構描述的 JSON 項目。 它們可能包含任意數目的自訂屬性。
  syntax:
    content: 'function replace<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: 要取代現有的定義<xref:Item>的與的定義。
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        其他要求，例如資料分割索引鍵的選項。
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: 傳回資源的參考 URL。 用於連結中的權限。
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  name: ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  name: ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: '@azure/cosmos.ItemDefinition'
  name: ItemDefinition
  spec.typeScript:
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
