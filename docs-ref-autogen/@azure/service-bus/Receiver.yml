### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    fullName: Receiver
    children:
      - '@azure/service-bus.Receiver.close'
      - '@azure/service-bus.Receiver.getMessageIterator'
      - '@azure/service-bus.Receiver.isClosed'
      - '@azure/service-bus.Receiver.isReceivingMessages'
      - '@azure/service-bus.Receiver.receiveDeferredMessage'
      - '@azure/service-bus.Receiver.receiveDeferredMessages'
      - '@azure/service-bus.Receiver.receiveMessages'
      - '@azure/service-bus.Receiver.receiveMode'
      - '@azure/service-bus.Receiver.registerMessageHandler'
      - '@azure/service-bus.Receiver.renewMessageLock'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="e35df-101">接收器類別可用來接收訊息，在批次，或藉由註冊處理常式。</span><span class="sxs-lookup"><span data-stu-id="e35df-101">The Receiver class can be used to receive messages in a batch or by registering handlers.</span></span>
      <span data-ttu-id="e35df-102">使用`createReceiver`QueueClient 或 SubscriptionClient 來具現化，接收端上的函式。</span><span class="sxs-lookup"><span data-stu-id="e35df-102">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a Receiver.</span></span>
      <span data-ttu-id="e35df-103">接收器類別是在基礎 AMQP 接收者連結的抽象概念。</span><span class="sxs-lookup"><span data-stu-id="e35df-103">The Receiver class is an abstraction over the underlying AMQP receiver link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e35df-104">關閉基礎 AMQP 接收者連結。</span><span class="sxs-lookup"><span data-stu-id="e35df-104">Closes the underlying AMQP receiver link.</span></span>
      <span data-ttu-id="e35df-105">一旦關閉，接收者不能用於任何進一步的作業。</span><span class="sxs-lookup"><span data-stu-id="e35df-105">Once closed, the receiver cannot be used for any further operations.</span></span>
      <span data-ttu-id="e35df-106">使用`createReceiver`QueueClient 或 SubscriptionClient 來具現化新的接收器上的函式</span><span class="sxs-lookup"><span data-stu-id="e35df-106">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a new Receiver</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.getMessageIterator'
    name: getMessageIterator()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="e35df-107">取得非同步迭代器，透過訊息接收者。</span><span class="sxs-lookup"><span data-stu-id="e35df-107">Gets an async iterator over messages from the receiver.</span></span>
      <span data-ttu-id="e35df-108">如果有另一個接收作業在相同的接收端上進行，則會擲回錯誤。</span><span class="sxs-lookup"><span data-stu-id="e35df-108">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="e35df-109">如果您不確定是否有為另一個接收作業執行、 檢查`isReceivingMessages`接收器上的屬性。</span><span class="sxs-lookup"><span data-stu-id="e35df-109">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>

      <span data-ttu-id="e35df-110">如果迭代器不能超過一分鐘，擷取中的新訊息`undefined`會傳回。</span><span class="sxs-lookup"><span data-stu-id="e35df-110">If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned.</span></span>
    syntax:
      content: function getMessageIterator()
      parameters: []
      return:
        type:
          - AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e35df-111">傳回`true`如果接收者已關閉。</span><span class="sxs-lookup"><span data-stu-id="e35df-111">Returns `true` if the receiver is closed.</span></span> <span data-ttu-id="e35df-112">這種情形是因為接收者本身已關閉，或用戶端，建立已關閉。</span><span class="sxs-lookup"><span data-stu-id="e35df-112">This can happen either because the receiver itself has been closed or the client that created it has been closed.</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isReceivingMessages'
    name: isReceivingMessages()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e35df-113">指出是否將接收器目前接收訊息或不。</span><span class="sxs-lookup"><span data-stu-id="e35df-113">Indicates whether the receiver is currently receiving messages or not.</span></span>
      <span data-ttu-id="e35df-114">當它會傳回 true，新`registerMessageHandler()`或`receiveMessages()`無法進行呼叫。</span><span class="sxs-lookup"><span data-stu-id="e35df-114">When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.</span></span>
    syntax:
      content: function isReceivingMessages()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessage'
    name: receiveDeferredMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e35df-115">傳回可解析成所識別的延後訊息的 promise 指定`sequenceNumber`。</span><span class="sxs-lookup"><span data-stu-id="e35df-115">Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.</span></span>
    syntax:
      content: 'function receiveDeferredMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="e35df-116">要接收訊息的序號。</span><span class="sxs-lookup"><span data-stu-id="e35df-116">The sequence number of the message that needs to be received.</span></span>
      return:
        type:
          - Promise<@azure/service-bus.ServiceBusMessage | undefined>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessages'
    name: 'receiveDeferredMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e35df-117">傳回可解析成陣列識別的延後訊息的 promise 藉由指定`sequenceNumbers`。</span><span class="sxs-lookup"><span data-stu-id="e35df-117">Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.</span></span>
    syntax:
      content: 'function receiveDeferredMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="e35df-118">要接收訊息的序號的陣列。</span><span class="sxs-lookup"><span data-stu-id="e35df-118">An array of sequence numbers for the messages that need to be received.</span></span>
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMessages'
    name: 'receiveMessages(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="e35df-119">傳回可解析的訊息陣列的 promise 根據指定的計數及逾時透過 AMQP 接收者從佇列/訂用帳戶的連結。</span><span class="sxs-lookup"><span data-stu-id="e35df-119">Returns a promise that resolves to an array of messages based on given count and timeout over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="e35df-120">如果有另一個接收作業在相同的接收端上進行，則會擲回錯誤。</span><span class="sxs-lookup"><span data-stu-id="e35df-120">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="e35df-121">如果您不確定是否有為另一個接收作業執行、 檢查`isReceivingMessages`接收器上的屬性。</span><span class="sxs-lookup"><span data-stu-id="e35df-121">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function receiveMessages(maxMessageCount: number, idleTimeoutInSeconds?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - number
          description: <span data-ttu-id="e35df-122">從佇列/訂用帳戶接收的訊息數目上限。</span><span class="sxs-lookup"><span data-stu-id="e35df-122">The maximum number of messages to receive from Queue/Subscription.</span></span>
        - id: idleTimeoutInSeconds
          type:
            - undefined | number
          description: |-
            <span data-ttu-id="e35df-123">最大等待時間 （秒），接收者應該等候接收第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="e35df-123">The maximum wait time in seconds for which the Receiver should wait to receive the first message.</span></span> <span data-ttu-id="e35df-124">如果此時不收到任何訊息時，傳回的承諾取得解析為空陣列。</span><span class="sxs-lookup"><span data-stu-id="e35df-124">If no message is received by this time, the returned promise gets resolved to an empty array.</span></span>
            - <span data-ttu-id="e35df-125">**預設值**:`60`秒。</span><span class="sxs-lookup"><span data-stu-id="e35df-125">**Default**: `60` seconds.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e35df-126">表示此收件者的 receiveMode。</span><span class="sxs-lookup"><span data-stu-id="e35df-126">Denotes receiveMode of this receiver.</span></span>
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type:
          - '@azure/service-bus.ReceiveMode'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.registerMessageHandler'
    name: 'registerMessageHandler(OnMessage, OnError, MessageHandlerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="e35df-127">註冊處理常式來處理 AMQP 接收者連結上自佇列/訂閱訊息的內送資料流。</span><span class="sxs-lookup"><span data-stu-id="e35df-127">Registers handlers to deal with the incoming stream of messages over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="e35df-128">若要停止接收訊息，請呼叫`close()`接收器上。</span><span class="sxs-lookup"><span data-stu-id="e35df-128">To stop receiving messages, call `close()` on the Receiver.</span></span>
      <span data-ttu-id="e35df-129">如果有另一個接收作業在相同的接收端上進行，則會擲回錯誤。</span><span class="sxs-lookup"><span data-stu-id="e35df-129">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="e35df-130">如果您不確定是否有為另一個接收作業執行、 檢查`isReceivingMessages`接收器上的屬性。</span><span class="sxs-lookup"><span data-stu-id="e35df-130">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function registerMessageHandler(onMessage: OnMessage, onError: OnError, options?: MessageHandlerOptions)'
      parameters:
        - id: onMessage
          type:
            - '@azure/service-bus.OnMessage'
          description: <span data-ttu-id="e35df-131">處理每則傳入訊息的處理常式。</span><span class="sxs-lookup"><span data-stu-id="e35df-131">Handler for processing each incoming message.</span></span>
        - id: onError
          type:
            - '@azure/service-bus.OnError'
          description: <span data-ttu-id="e35df-132">在接收或處理訊息時，就會發生任何錯誤處理常式。</span><span class="sxs-lookup"><span data-stu-id="e35df-132">Handler for any error that occurs while receiving or processing messages.</span></span>
        - id: options
          type:
            - '@azure/service-bus.MessageHandlerOptions'
          description: |
            <span data-ttu-id="e35df-133">如果應該自動完成訊息，及/或有其鎖定會自動續訂的控制選項。</span><span class="sxs-lookup"><span data-stu-id="e35df-133">Options to control if messages should be automatically completed, and/or have their locks automatically renewed.</span></span> <span data-ttu-id="e35df-134">您可以控制應同時處理的訊息數目上限。</span><span class="sxs-lookup"><span data-stu-id="e35df-134">You can control the maximum number of messages that should be concurrently processed.</span></span> <span data-ttu-id="e35df-135">您也可以提供以秒為單位來表示的時間等待新訊息，再關閉接收者的逾時。</span><span class="sxs-lookup"><span data-stu-id="e35df-135">You can also provide a timeout in seconds to denote the amount of time to wait for a new message before closing the receiver.</span></span>
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.renewMessageLock'
    name: renewMessageLock(string | ServiceBusMessage)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e35df-136">佇列/訂用帳戶建立期間會更新訊息鎖定期間所指定。</span><span class="sxs-lookup"><span data-stu-id="e35df-136">Renews the lock on the message for the duration as specified during the Queue/Subscription creation.</span></span>
      - <span data-ttu-id="e35df-137">檢查`lockedUntilUtc`上鎖定的到期的時間的訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="e35df-137">Check the `lockedUntilUtc` property on the message for the time when the lock expires.</span></span>
      - <span data-ttu-id="e35df-138">如果訊息尚未採取實際 (使用`complete()`，`defer()`或`deadletter()`，然後才能在其鎖定到期，則傳回佇列/訂用帳戶中下一個訊息陸地接收作業。</span><span class="sxs-lookup"><span data-stu-id="e35df-138">If a message is not settled (using either `complete()`, `defer()` or `deadletter()`, before its lock expires, then the message lands back in the Queue/Subscription for the next receive operation.</span></span>
    syntax:
      content: 'function renewMessageLock(lockTokenOrMessage: string | ServiceBusMessage)'
      parameters:
        - id: lockTokenOrMessage
          type:
            - string | @azure/service-bus.ServiceBusMessage
          description: <span data-ttu-id="e35df-139">`lockToken`訊息或訊息本身的屬性。</span><span class="sxs-lookup"><span data-stu-id="e35df-139">The `lockToken` property of the message or the message itself.</span></span>
      return:
        type:
          - Promise<Date>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    name: ServiceBusMessage>
    spec.typeScript:
      - name: AsyncIterableIterator<
        fullName: AsyncIterableIterator<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.ServiceBusMessage | undefined>
    name: ServiceBusMessage | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    name: 'ServiceBusMessage[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/service-bus.OnMessage'
    name: OnMessage
    spec.typeScript:
      - name: OnMessage
        fullName: OnMessage
        uid: '@azure/service-bus.OnMessage'
  - uid: '@azure/service-bus.OnError'
    name: OnError
    spec.typeScript:
      - name: OnError
        fullName: OnError
        uid: '@azure/service-bus.OnError'
  - uid: '@azure/service-bus.MessageHandlerOptions'
    name: MessageHandlerOptions
    spec.typeScript:
      - name: MessageHandlerOptions
        fullName: MessageHandlerOptions
        uid: '@azure/service-bus.MessageHandlerOptions'
  - uid: string | @azure/service-bus.ServiceBusMessage
    name: ServiceBusMessage
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'