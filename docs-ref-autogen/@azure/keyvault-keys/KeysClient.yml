### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.KeysClient'
    name: KeysClient
    fullName: KeysClient
    children:
      - '@azure/keyvault-keys.KeysClient.backupKey'
      - '@azure/keyvault-keys.KeysClient.createEcKey'
      - '@azure/keyvault-keys.KeysClient.createKey'
      - '@azure/keyvault-keys.KeysClient.createRsaKey'
      - '@azure/keyvault-keys.KeysClient.deleteKey'
      - '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
      - '@azure/keyvault-keys.KeysClient.getDeletedKey'
      - '@azure/keyvault-keys.KeysClient.getKey'
      - '@azure/keyvault-keys.KeysClient.importKey'
      - '@azure/keyvault-keys.KeysClient.constructor'
      - '@azure/keyvault-keys.KeysClient.listDeletedKeys'
      - '@azure/keyvault-keys.KeysClient.listKeys'
      - '@azure/keyvault-keys.KeysClient.listKeyVersions'
      - '@azure/keyvault-keys.KeysClient.pipeline'
      - '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
      - '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
      - '@azure/keyvault-keys.KeysClient.restoreKey'
      - '@azure/keyvault-keys.KeysClient.updateKey'
      - '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="e6f7d-101">與金鑰保存庫金鑰功能互動的用戶端</span><span class="sxs-lookup"><span data-stu-id="e6f7d-101">The client to interact with the KeyVault keys functionality</span></span>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.backupKey'
    name: 'backupKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-102">指定的索引鍵的備份會下載到用戶端的要求。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-102">Requests that a backup of the specified key be downloaded to the client.</span></span> <span data-ttu-id="e6f7d-103">將下載的索引鍵的所有版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-103">All versions of the key will be downloaded.</span></span> <span data-ttu-id="e6f7d-104">這項作業需要金鑰/備份權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-104">This operation requires the keys/backup permission.</span></span>
      <span data-ttu-id="e6f7d-105">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-105">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      ```
    syntax:
      content: 'function backupKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-106">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-106">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array | undefined>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createEcKey'
    name: 'createEcKey(string, CreateEcKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-107">建立金鑰作業可用來建立 Azure Key Vault 中的任何金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-107">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-108">如果具名的金鑰已存在，Azure 金鑰保存庫會建立金鑰的新版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-108">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="e6f7d-109">它需要金鑰/建立權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-109">It requires the keys/create permission.</span></span>
      <span data-ttu-id="e6f7d-110">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-110">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createEcKey("MyKey", { curve: "P-256" });
      ```
    syntax:
      content: 'function createEcKey(name: string, options?: CreateEcKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-111">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-111">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateEcKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createKey'
    name: 'createKey(string, JsonWebKeyType, CreateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-112">建立金鑰作業可用來建立 Azure Key Vault 中的任何金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-112">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-113">如果具名的金鑰已存在，Azure 金鑰保存庫會建立金鑰的新版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-113">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="e6f7d-114">它需要金鑰/建立權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-114">It requires the keys/create permission.</span></span>
      <span data-ttu-id="e6f7d-115">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-115">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Create an elliptic-curve key:
      let result = await client.createKey("MyKey", "EC");
      ```
    syntax:
      content: 'function createKey(name: string, keyType: JsonWebKeyType, options?: CreateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-116">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-116">The name of the key.</span></span>
        - id: keyType
          type:
            - '@azure/keyvault-keys.JsonWebKeyType'
          description: <span data-ttu-id="e6f7d-117">索引鍵類型。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-117">The type of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createRsaKey'
    name: 'createRsaKey(string, CreateRsaKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-118">建立金鑰作業可用來建立 Azure Key Vault 中的任何金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-118">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-119">如果具名的金鑰已存在，Azure 金鑰保存庫會建立金鑰的新版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-119">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="e6f7d-120">它需要金鑰/建立權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-120">It requires the keys/create permission.</span></span>
      <span data-ttu-id="e6f7d-121">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-121">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createRsaKey("MyKey", { keySize: 2048 });
      ```
    syntax:
      content: 'function createRsaKey(name: string, options?: CreateRsaKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-122">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-122">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateRsaKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.deleteKey'
    name: 'deleteKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-123">刪除作業適用於 Azure Key Vault 中儲存的任何金鑰。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-123">The DELETE operation applies to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-124">刪除無法套用到索引鍵的個別版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-124">DELETE cannot be applied to an individual version of a key.</span></span> <span data-ttu-id="e6f7d-125">這項作業需要金鑰/刪除權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-125">This operation requires the keys/delete permission.</span></span>
      <span data-ttu-id="e6f7d-126">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-126">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.deleteKey("MyKey");
      ```
    syntax:
      content: 'function deleteKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-127">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-127">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e6f7d-128">靜態方法，用來建立新的管線物件使用提供的認證。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-128">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-keys.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDeletedKey'
    name: 'getDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-129">取得已刪除的金鑰作業會傳回已刪除的指定的金鑰，以及其屬性。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-129">The Get Deleted Key operation returns the specified deleted key along with its attributes.</span></span>
      <span data-ttu-id="e6f7d-130">這項作業需要金鑰/取得權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-130">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="e6f7d-131">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-131">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getDeletedKey("MyDeletedKey");
      ```
    syntax:
      content: 'function getDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-132">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-132">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getKey'
    name: 'getKey(string, GetKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-133">「 取得 」 作業是適用於 Azure Key Vault 中儲存的任何金鑰。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-133">The GET operation is applicable to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-134">這項作業需要金鑰/取得權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-134">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="e6f7d-135">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-135">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getKey("MyKey");
      ```
    syntax:
      content: 'function getKey(name: string, options?: GetKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-136">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-136">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.importKey'
    name: 'importKey(string, JsonWebKey, ImportKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-137">匯入至 Azure 金鑰保存庫的任何金鑰類型可用的匯入金鑰的作業。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-137">The import key operation may be used to import any key type into an Azure Key Vault.</span></span> <span data-ttu-id="e6f7d-138">如果具名的金鑰已存在，Azure 金鑰保存庫會建立金鑰的新版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-138">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="e6f7d-139">這項作業需要金鑰/匯入權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-139">This operation requires the keys/import permission.</span></span>
      <span data-ttu-id="e6f7d-140">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-140">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Key contents in myKeyContents
      let result = await client.importKey("MyKey", myKeyContents);
      ```
    syntax:
      content: 'function importKey(name: string, key: JsonWebKey, options?: ImportKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-141">匯入的索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-141">Name for the imported key.</span></span>
        - id: key
          type:
            - '@azure/keyvault-keys.JsonWebKey'
          description: <span data-ttu-id="e6f7d-142">Json web 金鑰</span><span class="sxs-lookup"><span data-stu-id="e6f7d-142">The Json web key</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.ImportKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.constructor'
    name: 'KeysClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-143">建立 KeysClient 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-143">Creates an instance of KeysClient.</span></span>
      <span data-ttu-id="e6f7d-144">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-144">Example usage:</span></span>
      ```ts
      import { KeysClient } from "@azure/keyvault-keys";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new KeysClient(url, credentials);
      ```
    syntax:
      content: 'new KeysClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="e6f7d-145">金鑰保存庫的基底 url。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-145">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listDeletedKeys'
    name: listDeletedKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-146">逐一查看已刪除的金鑰保存庫中。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-146">Iterates the deleted keys in the vault.</span></span>  <span data-ttu-id="e6f7d-147">在回應中提供的完整金鑰識別碼和屬性。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-147">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="e6f7d-148">不會傳回值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-148">No values are returned for the keys.</span></span> <span data-ttu-id="e6f7d-149">此作業需要金鑰/列出權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-149">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="e6f7d-150">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-150">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listDeletedKeys()) {
        const deletedKey = await client.getKey(keyAttr.name);
        console.log("deleted key: ", deletedKey);
      }
      ```
    syntax:
      content: 'function listDeletedKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeys'
    name: listKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-151">逐一查看所有金鑰保存庫中的最新版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-151">Iterates the latest version of all keys in the vault.</span></span>  <span data-ttu-id="e6f7d-152">在回應中提供的完整金鑰識別碼和屬性。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-152">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="e6f7d-153">不會傳回值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-153">No values are returned for the keys.</span></span> <span data-ttu-id="e6f7d-154">此作業需要金鑰/列出權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-154">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="e6f7d-155">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-155">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeys()) {
        const key = await client.getKey(keyAttr.name);
        console.log("key: ", key);
      }
      ```
    syntax:
      content: 'function listKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeyVersions'
    name: 'listKeyVersions(string, GetKeysOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-156">逐一查看指定的金鑰保存庫中的所有版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-156">Iterates all versions of the given key in the vault.</span></span> <span data-ttu-id="e6f7d-157">在回應中提供完整金鑰識別碼、 屬性和標記。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-157">The full key identifier, attributes, and tags are provided in the response.</span></span> <span data-ttu-id="e6f7d-158">這項作業需要金鑰/列出權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-158">This operation requires the keys/list permission.</span></span>
      <span data-ttu-id="e6f7d-159">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-159">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeyVersions("MyKey")) {
        const key = await client.getKey(keyAttr.name);
        console.log("key version: ", key);
      }
      ```
    syntax:
      content: 'function listKeyVersions(name: string, options?: GetKeysOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-160">要擷取的版本機碼名稱</span><span class="sxs-lookup"><span data-stu-id="e6f7d-160">Name of the key to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6f7d-161">若要建立服務的連線選項</span><span class="sxs-lookup"><span data-stu-id="e6f7d-161">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
    name: 'purgeDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-162">清除已刪除的金鑰作業而不需要復原的可能性，請以永久移除的金鑰。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-162">The purge deleted key operation removes the key permanently, without the possibility of recovery.</span></span> <span data-ttu-id="e6f7d-163">只能在已啟用虛刪除的保存庫上啟用這項作業。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-163">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="e6f7d-164">這項作業需要金鑰/清除權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-164">This operation requires the keys/purge permission.</span></span>
      <span data-ttu-id="e6f7d-165">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-165">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.purgeDeletedKey("MyKey");
      ```
    syntax:
      content: 'function purgeDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-166">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-166">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
    name: 'recoverDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-167">復原已刪除的金鑰，在指定的保存庫中。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-167">Recovers the deleted key in the specified vault.</span></span> <span data-ttu-id="e6f7d-168">這項作業只可對已啟用虛刪除的保存庫。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-168">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="e6f7d-169">這項作業需要金鑰/復原權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-169">This operation requires the keys/recover permission.</span></span>
      <span data-ttu-id="e6f7d-170">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-170">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.recoverDeletedKey("MyKey");
      ```
    syntax:
      content: 'function recoverDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-171">已刪除的金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-171">The name of the deleted key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.restoreKey'
    name: 'restoreKey(Uint8Array, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-172">還原備份的金鑰，及其所有版本，到保存庫中。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-172">Restores a backed up key, and all its versions, to a vault.</span></span> <span data-ttu-id="e6f7d-173">這項作業需要金鑰/還原權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-173">This operation requires the keys/restore permission.</span></span>
      <span data-ttu-id="e6f7d-174">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-174">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      // ...
      let key = await client.restoreKey(backupContents);
      ```
    syntax:
      content: 'function restoreKey(backup: Uint8Array, options?: RequestOptions)'
      parameters:
        - id: backup
          type:
            - Uint8Array
          description: <span data-ttu-id="e6f7d-175">備份 blob 相關聯的索引鍵的組合。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-175">The backup blob associated with a key bundle.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.updateKey'
    name: 'updateKey(string, string, UpdateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="e6f7d-176">更新作業會變更現有的預存金鑰的指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-176">The UPDATE operation changes specified attributes of an existing stored key.</span></span> <span data-ttu-id="e6f7d-177">未在要求中指定的屬性會保留不變。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-177">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="e6f7d-178">無法變更機碼本身的值。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-178">The value of a key itself cannot be changed.</span></span> <span data-ttu-id="e6f7d-179">這項作業需要金鑰/設定權限。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-179">This operation requires the keys/set permission.</span></span>
      <span data-ttu-id="e6f7d-180">使用方式範例：</span><span class="sxs-lookup"><span data-stu-id="e6f7d-180">Example usage:</span></span>
      ```ts
      let keyName = "MyKey";
      let client = new KeysClient(url, credentials);
      let key = await client.getKey(keyName);
      let result = await client.updateKey(keyName, key.version, { enabled: false });
      ```
    syntax:
      content: 'function updateKey(name: string, keyVersion: string, options?: UpdateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="e6f7d-181">索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-181">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: <span data-ttu-id="e6f7d-182">索引鍵的版本。</span><span class="sxs-lookup"><span data-stu-id="e6f7d-182">The version of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.UpdateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6f7d-183">要保存庫的基底 URL</span><span class="sxs-lookup"><span data-stu-id="e6f7d-183">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-keys'
references:
  - uid: ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'
  - uid: '@azure/keyvault-keys.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/keyvault-keys.RequestOptions'
  - uid: '@azure/keyvault-keys.CreateEcKeyOptions'
    name: CreateEcKeyOptions
    spec.typeScript:
      - name: CreateEcKeyOptions
        fullName: CreateEcKeyOptions
        uid: '@azure/keyvault-keys.CreateEcKeyOptions'
  - uid: Promise<@azure/keyvault-keys.Key>
    name: Key>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Key
        fullName: Key
        uid: '@azure/keyvault-keys.Key'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.JsonWebKeyType'
    name: JsonWebKeyType
    spec.typeScript:
      - name: JsonWebKeyType
        fullName: JsonWebKeyType
        uid: '@azure/keyvault-keys.JsonWebKeyType'
  - uid: '@azure/keyvault-keys.CreateKeyOptions'
    name: CreateKeyOptions
    spec.typeScript:
      - name: CreateKeyOptions
        fullName: CreateKeyOptions
        uid: '@azure/keyvault-keys.CreateKeyOptions'
  - uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
    name: CreateRsaKeyOptions
    spec.typeScript:
      - name: CreateRsaKeyOptions
        fullName: CreateRsaKeyOptions
        uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
  - uid: Promise<@azure/keyvault-keys.DeletedKey>
    name: DeletedKey>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKey
        fullName: DeletedKey
        uid: '@azure/keyvault-keys.DeletedKey'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.GetKeyOptions'
    name: GetKeyOptions
    spec.typeScript:
      - name: GetKeyOptions
        fullName: GetKeyOptions
        uid: '@azure/keyvault-keys.GetKeyOptions'
  - uid: '@azure/keyvault-keys.JsonWebKey'
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: '@azure/keyvault-keys.JsonWebKey'
  - uid: '@azure/keyvault-keys.ImportKeyOptions'
    name: ImportKeyOptions
    spec.typeScript:
      - name: ImportKeyOptions
        fullName: ImportKeyOptions
        uid: '@azure/keyvault-keys.ImportKeyOptions'
  - uid: '@azure/keyvault-keys.GetKeysOptions'
    name: GetKeysOptions
    spec.typeScript:
      - name: GetKeysOptions
        fullName: GetKeysOptions
        uid: '@azure/keyvault-keys.GetKeysOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    name: 'KeyAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: ', '
        fullName: ', '
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-keys.UpdateKeyOptions'
    name: UpdateKeyOptions
    spec.typeScript:
      - name: UpdateKeyOptions
        fullName: UpdateKeyOptions
        uid: '@azure/keyvault-keys.UpdateKeyOptions'
  - uid: '@azure/keyvault-keys.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'