### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobManagerTask
    name: JobManagerTask
    fullName: JobManagerTask
    children:
      - azure-batch.JobManagerTask.allowLowPriorityNode
      - azure-batch.JobManagerTask.applicationPackageReferences
      - azure-batch.JobManagerTask.authenticationTokenSettings
      - azure-batch.JobManagerTask.commandLine
      - azure-batch.JobManagerTask.constraints
      - azure-batch.JobManagerTask.containerSettings
      - azure-batch.JobManagerTask.displayName
      - azure-batch.JobManagerTask.environmentSettings
      - azure-batch.JobManagerTask.id
      - azure-batch.JobManagerTask.killJobOnCompletion
      - azure-batch.JobManagerTask.outputFiles
      - azure-batch.JobManagerTask.resourceFiles
      - azure-batch.JobManagerTask.runExclusive
      - azure-batch.JobManagerTask.userIdentity
    langs:
      - typeScript
    type: interface
    summary: |-
      建立作業時，作業管理員工作會自動啟動。 Batch 服務會嘗試排程作業管理員工作之前工作中的任何其他工作。 當縮小集區，Batch 服務會嘗試保留作業管理員工作的時間愈長愈 （也就是計算節點執行 「 一般的 」 工作會移除之前執行的作業管理員工作的計算節點） 的執行所在的節點。 當作業管理員工作失敗，且必須重新啟動時，系統會嘗試將它排程在最高優先順序。 如果沒有可用的閒置的計算節點，系統可能會終止正在執行的工作集區中的其中一個，並將它傳回給佇列中，以挪出空間，作業管理員工作，才能重新啟動。 請注意，在一項作業的作業管理員工作不會不優先於其他作業中的工作。 在工作中，被觀察工作層級優先順序。 比方說，如果優先順序 0 中的作業管理員工作需要重新啟動，它會取代在優先權 1 工作作業。 在節點上觸發復原作業時，批次會重試工作。
      復原作業的範例包括 （但不限於） 時的狀況不良的節點已重新啟動，或因為主機失敗而消失的計算節點。 因為復原作業在獨立的而且不會納入 maxTaskRetryCount 會重試。 即使 maxTaskRetryCount 為 0，因為復原作業內部重試可能會發生。 因為這個緣故，所有工作都應該具有等冪性。 這表示工作需要容許正在中斷並重新啟動而不會造成任何損毀或重複的資料。 最佳做法長時間執行的工作是使用某種形式的檢查點。
    package: azure-batch
  - uid: azure-batch.JobManagerTask.allowLowPriorityNode
    name: allowLowPriorityNode
    fullName: allowLowPriorityNode
    children: []
    langs:
      - typeScript
    type: property
    summary: 預設值為 true。
    optional: true
    syntax:
      content: 'allowLowPriorityNode?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.applicationPackageReferences
    name: applicationPackageReferences
    fullName: applicationPackageReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: '應用程式封裝會下載並部署到共用目錄，而不將工作目錄的工作。 因此，如果所參考的應用程式套件已在 [計算] 節點中，且最新狀態，則不會被重新下載;用於計算的計算節點上的現有複本。 如果所參考應用程式套件無法安裝，例如因為封裝已被刪除，或因為下載失敗，則工作會失敗。'
    optional: true
    syntax:
      content: 'applicationPackageReferences?: ApplicationPackageReference[]'
      return:
        type:
          - 'azure-batch.ApplicationPackageReference[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.authenticationTokenSettings
    name: authenticationTokenSettings
    fullName: authenticationTokenSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 如果設定這個屬性，則 Batch 服務會提供可用來驗證批次服務作業，而不需要帳戶存取金鑰驗證權杖的工作。 提供的語彙基元是透過 AZ_BATCH_AUTHENTICATION_TOKEN 環境變數。 工作可以執行使用權杖的作業會視設定而定。 比方說，工作可以要求作業的權限，才能將其他工作新增至作業中，或檢查的作業，或在作業下的其他工作的狀態。
    optional: true
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
      return:
        type:
          - azure-batch.AuthenticationTokenSettings
    package: azure-batch
  - uid: azure-batch.JobManagerTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: '命令列不會在殼層中執行，因此無法利用 shell 功能，例如環境變數擴充。 如果您想要利用這類功能，您應該叫用命令列中的殼層並不會使用"cmd /c MyCommand"在 Windows 或 「 / bin/sh-c MyCommand 」 在 Linux 中。 如果命令列參考檔案路徑，它應該使用相對路徑 （相對於工作工作目錄），或使用批次提供的環境變數 (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)。'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type:
          - azure-batch.TaskConstraints
    package: azure-batch
  - uid: azure-batch.JobManagerTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 如果會執行這項工作的集區有設定 containerConfiguration，這必須設定以及。 如果會執行這項工作的集區未設定 containerConfiguration，這不能設定。 時指定此參數，AZ_BATCH_NODE_ROOT_DIR （在節點上的 Azure Batch 根目錄） 下方的所有目錄以遞迴方式都對應至容器，所有的工作環境變數會都對應至容器，且工作命令列在容器中執行。 產生外 AZ_BATCH_NODE_ROOT_DIR 容器中的檔案可能不會反映到主機的磁碟，這表示批次檔的 Api 不能存取這些檔案。
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.JobManagerTask.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: 它不需要是唯一可以包含任何 Unicode 字元，最大長度為 1024年。
    optional: true
    syntax:
      content: 'displayName?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 識別碼可包含英數字元，包括連字號及底線的任意組合，而且不能包含超過 64 個字元。
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobManagerTask.killJobOnCompletion
    name: killJobOnCompletion
    fullName: killJobOnCompletion
    children: []
    langs:
      - typeScript
    type: property
    summary: 如果為 true，作業管理員工作完成時，Batch 服務標記為已完成作業。 如果 （除了作業解除） 之外，這次仍在執行任何工作，這些工作將會終止。 如果為 false，作業管理員工作完成並不會影響作業狀態。 在此情況下，您應該使用 onAllTasksComplete 屬性來終止作業，或者具有用戶端或使用者明確終止作業。 這個範例是，如果作業管理員會建立一組工作，但在執行，則會採用任何進一步的角色。 預設值為 true。 如果您是使用 onAllTasksComplete 和 onTaskFailure 屬性來控制工作的存留期，並使用作業管理員工作只為建立工作的作業 （不是以監視進度），然後務必將 「 killjoboncompletion 」 設定為 false。
    optional: true
    syntax:
      content: 'killJobOnCompletion?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.outputFiles
    name: outputFiles
    fullName: outputFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 對於多重執行個體的工作，將只上傳檔案從主要的工作執行所在的計算節點。
    optional: true
    syntax:
      content: 'outputFiles?: OutputFile[]'
      return:
        type:
          - 'azure-batch.OutputFile[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      這個項目底下所列的檔案位於工作的工作目錄。
      沒有資源檔清單的最大大小。  當超過大小上限時，則要求會失敗，並回應錯誤程式碼會比較 RequestEntityTooLarge。 如果發生這種情況，就必須降低的 ResourceFiles 集合的大小。 這可以使用.zip 檔、 應用程式套件或 Docker 容器來達成。
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.JobManagerTask.runExclusive
    name: runExclusive
    fullName: runExclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: '如果為 true，沒有其他工作會針對相同的節點上執行，只要作業管理員正在執行。 如果為 false，其他工作可以同時執行作業管理員與計算節點上。 作業管理員工作通常不利於計算節點的並行工作限制，所以這只適用於 [計算] 節點可讓多個並行工作。 預設值為 true。'
    optional: true
    syntax:
      content: 'runExclusive?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.JobManagerTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 如果省略，則工作可唯一的非系統管理使用者身分執行工作。
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
references:
  - uid: 'azure-batch.ApplicationPackageReference[]'
    name: 'ApplicationPackageReference[]'
    spec.typeScript:
      - name: ApplicationPackageReference
        fullName: ApplicationPackageReference
        uid: azure-batch.ApplicationPackageReference
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.AuthenticationTokenSettings
    name: AuthenticationTokenSettings
    spec.typeScript:
      - name: AuthenticationTokenSettings
        fullName: AuthenticationTokenSettings
        uid: azure-batch.AuthenticationTokenSettings
  - uid: azure-batch.TaskConstraints
    name: TaskConstraints
    spec.typeScript:
      - name: TaskConstraints
        fullName: TaskConstraints
        uid: azure-batch.TaskConstraints
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.OutputFile[]'
    name: 'OutputFile[]'
    spec.typeScript:
      - name: OutputFile
        fullName: OutputFile
        uid: azure-batch.OutputFile
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity