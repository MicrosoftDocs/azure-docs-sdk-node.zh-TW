### YamlMime:UniversalReference
ms.openlocfilehash: bed954b4ad093b9d7b51214336247d9673cd8b5a
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-TW
ms.lasthandoff: 08/12/2018
ms.locfileid: "40054412"
items:
- uid: azure-cognitiveservices-face.Face
  name: Face
  fullName: Face
  children:
  - azure-cognitiveservices-face.Face.detect
  - azure-cognitiveservices-face.Face.detect_1
  - azure-cognitiveservices-face.Face.detect_2
  - azure-cognitiveservices-face.Face.detectInStream_1
  - azure-cognitiveservices-face.Face.detectInStream_2
  - azure-cognitiveservices-face.Face.detectInStream
  - azure-cognitiveservices-face.Face.detectInStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.detectWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.findSimilar
  - azure-cognitiveservices-face.Face.findSimilar_1
  - azure-cognitiveservices-face.Face.findSimilar_2
  - azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.group
  - azure-cognitiveservices-face.Face.group_1
  - azure-cognitiveservices-face.Face.group_2
  - azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.identify_1
  - azure-cognitiveservices-face.Face.identify_2
  - azure-cognitiveservices-face.Face.identify
  - azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verify
  - azure-cognitiveservices-face.Face.verify_1
  - azure-cognitiveservices-face.Face.verify_2
  - azure-cognitiveservices-face.Face.verifyWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup_1
  - azure-cognitiveservices-face.Face.verifyWithPersonGroup_2
  - azure-cognitiveservices-face.Face.verifyWithPersonGroupWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-101">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-101">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detect(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect_1
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-102">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-102">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detect(url: string, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detect_2
  name: detect
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-103">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-103">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detect(url: string, options: function, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream_1
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-104">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-104">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectInStream(image: stream.Readable, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream_2
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-105">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-105">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectInStream(image: stream.Readable, options: function, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStream
  name: detectInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-106">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-106">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="9c835-107">影像資料流。</span><span class="sxs-lookup"><span data-stu-id="9c835-107">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectInStreamWithHttpOperationResponse
  name: detectInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-108">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-108">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="9c835-109">影像資料流。</span><span class="sxs-lookup"><span data-stu-id="9c835-109">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithHttpOperationResponse
  name: detectWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-110">在映像，並傳回臉部位置，以及選擇性地 faceIds、 地標，與屬性，請偵測人臉。</span><span class="sxs-lookup"><span data-stu-id="9c835-110">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-111">提供查詢臉部 faceId，尋找從 faceId 陣列或 faceListId 看起來類似的臉部。</span><span class="sxs-lookup"><span data-stu-id="9c835-111">Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, options?: function)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-112">其查詢臉部的 FaceId。</span><span class="sxs-lookup"><span data-stu-id="9c835-112">FaceId of the query face.</span></span> <span data-ttu-id="9c835-113">使用者必須呼叫臉部-偵測第一個取得有效的 faceId。</span><span class="sxs-lookup"><span data-stu-id="9c835-113">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="9c835-114">請注意，此 faceId 不會保存，而且將在到期偵測呼叫之後的 24 小時</span><span class="sxs-lookup"><span data-stu-id="9c835-114">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_1
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-115">提供查詢臉部 faceId，尋找從 faceId 陣列或 faceListId 看起來類似的臉部。</span><span class="sxs-lookup"><span data-stu-id="9c835-115">Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFaceResult[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_2
  name: findSimilar
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-116">提供查詢臉部 faceId，尋找從 faceId 陣列或 faceListId 看起來類似的臉部。</span><span class="sxs-lookup"><span data-stu-id="9c835-116">Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, options: function, callback: ServiceCallback<SimilarFaceResult[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  name: findSimilarWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-117">提供查詢臉部 faceId，尋找從 faceId 陣列或 faceListId 看起來類似的臉部。</span><span class="sxs-lookup"><span data-stu-id="9c835-117">Given query face's faceId, find the similar-looking faces from a faceId array or a faceListId.</span></span>
  syntax:
    content: 'function findSimilarWithHttpOperationResponse(faceId: string, options?: function)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-118">其查詢臉部的 FaceId。</span><span class="sxs-lookup"><span data-stu-id="9c835-118">FaceId of the query face.</span></span> <span data-ttu-id="9c835-119">使用者必須呼叫臉部-偵測第一個取得有效的 faceId。</span><span class="sxs-lookup"><span data-stu-id="9c835-119">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="9c835-120">請注意，此 faceId 不會保存，而且將在到期偵測呼叫之後的 24 小時</span><span class="sxs-lookup"><span data-stu-id="9c835-120">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFaceResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-121">您可以將候選臉部分組根據臉部相似度。</span><span class="sxs-lookup"><span data-stu-id="9c835-121">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], options?: function)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="9c835-122">候選 faceId 的陣列建立臉部-偵測。</span><span class="sxs-lookup"><span data-stu-id="9c835-122">Array of candidate faceId created by Face - Detect.</span></span>

        <span data-ttu-id="9c835-123">最大值是 1000年張人臉</span><span class="sxs-lookup"><span data-stu-id="9c835-123">The maximum is 1000 faces</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_1
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-124">您可以將候選臉部分組根據臉部相似度。</span><span class="sxs-lookup"><span data-stu-id="9c835-124">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResponse>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_2
  name: group
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-125">您可以將候選臉部分組根據臉部相似度。</span><span class="sxs-lookup"><span data-stu-id="9c835-125">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], options: function, callback: ServiceCallback<GroupResponse>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResponse>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  name: groupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-126">您可以將候選臉部分組根據臉部相似度。</span><span class="sxs-lookup"><span data-stu-id="9c835-126">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function groupWithHttpOperationResponse(faceIds: string[], options?: function)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="9c835-127">候選 faceId 的陣列建立臉部-偵測。</span><span class="sxs-lookup"><span data-stu-id="9c835-127">Array of candidate faceId created by Face - Detect.</span></span>

        <span data-ttu-id="9c835-128">最大值是 1000年張人臉</span><span class="sxs-lookup"><span data-stu-id="9c835-128">The maximum is 1000 faces</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResponse>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_1
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-129">識別不明的人臉，從人員群組。</span><span class="sxs-lookup"><span data-stu-id="9c835-129">Identify unknown faces from a person group.</span></span>
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], callback: ServiceCallback<IdentifyResultItem[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_2
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-130">識別不明的人臉，從人員群組。</span><span class="sxs-lookup"><span data-stu-id="9c835-130">Identify unknown faces from a person group.</span></span>
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], options: function, callback: ServiceCallback<IdentifyResultItem[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify
  name: identify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-131">識別不明的人臉，從人員群組。</span><span class="sxs-lookup"><span data-stu-id="9c835-131">Identify unknown faces from a person group.</span></span>
  syntax:
    content: 'function identify(personGroupId: string, faceIds: string[], options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-132">personGroupId PersonGroups.Create 所建立的目標人員群組</span><span class="sxs-lookup"><span data-stu-id="9c835-132">personGroupId of the target person group, created by PersonGroups.Create</span></span>
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="9c835-133">候選 faceId 的陣列建立臉部-偵測。</span><span class="sxs-lookup"><span data-stu-id="9c835-133">Array of candidate faceId created by Face - Detect.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  name: identifyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-134">識別不明的人臉，從人員群組。</span><span class="sxs-lookup"><span data-stu-id="9c835-134">Identify unknown faces from a person group.</span></span>
  syntax:
    content: 'function identifyWithHttpOperationResponse(personGroupId: string, faceIds: string[], options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-135">personGroupId PersonGroups.Create 所建立的目標人員群組</span><span class="sxs-lookup"><span data-stu-id="9c835-135">personGroupId of the target person group, created by PersonGroups.Create</span></span>
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="9c835-136">候選 faceId 的陣列建立臉部-偵測。</span><span class="sxs-lookup"><span data-stu-id="9c835-136">Array of candidate faceId created by Face - Detect.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResultItem[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-137">請確認是否這兩張臉屬於同一個人，或一個面是否屬於個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-137">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, options?: function)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        <span data-ttu-id="9c835-138">faceId 的第一個的字體，來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-138">faceId of the first face, comes from Face - Detect</span></span>
    - id: faceId2
      type:
      - string
      description: >
        <span data-ttu-id="9c835-139">第二個臉部的 faceId 來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-139">faceId of the second face, comes from Face - Detect</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify_1
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-140">請確認是否這兩張臉屬於同一個人，或一個面是否屬於個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-140">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verify_2
  name: verify
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-141">請確認是否這兩張臉屬於同一個人，或一個面是否屬於個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-141">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verify(faceId1: string, faceId2: string, options: function, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithHttpOperationResponse
  name: verifyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-142">請確認是否這兩張臉屬於同一個人，或一個面是否屬於個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-142">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verifyWithHttpOperationResponse(faceId1: string, faceId2: string, options?: function)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        <span data-ttu-id="9c835-143">faceId 的第一個的字體，來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-143">faceId of the first face, comes from Face - Detect</span></span>
    - id: faceId2
      type:
      - string
      description: >
        <span data-ttu-id="9c835-144">第二個臉部的 faceId 來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-144">faceId of the second face, comes from Face - Detect</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-145">請確認是否兩張臉部是屬於同一個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-145">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="9c835-146">比較臉部識別碼人員識別碼</span><span class="sxs-lookup"><span data-stu-id="9c835-146">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, options?: function)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-147">faceId 臉部，來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-147">faceId the face, comes from Face - Detect</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-148">指定特定人員人群組中。</span><span class="sxs-lookup"><span data-stu-id="9c835-148">Specify a certain person in a person group.</span></span>

        <span data-ttu-id="9c835-149">personId Persons.Create 中建立。</span><span class="sxs-lookup"><span data-stu-id="9c835-149">personId is created in Persons.Create.</span></span>
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-150">使用現有 personGroupId 和 personId 快速載入指定的人員。</span><span class="sxs-lookup"><span data-stu-id="9c835-150">Using existing personGroupId and personId for fast loading a specified person.</span></span> <span data-ttu-id="9c835-151">personGroupId 人員 Groups.Create 中建立。</span><span class="sxs-lookup"><span data-stu-id="9c835-151">personGroupId is created in Person Groups.Create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup_1
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-152">請確認是否兩張臉部是屬於同一個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-152">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="9c835-153">比較臉部識別碼人員識別碼</span><span class="sxs-lookup"><span data-stu-id="9c835-153">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroup_2
  name: verifyWithPersonGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-154">請確認是否兩張臉部是屬於同一個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-154">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="9c835-155">比較臉部識別碼人員識別碼</span><span class="sxs-lookup"><span data-stu-id="9c835-155">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyWithPersonGroup(faceId: string, personId: string, personGroupId: string, options: function, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyWithPersonGroupWithHttpOperationResponse
  name: verifyWithPersonGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9c835-156">請確認是否兩張臉部是屬於同一個人。</span><span class="sxs-lookup"><span data-stu-id="9c835-156">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="9c835-157">比較臉部識別碼人員識別碼</span><span class="sxs-lookup"><span data-stu-id="9c835-157">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyWithPersonGroupWithHttpOperationResponse(faceId: string, personId: string, personGroupId: string, options?: function)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-158">faceId 臉部，來自臉部-偵測</span><span class="sxs-lookup"><span data-stu-id="9c835-158">faceId the face, comes from Face - Detect</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-159">指定特定人員人群組中。</span><span class="sxs-lookup"><span data-stu-id="9c835-159">Specify a certain person in a person group.</span></span>

        <span data-ttu-id="9c835-160">personId Persons.Create 中建立。</span><span class="sxs-lookup"><span data-stu-id="9c835-160">personId is created in Persons.Create.</span></span>
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9c835-161">使用現有 personGroupId 和 personId 快速載入指定的人員。</span><span class="sxs-lookup"><span data-stu-id="9c835-161">Using existing personGroupId and personId for fast loading a specified person.</span></span> <span data-ttu-id="9c835-162">personGroupId 人員 Groups.Create 中建立。</span><span class="sxs-lookup"><span data-stu-id="9c835-162">personGroupId is created in Person Groups.Create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.DetectedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.SimilarFaceResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.SimilarFaceResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFaceResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SimilarFaceResult
    fullName: SimilarFaceResult
    uid: azure-cognitiveservices-face.SimilarFaceResult
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.GroupResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GroupResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GroupResponse
    fullName: GroupResponse
    uid: azure-cognitiveservices-face.GroupResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.IdentifyResultItem[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.IdentifyResultItem[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResultItem[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IdentifyResultItem
    fullName: IdentifyResultItem
    uid: azure-cognitiveservices-face.IdentifyResultItem
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.VerifyResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.VerifyResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>>'
    fullName: '>>'
