### YamlMime:UniversalReference
items:
  - uid: msal.UserAgentApplication
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - msal.UserAgentApplication.acquireTokenPopup
      - msal.UserAgentApplication.acquireTokenRedirect
      - msal.UserAgentApplication.acquireTokenSilent
      - msal.UserAgentApplication.authority
      - msal.UserAgentApplication.getAccount
      - msal.UserAgentApplication.getAllAccounts
      - msal.UserAgentApplication.getAuthorityInstance
      - msal.UserAgentApplication.getCurrentConfiguration
      - msal.UserAgentApplication.getLoginInProgress
      - msal.UserAgentApplication.getPostLogoutRedirectUri
      - msal.UserAgentApplication.getRedirectUri
      - msal.UserAgentApplication.handleRedirectCallback_1
      - msal.UserAgentApplication.handleRedirectCallback
      - msal.UserAgentApplication.loginPopup
      - msal.UserAgentApplication.loginRedirect
      - msal.UserAgentApplication.logout
      - msal.UserAgentApplication.constructor
    langs:
      - typeScript
    type: class
    summary: 'UserAgentApplication 類別：<xref:UserAgentApplication> 物件執行個體，開發人員可以使用來進行 loginXX OR acquireTokenXX 函式'
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenPopup
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: 當您想要為您的 API，透過在使用者的瀏覽器中開啟快顯視窗中取得 access_token 的使用
    syntax:
      content: 'function acquireTokenPopup(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenRedirect
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: 您想要取得為您的 API 的 access_token，將使用者重新導向至授權端點時使用。
    syntax:
      content: 'function acquireTokenRedirect(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenSilent
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      使用此函數來取得語彙基元，每個對 API 進行呼叫之前 / 資源提供者 MSAL 傳回的快取的權杖可用時，或它所傳送的 STS 要求，以取得新權杖使用隱藏的 iframe。
    syntax:
      content: 'function acquireTokenSilent(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      傳回授權單位，其中授權單位是 URL，表示可以使用 MSAL 取得權杖的目錄
      - 在 Azure AD 中，這個屬性是 URL，表示 MSAL 用來取得的權杖的形式就是 Azure active directory https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;如果您的應用程式會支援帳戶，一個組織的目錄中，「 Enter_the_Tenant_Info_Here"值取代租用戶識別碼或租用戶名稱 (例如 contoso.microsoft.com) 如果您的應用程式支援任何組織的目錄中的帳戶、 組織以取代"Enter_the_Tenant_Info_Here"值，如果您的應用程式支援在任何組織的目錄和個人 Microsoft 帳戶的帳戶，取代"Enter_the_Tenant_Info_使用一般的 here"值。
      若要限制支援個人 Microsoft 帳戶，取代"Enter_the_Tenant_Info_Here 」 值取用者。
      - 在 Azure B2C 中，它是 https://&lt;執行個體&gt;/tfp/&lt;租用戶&gt;/<policyName>/
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getAccount
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: 帶正負號帳戶 （來自帳戶物件建立時的登入） 或 null 時傳回不找到任何狀態
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - msal.Account
    package: msal
  - uid: msal.UserAgentApplication.getAllAccounts
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: 用來篩選所有快取的項目並傳回一份根據 homeAccountIdentifier 唯一的帳戶。
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<msal.Account>
    package: msal
  - uid: msal.UserAgentApplication.getAuthorityInstance
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: 傳回的授權單位執行個體
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
    package: msal
  - uid: msal.UserAgentApplication.getCurrentConfiguration
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: '若要取得目前使用<xref:Configuration>msal 的物件'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - msal.Configuration
    package: msal
  - uid: msal.UserAgentApplication.getLoginInProgress
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: 傳回布林值旗標，以利通知，如果登入正在進行中的開發人員
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
    package: msal
  - uid: msal.UserAgentApplication.getPostLogoutRedirectUri
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      使用取得文章登出重新導向 uri 在 MSAL 或 null 設定。
      評估 postLogoutredirectUri 是否函式，否則只會傳回其值。
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getRedirectUri
    name: getRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      使用此選項，以取得在 MSAL 或 null 設定重新導向 uri。
      評估 redirectUri 是否函式，否則只會傳回其值。
    syntax:
      content: function getRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback_1
    name: handleRedirectCallback(authResponseCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: 設定重新導向流程，以傳回成功或錯誤物件的回呼函式。
    syntax:
      content: 'function handleRedirectCallback(authCallback: authResponseCallback)'
      parameters:
        - id: authCallback
          type:
            - authResponseCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.handleRedirectCallback
    name: 'handleRedirectCallback(tokenReceivedCallback, errorReceivedCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 設定重新導向流程，以傳回成功或錯誤物件的回呼函式。
    syntax:
      content: 'function handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback)'
      parameters:
        - id: tokenReceivedCallback
          type:
            - tokenReceivedCallback
          description: ''
        - id: errorReceivedCallback
          type:
            - errorReceivedCallback
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.loginPopup
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: 使用時起始登入程序，透過在使用者的瀏覽器中開啟快顯視窗
    syntax:
      content: 'function loginPopup(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.loginRedirect
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: 起始登入程序的使用者的瀏覽器重新導向至授權端點時使用。
    syntax:
      content: 'function loginRedirect(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
    package: msal
  - uid: msal.UserAgentApplication.logout
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      用來登出目前的使用者，並將使用者重新導向至 postLogoutRedirectUri。
      預設行為是將使用者重新導向至`window.location.href`。
    syntax:
      content: function logout()
      parameters: []
    package: msal
  - uid: msal.UserAgentApplication.constructor
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: '建構函式<xref:UserAgentApplication>這是為了可以具現化的物件<xref:UserAgentApplication>物件'
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - msal.Configuration
          description: |
            MSAL UserAgentApplication 執行個體的物件
    package: msal
references:
  - uid: msal.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: msal.Configuration
  - uid: msal.AuthenticationParameters
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: msal.AuthenticationParameters
  - uid: Promise<msal.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: msal.AuthResponse
      - name: '>'
        fullName: '>'
  - uid: msal.Account
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: msal.Account
  - uid: Array<msal.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: msal.Account
      - name: '>'
        fullName: '>'