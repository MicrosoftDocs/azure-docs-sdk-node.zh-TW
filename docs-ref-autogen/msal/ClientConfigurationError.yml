### YamlMime:UniversalReference
items:
  - uid: msal.ClientConfigurationError
    name: ClientConfigurationError
    fullName: ClientConfigurationError
    children:
      - msal.ClientConfigurationError.constructor
      - msal.ClientConfigurationError.createAcquireTokenInProgressError
      - msal.ClientConfigurationError.createClaimsRequestParsingError
      - msal.ClientConfigurationError.createClientIdSingleScopeError
      - msal.ClientConfigurationError.createClientInfoDecodingError
      - msal.ClientConfigurationError.createClientInfoNotPopulatedError
      - msal.ClientConfigurationError.createEmptyScopesArrayError
      - msal.ClientConfigurationError.createEndpointResolutionError
      - msal.ClientConfigurationError.createErrorInCallbackFunction
      - msal.ClientConfigurationError.createIdTokenNullOrEmptyError
      - msal.ClientConfigurationError.createIdTokenParsingError
      - msal.ClientConfigurationError.createInvalidCacheLocationConfigError
      - msal.ClientConfigurationError.createInvalidCallbackObjectError
      - msal.ClientConfigurationError.createInvalidIdTokenError
      - msal.ClientConfigurationError.createInvalidPromptError
      - msal.ClientConfigurationError.createInvalidStateError
      - msal.ClientConfigurationError.createLoginInProgressError
      - msal.ClientConfigurationError.createMultipleAuthoritiesInCacheError
      - msal.ClientConfigurationError.createMultipleMatchingTokensInCacheError
      - msal.ClientConfigurationError.createNonceMismatchError
      - msal.ClientConfigurationError.createNoSetConfigurationError
      - msal.ClientConfigurationError.createNoStorageSupportedError
      - msal.ClientConfigurationError.createPopupWindowError
      - msal.ClientConfigurationError.createRedirectCallbacksNotSetError
      - msal.ClientConfigurationError.createScopesNonArrayError
      - msal.ClientConfigurationError.createScopesRequiredError
      - msal.ClientConfigurationError.createTokenEncodingError
      - msal.ClientConfigurationError.createTokenRenewalTimeoutError
      - msal.ClientConfigurationError.createUnexpectedError
      - msal.ClientConfigurationError.createUserCancelledError
      - msal.ClientConfigurationError.createUserDoesNotExistError
      - msal.ClientConfigurationError.createUserLoginRequiredError
      - msal.ClientConfigurationError.errorCode
      - msal.ClientConfigurationError.errorMessage
      - msal.ClientConfigurationError.message
      - msal.ClientConfigurationError.name
      - msal.ClientConfigurationError.stack
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="51e13-101">.Js 程式庫的組態中發生錯誤時擲回的錯誤。</span><span class="sxs-lookup"><span data-stu-id="51e13-101">Error thrown when there is an error in configuration of the .js library.</span></span>
    extends:
      name: msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.constructor
    name: 'ClientConfigurationError(string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ClientConfigurationError(errorCode: string, errorMessage?: string)'
      parameters:
        - id: errorCode
          type:
            - string
          description: ''
        - id: errorMessage
          type:
            - string
          description: ''
          optional: true
    package: msal
  - uid: msal.ClientConfigurationError.createAcquireTokenInProgressError
    name: createAcquireTokenInProgressError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createAcquireTokenInProgressError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createClaimsRequestParsingError
    name: createClaimsRequestParsingError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createClaimsRequestParsingError(claimsRequestParseError: string)'
      parameters:
        - id: claimsRequestParseError
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createClientIdSingleScopeError
    name: createClientIdSingleScopeError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createClientIdSingleScopeError(scopesValue: string)'
      parameters:
        - id: scopesValue
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createClientInfoDecodingError
    name: createClientInfoDecodingError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createClientInfoDecodingError(caughtError: string)'
      parameters:
        - id: caughtError
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createClientInfoNotPopulatedError
    name: createClientInfoNotPopulatedError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createClientInfoNotPopulatedError(caughtError: string)'
      parameters:
        - id: caughtError
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createEmptyScopesArrayError
    name: createEmptyScopesArrayError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createEmptyScopesArrayError(scopesValue: string)'
      parameters:
        - id: scopesValue
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createEndpointResolutionError
    name: createEndpointResolutionError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createEndpointResolutionError(errDetail?: string)'
      parameters:
        - id: errDetail
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createErrorInCallbackFunction
    name: createErrorInCallbackFunction(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createErrorInCallbackFunction(errorDesc: string)'
      parameters:
        - id: errorDesc
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createIdTokenNullOrEmptyError
    name: createIdTokenNullOrEmptyError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createIdTokenNullOrEmptyError(invalidRawTokenString: string)'
      parameters:
        - id: invalidRawTokenString
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createIdTokenParsingError
    name: createIdTokenParsingError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createIdTokenParsingError(caughtParsingError: string)'
      parameters:
        - id: caughtParsingError
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createInvalidCacheLocationConfigError
    name: createInvalidCacheLocationConfigError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createInvalidCacheLocationConfigError(givenCacheLocation: string)'
      parameters:
        - id: givenCacheLocation
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createInvalidCallbackObjectError
    name: createInvalidCallbackObjectError(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createInvalidCallbackObjectError(callbackObject: object)'
      parameters:
        - id: callbackObject
          type:
            - object
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createInvalidIdTokenError
    name: createInvalidIdTokenError(IdToken)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createInvalidIdTokenError(idToken: IdToken)'
      parameters:
        - id: idToken
          type:
            - IdToken
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createInvalidPromptError
    name: createInvalidPromptError(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createInvalidPromptError(promptValue: any)'
      parameters:
        - id: promptValue
          type:
            - any
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createInvalidStateError
    name: 'createInvalidStateError(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createInvalidStateError(invalidState: string, actualState: string)'
      parameters:
        - id: invalidState
          type:
            - string
          description: ''
        - id: actualState
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createLoginInProgressError
    name: createLoginInProgressError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createLoginInProgressError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createMultipleAuthoritiesInCacheError
    name: createMultipleAuthoritiesInCacheError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createMultipleAuthoritiesInCacheError(scope: string)'
      parameters:
        - id: scope
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createMultipleMatchingTokensInCacheError
    name: createMultipleMatchingTokensInCacheError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createMultipleMatchingTokensInCacheError(scope: string)'
      parameters:
        - id: scope
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createNonceMismatchError
    name: 'createNonceMismatchError(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createNonceMismatchError(invalidNonce: string, actualNonce: string)'
      parameters:
        - id: invalidNonce
          type:
            - string
          description: ''
        - id: actualNonce
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createNoSetConfigurationError
    name: createNoSetConfigurationError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createNoSetConfigurationError()
      parameters: []
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createNoStorageSupportedError
    name: createNoStorageSupportedError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createNoStorageSupportedError()
      parameters: []
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createPopupWindowError
    name: createPopupWindowError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createPopupWindowError(errDetail?: string)'
      parameters:
        - id: errDetail
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createRedirectCallbacksNotSetError
    name: createRedirectCallbacksNotSetError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createRedirectCallbacksNotSetError()
      parameters: []
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createScopesNonArrayError
    name: createScopesNonArrayError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createScopesNonArrayError(scopesValue: string)'
      parameters:
        - id: scopesValue
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createScopesRequiredError
    name: createScopesRequiredError(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createScopesRequiredError(scopesValue: any)'
      parameters:
        - id: scopesValue
          type:
            - any
          description: ''
      return:
        type:
          - msal.ClientConfigurationError
    package: msal
  - uid: msal.ClientConfigurationError.createTokenEncodingError
    name: createTokenEncodingError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createTokenEncodingError(incorrectlyEncodedToken: string)'
      parameters:
        - id: incorrectlyEncodedToken
          type:
            - string
          description: ''
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createTokenRenewalTimeoutError
    name: createTokenRenewalTimeoutError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createTokenRenewalTimeoutError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createUnexpectedError
    name: createUnexpectedError(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createUnexpectedError(errDesc: string)'
      parameters:
        - id: errDesc
          type:
            - string
          description: ''
      return:
        type:
          - msal.AuthError
    package: msal
  - uid: msal.ClientConfigurationError.createUserCancelledError
    name: createUserCancelledError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createUserCancelledError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createUserDoesNotExistError
    name: createUserDoesNotExistError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createUserDoesNotExistError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.createUserLoginRequiredError
    name: createUserLoginRequiredError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createUserLoginRequiredError()
      parameters: []
      return:
        type:
          - msal.ClientAuthError
    package: msal
  - uid: msal.ClientConfigurationError.errorCode
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'errorCode: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.ClientConfigurationError.errorMessage
    name: errorMessage
    fullName: errorMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'errorMessage: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.ClientConfigurationError.message
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'message: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.ClientConfigurationError.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.ClientConfigurationError.stack
    name: stack
    fullName: stack
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stack?: string'
      return:
        type:
          - string
    package: msal
references:
  - uid: msal.ClientAuthError
    name: ClientAuthError
    spec.typeScript:
      - name: ClientAuthError
        fullName: ClientAuthError
        uid: msal.ClientAuthError
  - uid: msal.ClientConfigurationError
    name: ClientConfigurationError
    spec.typeScript:
      - name: ClientConfigurationError
        fullName: ClientConfigurationError
        uid: msal.ClientConfigurationError
  - uid: msal.AuthError
    name: AuthError
    spec.typeScript:
      - name: AuthError
        fullName: AuthError
        uid: msal.AuthError