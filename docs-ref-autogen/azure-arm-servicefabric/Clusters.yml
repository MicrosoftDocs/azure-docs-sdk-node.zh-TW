### YamlMime:UniversalReference
items:
  - uid: azure-arm-servicefabric.Clusters
    id: azure-arm-servicefabric.Clusters
    name: Clusters
    summary: Class representing a Clusters.
    fullName: azure-arm-servicefabric.Clusters
    source:
      id: azure-arm-servicefabric.Clusters
      path: lib\services\serviceFabricManagement\lib\operations\clusters.js
      startLine: 1817
      remote:
        branch: jsdoc
        path: lib\services\serviceFabricManagement\lib\operations\clusters.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-servicefabric.Clusters.#ctor'
      - 'azure-arm-servicefabric.Clusters#updateWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#update'
      - 'azure-arm-servicefabric.Clusters#getWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#get'
      - 'azure-arm-servicefabric.Clusters#createWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#create'
      - 'azure-arm-servicefabric.Clusters#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#deleteMethod'
      - >-
        azure-arm-servicefabric.Clusters#listByResourceGroupWithHttpOperationResponse
      - 'azure-arm-servicefabric.Clusters#listByResourceGroup'
      - 'azure-arm-servicefabric.Clusters#listWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#list'
      - 'azure-arm-servicefabric.Clusters#beginUpdateWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#beginUpdate'
      - 'azure-arm-servicefabric.Clusters#beginCreateWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#beginCreate'
      - >-
        azure-arm-servicefabric.Clusters#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-servicefabric.Clusters#listByResourceGroupNext'
      - 'azure-arm-servicefabric.Clusters#listNextWithHttpOperationResponse'
      - 'azure-arm-servicefabric.Clusters#listNext'
    langs:
      - js
  - id: 'azure-arm-servicefabric.Clusters.#ctor'
    uid: 'azure-arm-servicefabric.Clusters.#ctor'
    parent: azure-arm-servicefabric.Clusters
    name: Clusters(client)
    fullName: azure-arm-servicefabric.Clusters.Clusters(client)
    summary: Create a Clusters.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-servicefabric.ServiceFabricManagementClient
          description: Reference to the service client.
      content: new Clusters(client)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#updateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#updateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.updateWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: |-
            The parameters which contains the property value
            and property name which used to update the cluster configuration
        - id: parameters.reliabilityLevel
          type:
            - string
          description: |-
            This level is used to set the
            number of replicas of the system services. Possible values include:
            'Bronze', 'Silver', 'Gold'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: >-
            The ServiceFabric code

            version, if set it, please make sure you have set upgradeMode to
            Manual,

            otherwise ,it will fail, if you are using PUT new cluster, you can
            get the

            version by using ClusterVersions_List, if you are updating existing
            cluster,

            you can get the availableClusterVersions from Clusters_Get
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: >-
            This primay certificate will be

            used as cluster node to node security, SSL certificate for cluster

            management endpoint and default admin client, the certificate should
            exist

            in the virtual machine scale sets or Azure key vault, before you add
            it. It

            will override original value
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details, it is used for client access for cluster
            operation, it

            will override existing collection
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names.
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster, Note, it will overwrite existing collection
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            Certificate for the
            reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster, it will override
          optional: true
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, clusterName,
        parameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#update'
    id: 'azure-arm-servicefabric.Clusters#update'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      update(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.update(resourceGroupName, clusterName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: |-
            The parameters which contains the property value
            and property name which used to update the cluster configuration
        - id: parameters.reliabilityLevel
          type:
            - string
          description: |-
            This level is used to set the
            number of replicas of the system services. Possible values include:
            'Bronze', 'Silver', 'Gold'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: >-
            The ServiceFabric code

            version, if set it, please make sure you have set upgradeMode to
            Manual,

            otherwise ,it will fail, if you are using PUT new cluster, you can
            get the

            version by using ClusterVersions_List, if you are updating existing
            cluster,

            you can get the availableClusterVersions from Clusters_Get
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: >-
            This primay certificate will be

            used as cluster node to node security, SSL certificate for cluster

            management endpoint and default admin client, the certificate should
            exist

            in the virtual machine scale sets or Azure key vault, before you add
            it. It

            will override original value
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details, it is used for client access for cluster
            operation, it

            will override existing collection
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names.
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster, Note, it will overwrite existing collection
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            Certificate for the
            reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster, it will override
          optional: true
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, clusterName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#getWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#getWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: 'getWithHttpOperationResponse(resourceGroupName, clusterName, options)'
    summary: Get cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.getWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, clusterName,
        options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#get'
    id: 'azure-arm-servicefabric.Clusters#get'
    parent: azure-arm-servicefabric.Clusters
    name: 'get(resourceGroupName, clusterName, options, optionalCallback)'
    summary: Get cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.get(resourceGroupName, clusterName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, clusterName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#createWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#createWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      createWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.createWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: Put Request
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: |-
            The ServiceFabric code
            version running in your cluster
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: |-
            This primay certificate will be
            used as cluster node to node security, SSL certificate for cluster
            management endpoint and default admin client
          optional: true
        - id: parameters.reliabilityLevel
          type:
            - string
          description: >-
            Cluster reliability level

            indicates replica set size of system service. Possible values
            include:

            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details ,it is used for client access for cluster
            operation
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster.
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint
            of the cluster
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster
        - id: parameters.azureActiveDirectory
          type:
            - object
          description: |-
            The settings to enable AAD
            authentication on the cluster
          optional: true
        - id: parameters.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id
          optional: true
        - id: parameters.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id
          optional: true
        - id: parameters.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id
          optional: true
        - id: parameters.vmImage
          type:
            - string
          description: |-
            The name of VM image VMSS has been
            configured with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            diagnostics account configuration details
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: |-
            Diagnostics
            storage account name
        - id: parameters.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            Protected
            Diagnostics storage key name
        - id: parameters.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: Diagnostics storage account blob endpoint
        - id: parameters.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: Diagnostics storage account queue endpoint
        - id: parameters.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: Diagnostics storage account table endpoint
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, clusterName,
        parameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#create'
    id: 'azure-arm-servicefabric.Clusters#create'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      create(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.create(resourceGroupName, clusterName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: Put Request
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: |-
            The ServiceFabric code
            version running in your cluster
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: |-
            This primay certificate will be
            used as cluster node to node security, SSL certificate for cluster
            management endpoint and default admin client
          optional: true
        - id: parameters.reliabilityLevel
          type:
            - string
          description: >-
            Cluster reliability level

            indicates replica set size of system service. Possible values
            include:

            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details ,it is used for client access for cluster
            operation
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster.
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint
            of the cluster
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster
        - id: parameters.azureActiveDirectory
          type:
            - object
          description: |-
            The settings to enable AAD
            authentication on the cluster
          optional: true
        - id: parameters.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id
          optional: true
        - id: parameters.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id
          optional: true
        - id: parameters.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id
          optional: true
        - id: parameters.vmImage
          type:
            - string
          description: |-
            The name of VM image VMSS has been
            configured with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            diagnostics account configuration details
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: |-
            Diagnostics
            storage account name
        - id: parameters.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            Protected
            Diagnostics storage key name
        - id: parameters.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: Diagnostics storage account blob endpoint
        - id: parameters.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: Diagnostics storage account queue endpoint
        - id: parameters.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: Diagnostics storage account table endpoint
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, clusterName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, clusterName,
      options)
    summary: Delete cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.deleteMethodWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#deleteMethod'
    id: 'azure-arm-servicefabric.Clusters#deleteMethod'
    parent: azure-arm-servicefabric.Clusters
    name: 'deleteMethod(resourceGroupName, clusterName, options, optionalCallback)'
    summary: Delete cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.deleteMethod(resourceGroupName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupWithHttpOperationResponse
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listByResourceGroup'
    id: 'azure-arm-servicefabric.Clusters#listByResourceGroup'
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#listWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: listWithHttpOperationResponse(options)
    summary: List cluster resource
    fullName: azure-arm-servicefabric.Clusters.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#list'
    id: 'azure-arm-servicefabric.Clusters#list'
    parent: azure-arm-servicefabric.Clusters
    name: 'list(options, optionalCallback)'
    summary: List cluster resource
    fullName: 'azure-arm-servicefabric.Clusters.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginUpdateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#beginUpdateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.beginUpdateWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: |-
            The parameters which contains the property value
            and property name which used to update the cluster configuration
        - id: parameters.reliabilityLevel
          type:
            - string
          description: |-
            This level is used to set the
            number of replicas of the system services. Possible values include:
            'Bronze', 'Silver', 'Gold'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: >-
            The ServiceFabric code

            version, if set it, please make sure you have set upgradeMode to
            Manual,

            otherwise ,it will fail, if you are using PUT new cluster, you can
            get the

            version by using ClusterVersions_List, if you are updating existing
            cluster,

            you can get the availableClusterVersions from Clusters_Get
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: >-
            This primay certificate will be

            used as cluster node to node security, SSL certificate for cluster

            management endpoint and default admin client, the certificate should
            exist

            in the virtual machine scale sets or Azure key vault, before you add
            it. It

            will override original value
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details, it is used for client access for cluster
            operation, it

            will override existing collection
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names.
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster, Note, it will overwrite existing collection
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            Certificate for the
            reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster, it will override
          optional: true
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        clusterName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginUpdate'
    id: 'azure-arm-servicefabric.Clusters#beginUpdate'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginUpdate(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.beginUpdate(resourceGroupName,
      clusterName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: |-
            The parameters which contains the property value
            and property name which used to update the cluster configuration
        - id: parameters.reliabilityLevel
          type:
            - string
          description: |-
            This level is used to set the
            number of replicas of the system services. Possible values include:
            'Bronze', 'Silver', 'Gold'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: >-
            The ServiceFabric code

            version, if set it, please make sure you have set upgradeMode to
            Manual,

            otherwise ,it will fail, if you are using PUT new cluster, you can
            get the

            version by using ClusterVersions_List, if you are updating existing
            cluster,

            you can get the availableClusterVersions from Clusters_Get
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: >-
            This primay certificate will be

            used as cluster node to node security, SSL certificate for cluster

            management endpoint and default admin client, the certificate should
            exist

            in the virtual machine scale sets or Azure key vault, before you add
            it. It

            will override original value
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details, it is used for client access for cluster
            operation, it

            will override existing collection
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names.
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster, Note, it will overwrite existing collection
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            Certificate for the
            reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster, it will override
          optional: true
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdate(resourceGroupName, clusterName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#beginCreateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.beginCreateWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: Put Request
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: |-
            The ServiceFabric code
            version running in your cluster
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: |-
            This primay certificate will be
            used as cluster node to node security, SSL certificate for cluster
            management endpoint and default admin client
          optional: true
        - id: parameters.reliabilityLevel
          type:
            - string
          description: >-
            Cluster reliability level

            indicates replica set size of system service. Possible values
            include:

            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details ,it is used for client access for cluster
            operation
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster.
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint
            of the cluster
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster
        - id: parameters.azureActiveDirectory
          type:
            - object
          description: |-
            The settings to enable AAD
            authentication on the cluster
          optional: true
        - id: parameters.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id
          optional: true
        - id: parameters.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id
          optional: true
        - id: parameters.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id
          optional: true
        - id: parameters.vmImage
          type:
            - string
          description: |-
            The name of VM image VMSS has been
            configured with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            diagnostics account configuration details
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: |-
            Diagnostics
            storage account name
        - id: parameters.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            Protected
            Diagnostics storage key name
        - id: parameters.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: Diagnostics storage account blob endpoint
        - id: parameters.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: Diagnostics storage account queue endpoint
        - id: parameters.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: Diagnostics storage account table endpoint
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        clusterName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginCreate'
    id: 'azure-arm-servicefabric.Clusters#beginCreate'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginCreate(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.beginCreate(resourceGroupName,
      clusterName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the resource belongs or get created
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: parameters
          type:
            - object
          description: Put Request
        - id: parameters.clusterCodeVersion
          type:
            - string
          description: |-
            The ServiceFabric code
            version running in your cluster
          optional: true
        - id: parameters.certificate
          type:
            - object
          description: |-
            This primay certificate will be
            used as cluster node to node security, SSL certificate for cluster
            management endpoint and default admin client
          optional: true
        - id: parameters.reliabilityLevel
          type:
            - string
          description: >-
            Cluster reliability level

            indicates replica set size of system service. Possible values
            include:

            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: parameters.upgradeMode
          type:
            - string
          description: >-
            Cluster upgrade mode indicates if

            fabric upgrade is initiated automatically by the system or not.
            Possible

            values include: 'Automatic', 'Manual'
          optional: true
        - id: parameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The client

            thumbprint details ,it is used for client access for cluster
            operation
          optional: true
        - id: parameters.clientCertificateCommonNames
          type:
            - array
          description: |-
            List of client
            certificates to whitelist based on common names
          optional: true
        - id: parameters.fabricSettings
          type:
            - array
          description: |-
            List of custom fabric settings to
            configure the cluster.
          optional: true
        - id: parameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy
          optional: true
        - id: parameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of
            the primary certificate
        - id: parameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate
          optional: true
        - id: parameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: parameters.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint
            of the cluster
        - id: parameters.nodeTypes
          type:
            - array
          description: |-
            The list of nodetypes that make up the
            cluster
        - id: parameters.azureActiveDirectory
          type:
            - object
          description: |-
            The settings to enable AAD
            authentication on the cluster
          optional: true
        - id: parameters.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id
          optional: true
        - id: parameters.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id
          optional: true
        - id: parameters.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id
          optional: true
        - id: parameters.vmImage
          type:
            - string
          description: |-
            The name of VM image VMSS has been
            configured with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            diagnostics account configuration details
          optional: true
        - id: parameters.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: |-
            Diagnostics
            storage account name
        - id: parameters.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            Protected
            Diagnostics storage key name
        - id: parameters.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: Diagnostics storage account blob endpoint
        - id: parameters.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: Diagnostics storage account queue endpoint
        - id: parameters.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: Diagnostics storage account table endpoint
        - id: parameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: parameters.upgradeDescription.overrideUserUpgradePolicy
          type:
            - boolean
          description: Use the user defined upgrade policy or not
          optional: true
        - id: parameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: |-
            Force node to
            restart or not
          optional: true
        - id: parameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            Timeout for replica set upgrade to complete,it represents .Net
            TimeSpan
        - id: parameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks, it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            length of time that health checks must pass continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            length of time that health checks can fail continuously,it
            represents .Net

            TimeSpan
        - id: parameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: |-
            The upgrade
            timeout,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: |-
            The
            timeout for any upgrade domain,it represents .Net TimeSpan
        - id: parameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            Cluster health
            Policy
        - id: parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            parameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: parameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            Delta
            health policy
          optional: true
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: Additional unhealthy nodes percentage per upgrade domain
        - id: >-
            parameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: Additional unhealthy applications percentage
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, clusterName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupNextWithHttpOperationResponse
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listByResourceGroupNext'
    id: 'azure-arm-servicefabric.Clusters#listByResourceGroupNext'
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listNextWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#listNextWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listNext'
    id: 'azure-arm-servicefabric.Clusters#listNext'
    parent: azure-arm-servicefabric.Clusters
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: List cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-servicefabric.ServiceFabricManagementClient
    name: ServiceFabricManagementClient
    fullName: azure-arm-servicefabric.ServiceFabricManagementClient
    isExternal: false
